// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ediri.Stackit
{
    public static class GetDnsRecordSet
    {
        /// <summary>
        /// DNS Record Set Resource schema.
        /// 
        /// ## Example Usage
        /// 
        /// ```terraform
        /// data "stackit_dns_record_set" "example" {
        ///   project_id    = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   zone_id       = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   record_set_id = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        /// }
        /// ```
        /// </summary>
        public static Task<GetDnsRecordSetResult> InvokeAsync(GetDnsRecordSetArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDnsRecordSetResult>("stackit:index/getDnsRecordSet:getDnsRecordSet", args ?? new GetDnsRecordSetArgs(), options.WithDefaults());

        /// <summary>
        /// DNS Record Set Resource schema.
        /// 
        /// ## Example Usage
        /// 
        /// ```terraform
        /// data "stackit_dns_record_set" "example" {
        ///   project_id    = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   zone_id       = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   record_set_id = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        /// }
        /// ```
        /// </summary>
        public static Output<GetDnsRecordSetResult> Invoke(GetDnsRecordSetInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDnsRecordSetResult>("stackit:index/getDnsRecordSet:getDnsRecordSet", args ?? new GetDnsRecordSetInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// DNS Record Set Resource schema.
        /// 
        /// ## Example Usage
        /// 
        /// ```terraform
        /// data "stackit_dns_record_set" "example" {
        ///   project_id    = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   zone_id       = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   record_set_id = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        /// }
        /// ```
        /// </summary>
        public static Output<GetDnsRecordSetResult> Invoke(GetDnsRecordSetInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetDnsRecordSetResult>("stackit:index/getDnsRecordSet:getDnsRecordSet", args ?? new GetDnsRecordSetInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDnsRecordSetArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// STACKIT project ID to which the dns record set is associated.
        /// </summary>
        [Input("projectId", required: true)]
        public string ProjectId { get; set; } = null!;

        /// <summary>
        /// The rr set id.
        /// </summary>
        [Input("recordSetId", required: true)]
        public string RecordSetId { get; set; } = null!;

        /// <summary>
        /// The zone ID to which is dns record set is associated.
        /// </summary>
        [Input("zoneId", required: true)]
        public string ZoneId { get; set; } = null!;

        public GetDnsRecordSetArgs()
        {
        }
        public static new GetDnsRecordSetArgs Empty => new GetDnsRecordSetArgs();
    }

    public sealed class GetDnsRecordSetInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// STACKIT project ID to which the dns record set is associated.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        /// <summary>
        /// The rr set id.
        /// </summary>
        [Input("recordSetId", required: true)]
        public Input<string> RecordSetId { get; set; } = null!;

        /// <summary>
        /// The zone ID to which is dns record set is associated.
        /// </summary>
        [Input("zoneId", required: true)]
        public Input<string> ZoneId { get; set; } = null!;

        public GetDnsRecordSetInvokeArgs()
        {
        }
        public static new GetDnsRecordSetInvokeArgs Empty => new GetDnsRecordSetInvokeArgs();
    }


    [OutputType]
    public sealed class GetDnsRecordSetResult
    {
        /// <summary>
        /// Specifies if the record set is active or not.
        /// </summary>
        public readonly bool Active;
        /// <summary>
        /// Comment.
        /// </summary>
        public readonly string Comment;
        /// <summary>
        /// Error shows error in case create/update/delete failed.
        /// </summary>
        public readonly string Error;
        /// <summary>
        /// Fully qualified domain name (FQDN) of the record set.
        /// </summary>
        public readonly string Fqdn;
        public readonly string Id;
        /// <summary>
        /// Name of the record which should be a valid domain according to rfc1035 Section 2.3.4. E.g. `example.com`
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// STACKIT project ID to which the dns record set is associated.
        /// </summary>
        public readonly string ProjectId;
        /// <summary>
        /// The rr set id.
        /// </summary>
        public readonly string RecordSetId;
        /// <summary>
        /// Records.
        /// </summary>
        public readonly ImmutableArray<string> Records;
        /// <summary>
        /// Record set state.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Time to live. E.g. 3600
        /// </summary>
        public readonly int Ttl;
        /// <summary>
        /// The record set type. E.g. `A` or `CNAME`
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The zone ID to which is dns record set is associated.
        /// </summary>
        public readonly string ZoneId;

        [OutputConstructor]
        private GetDnsRecordSetResult(
            bool active,

            string comment,

            string error,

            string fqdn,

            string id,

            string name,

            string projectId,

            string recordSetId,

            ImmutableArray<string> records,

            string state,

            int ttl,

            string type,

            string zoneId)
        {
            Active = active;
            Comment = comment;
            Error = error;
            Fqdn = fqdn;
            Id = id;
            Name = name;
            ProjectId = projectId;
            RecordSetId = recordSetId;
            Records = records;
            State = state;
            Ttl = ttl;
            Type = type;
            ZoneId = zoneId;
        }
    }
}
