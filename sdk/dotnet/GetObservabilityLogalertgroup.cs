// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ediri.Stackit
{
    public static class GetObservabilityLogalertgroup
    {
        /// <summary>
        /// Observability log alert group datasource schema. Used to create alerts based on logs (Loki). Must have a `region` specified in the provider configuration.
        /// 
        /// ## Example Usage
        /// 
        /// ```terraform
        /// data "stackit_observability_logalertgroup" "example" {
        ///   project_id  = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   instance_id = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   name        = "example-log-alert-group"
        /// }
        /// ```
        /// </summary>
        public static Task<GetObservabilityLogalertgroupResult> InvokeAsync(GetObservabilityLogalertgroupArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetObservabilityLogalertgroupResult>("stackit:index/getObservabilityLogalertgroup:getObservabilityLogalertgroup", args ?? new GetObservabilityLogalertgroupArgs(), options.WithDefaults());

        /// <summary>
        /// Observability log alert group datasource schema. Used to create alerts based on logs (Loki). Must have a `region` specified in the provider configuration.
        /// 
        /// ## Example Usage
        /// 
        /// ```terraform
        /// data "stackit_observability_logalertgroup" "example" {
        ///   project_id  = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   instance_id = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   name        = "example-log-alert-group"
        /// }
        /// ```
        /// </summary>
        public static Output<GetObservabilityLogalertgroupResult> Invoke(GetObservabilityLogalertgroupInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetObservabilityLogalertgroupResult>("stackit:index/getObservabilityLogalertgroup:getObservabilityLogalertgroup", args ?? new GetObservabilityLogalertgroupInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Observability log alert group datasource schema. Used to create alerts based on logs (Loki). Must have a `region` specified in the provider configuration.
        /// 
        /// ## Example Usage
        /// 
        /// ```terraform
        /// data "stackit_observability_logalertgroup" "example" {
        ///   project_id  = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   instance_id = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   name        = "example-log-alert-group"
        /// }
        /// ```
        /// </summary>
        public static Output<GetObservabilityLogalertgroupResult> Invoke(GetObservabilityLogalertgroupInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetObservabilityLogalertgroupResult>("stackit:index/getObservabilityLogalertgroup:getObservabilityLogalertgroup", args ?? new GetObservabilityLogalertgroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetObservabilityLogalertgroupArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Observability instance ID to which the log alert group is associated.
        /// </summary>
        [Input("instanceId", required: true)]
        public string InstanceId { get; set; } = null!;

        /// <summary>
        /// The name of the log alert group. Is the identifier and must be unique in the group.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// STACKIT project ID to which the log alert group is associated.
        /// </summary>
        [Input("projectId", required: true)]
        public string ProjectId { get; set; } = null!;

        public GetObservabilityLogalertgroupArgs()
        {
        }
        public static new GetObservabilityLogalertgroupArgs Empty => new GetObservabilityLogalertgroupArgs();
    }

    public sealed class GetObservabilityLogalertgroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Observability instance ID to which the log alert group is associated.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        /// <summary>
        /// The name of the log alert group. Is the identifier and must be unique in the group.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// STACKIT project ID to which the log alert group is associated.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        public GetObservabilityLogalertgroupInvokeArgs()
        {
        }
        public static new GetObservabilityLogalertgroupInvokeArgs Empty => new GetObservabilityLogalertgroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetObservabilityLogalertgroupResult
    {
        public readonly string Id;
        /// <summary>
        /// Observability instance ID to which the log alert group is associated.
        /// </summary>
        public readonly string InstanceId;
        /// <summary>
        /// Specifies the frequency at which rules within the group are evaluated. The interval must be at least 60 seconds and defaults to 60 seconds if not set. Supported formats include hours, minutes, and seconds, either singly or in combination. Examples of valid formats are: '5h30m40s', '5h', '5h30m', '60m', and '60s'.
        /// </summary>
        public readonly string Interval;
        /// <summary>
        /// The name of the log alert group. Is the identifier and must be unique in the group.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// STACKIT project ID to which the log alert group is associated.
        /// </summary>
        public readonly string ProjectId;
        public readonly ImmutableArray<Outputs.GetObservabilityLogalertgroupRuleResult> Rules;

        [OutputConstructor]
        private GetObservabilityLogalertgroupResult(
            string id,

            string instanceId,

            string interval,

            string name,

            string projectId,

            ImmutableArray<Outputs.GetObservabilityLogalertgroupRuleResult> rules)
        {
            Id = id;
            InstanceId = instanceId;
            Interval = interval;
            Name = name;
            ProjectId = projectId;
            Rules = rules;
        }
    }
}
