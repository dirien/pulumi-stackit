// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ediri.Stackit
{
    /// <summary>
    /// Observability instance resource schema. Must have a `region` specified in the provider configuration.
    /// 
    /// ## Example Usage
    /// </summary>
    [StackitResourceType("stackit:index/observabilityInstance:ObservabilityInstance")]
    public partial class ObservabilityInstance : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The access control list for this instance. Each entry is an IP address range that is permitted to access, in CIDR notation.
        /// </summary>
        [Output("acls")]
        public Output<ImmutableArray<string>> Acls { get; private set; } = null!;

        /// <summary>
        /// Alert configuration for the instance.
        /// </summary>
        [Output("alertConfig")]
        public Output<Outputs.ObservabilityInstanceAlertConfig?> AlertConfig { get; private set; } = null!;

        /// <summary>
        /// Specifies Alerting URL.
        /// </summary>
        [Output("alertingUrl")]
        public Output<string> AlertingUrl { get; private set; } = null!;

        /// <summary>
        /// Specifies Observability instance dashboard URL.
        /// </summary>
        [Output("dashboardUrl")]
        public Output<string> DashboardUrl { get; private set; } = null!;

        /// <summary>
        /// Specifies an initial Grafana admin password.
        /// </summary>
        [Output("grafanaInitialAdminPassword")]
        public Output<string> GrafanaInitialAdminPassword { get; private set; } = null!;

        /// <summary>
        /// Specifies an initial Grafana admin username.
        /// </summary>
        [Output("grafanaInitialAdminUser")]
        public Output<string> GrafanaInitialAdminUser { get; private set; } = null!;

        /// <summary>
        /// If true, anyone can access Grafana dashboards without logging in.
        /// </summary>
        [Output("grafanaPublicReadAccess")]
        public Output<bool> GrafanaPublicReadAccess { get; private set; } = null!;

        /// <summary>
        /// Specifies Grafana URL.
        /// </summary>
        [Output("grafanaUrl")]
        public Output<string> GrafanaUrl { get; private set; } = null!;

        /// <summary>
        /// The Observability instance ID.
        /// </summary>
        [Output("instanceId")]
        public Output<string> InstanceId { get; private set; } = null!;

        /// <summary>
        /// Specifies if the instance can be updated.
        /// </summary>
        [Output("isUpdatable")]
        public Output<bool> IsUpdatable { get; private set; } = null!;

        [Output("jaegerTracesUrl")]
        public Output<string> JaegerTracesUrl { get; private set; } = null!;

        [Output("jaegerUiUrl")]
        public Output<string> JaegerUiUrl { get; private set; } = null!;

        /// <summary>
        /// Specifies URL for pushing logs.
        /// </summary>
        [Output("logsPushUrl")]
        public Output<string> LogsPushUrl { get; private set; } = null!;

        /// <summary>
        /// Specifies Logs URL.
        /// </summary>
        [Output("logsUrl")]
        public Output<string> LogsUrl { get; private set; } = null!;

        /// <summary>
        /// Specifies URL for pushing metrics.
        /// </summary>
        [Output("metricsPushUrl")]
        public Output<string> MetricsPushUrl { get; private set; } = null!;

        /// <summary>
        /// Specifies for how many days the raw metrics are kept.
        /// </summary>
        [Output("metricsRetentionDays")]
        public Output<int> MetricsRetentionDays { get; private set; } = null!;

        /// <summary>
        /// Specifies for how many days the 1h downsampled metrics are kept. must be less than the value of the 5m downsampling retention. Default is set to `0` (disabled).
        /// </summary>
        [Output("metricsRetentionDays1hDownsampling")]
        public Output<int> MetricsRetentionDays1hDownsampling { get; private set; } = null!;

        /// <summary>
        /// Specifies for how many days the 5m downsampled metrics are kept. must be less than the value of the general retention. Default is set to `0` (disabled).
        /// </summary>
        [Output("metricsRetentionDays5mDownsampling")]
        public Output<int> MetricsRetentionDays5mDownsampling { get; private set; } = null!;

        /// <summary>
        /// Specifies metrics URL.
        /// </summary>
        [Output("metricsUrl")]
        public Output<string> MetricsUrl { get; private set; } = null!;

        /// <summary>
        /// The name of the Observability instance.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("otlpTracesUrl")]
        public Output<string> OtlpTracesUrl { get; private set; } = null!;

        /// <summary>
        /// Additional parameters.
        /// </summary>
        [Output("parameters")]
        public Output<ImmutableDictionary<string, string>> Parameters { get; private set; } = null!;

        /// <summary>
        /// The Observability plan ID.
        /// </summary>
        [Output("planId")]
        public Output<string> PlanId { get; private set; } = null!;

        /// <summary>
        /// Specifies the Observability plan. E.g. `Observability-Monitoring-Medium-EU01`.
        /// </summary>
        [Output("planName")]
        public Output<string> PlanName { get; private set; } = null!;

        /// <summary>
        /// STACKIT project ID to which the instance is associated.
        /// </summary>
        [Output("projectId")]
        public Output<string> ProjectId { get; private set; } = null!;

        /// <summary>
        /// Specifies Targets URL.
        /// </summary>
        [Output("targetsUrl")]
        public Output<string> TargetsUrl { get; private set; } = null!;

        [Output("zipkinSpansUrl")]
        public Output<string> ZipkinSpansUrl { get; private set; } = null!;


        /// <summary>
        /// Create a ObservabilityInstance resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ObservabilityInstance(string name, ObservabilityInstanceArgs args, CustomResourceOptions? options = null)
            : base("stackit:index/observabilityInstance:ObservabilityInstance", name, args ?? new ObservabilityInstanceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ObservabilityInstance(string name, Input<string> id, ObservabilityInstanceState? state = null, CustomResourceOptions? options = null)
            : base("stackit:index/observabilityInstance:ObservabilityInstance", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/dirien/pulumi-stackit",
                AdditionalSecretOutputs =
                {
                    "grafanaInitialAdminPassword",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ObservabilityInstance resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ObservabilityInstance Get(string name, Input<string> id, ObservabilityInstanceState? state = null, CustomResourceOptions? options = null)
        {
            return new ObservabilityInstance(name, id, state, options);
        }
    }

    public sealed class ObservabilityInstanceArgs : global::Pulumi.ResourceArgs
    {
        [Input("acls")]
        private InputList<string>? _acls;

        /// <summary>
        /// The access control list for this instance. Each entry is an IP address range that is permitted to access, in CIDR notation.
        /// </summary>
        public InputList<string> Acls
        {
            get => _acls ?? (_acls = new InputList<string>());
            set => _acls = value;
        }

        /// <summary>
        /// Alert configuration for the instance.
        /// </summary>
        [Input("alertConfig")]
        public Input<Inputs.ObservabilityInstanceAlertConfigArgs>? AlertConfig { get; set; }

        /// <summary>
        /// Specifies for how many days the raw metrics are kept.
        /// </summary>
        [Input("metricsRetentionDays")]
        public Input<int>? MetricsRetentionDays { get; set; }

        /// <summary>
        /// Specifies for how many days the 1h downsampled metrics are kept. must be less than the value of the 5m downsampling retention. Default is set to `0` (disabled).
        /// </summary>
        [Input("metricsRetentionDays1hDownsampling")]
        public Input<int>? MetricsRetentionDays1hDownsampling { get; set; }

        /// <summary>
        /// Specifies for how many days the 5m downsampled metrics are kept. must be less than the value of the general retention. Default is set to `0` (disabled).
        /// </summary>
        [Input("metricsRetentionDays5mDownsampling")]
        public Input<int>? MetricsRetentionDays5mDownsampling { get; set; }

        /// <summary>
        /// The name of the Observability instance.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("parameters")]
        private InputMap<string>? _parameters;

        /// <summary>
        /// Additional parameters.
        /// </summary>
        public InputMap<string> Parameters
        {
            get => _parameters ?? (_parameters = new InputMap<string>());
            set => _parameters = value;
        }

        /// <summary>
        /// Specifies the Observability plan. E.g. `Observability-Monitoring-Medium-EU01`.
        /// </summary>
        [Input("planName", required: true)]
        public Input<string> PlanName { get; set; } = null!;

        /// <summary>
        /// STACKIT project ID to which the instance is associated.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        public ObservabilityInstanceArgs()
        {
        }
        public static new ObservabilityInstanceArgs Empty => new ObservabilityInstanceArgs();
    }

    public sealed class ObservabilityInstanceState : global::Pulumi.ResourceArgs
    {
        [Input("acls")]
        private InputList<string>? _acls;

        /// <summary>
        /// The access control list for this instance. Each entry is an IP address range that is permitted to access, in CIDR notation.
        /// </summary>
        public InputList<string> Acls
        {
            get => _acls ?? (_acls = new InputList<string>());
            set => _acls = value;
        }

        /// <summary>
        /// Alert configuration for the instance.
        /// </summary>
        [Input("alertConfig")]
        public Input<Inputs.ObservabilityInstanceAlertConfigGetArgs>? AlertConfig { get; set; }

        /// <summary>
        /// Specifies Alerting URL.
        /// </summary>
        [Input("alertingUrl")]
        public Input<string>? AlertingUrl { get; set; }

        /// <summary>
        /// Specifies Observability instance dashboard URL.
        /// </summary>
        [Input("dashboardUrl")]
        public Input<string>? DashboardUrl { get; set; }

        [Input("grafanaInitialAdminPassword")]
        private Input<string>? _grafanaInitialAdminPassword;

        /// <summary>
        /// Specifies an initial Grafana admin password.
        /// </summary>
        public Input<string>? GrafanaInitialAdminPassword
        {
            get => _grafanaInitialAdminPassword;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _grafanaInitialAdminPassword = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Specifies an initial Grafana admin username.
        /// </summary>
        [Input("grafanaInitialAdminUser")]
        public Input<string>? GrafanaInitialAdminUser { get; set; }

        /// <summary>
        /// If true, anyone can access Grafana dashboards without logging in.
        /// </summary>
        [Input("grafanaPublicReadAccess")]
        public Input<bool>? GrafanaPublicReadAccess { get; set; }

        /// <summary>
        /// Specifies Grafana URL.
        /// </summary>
        [Input("grafanaUrl")]
        public Input<string>? GrafanaUrl { get; set; }

        /// <summary>
        /// The Observability instance ID.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        /// <summary>
        /// Specifies if the instance can be updated.
        /// </summary>
        [Input("isUpdatable")]
        public Input<bool>? IsUpdatable { get; set; }

        [Input("jaegerTracesUrl")]
        public Input<string>? JaegerTracesUrl { get; set; }

        [Input("jaegerUiUrl")]
        public Input<string>? JaegerUiUrl { get; set; }

        /// <summary>
        /// Specifies URL for pushing logs.
        /// </summary>
        [Input("logsPushUrl")]
        public Input<string>? LogsPushUrl { get; set; }

        /// <summary>
        /// Specifies Logs URL.
        /// </summary>
        [Input("logsUrl")]
        public Input<string>? LogsUrl { get; set; }

        /// <summary>
        /// Specifies URL for pushing metrics.
        /// </summary>
        [Input("metricsPushUrl")]
        public Input<string>? MetricsPushUrl { get; set; }

        /// <summary>
        /// Specifies for how many days the raw metrics are kept.
        /// </summary>
        [Input("metricsRetentionDays")]
        public Input<int>? MetricsRetentionDays { get; set; }

        /// <summary>
        /// Specifies for how many days the 1h downsampled metrics are kept. must be less than the value of the 5m downsampling retention. Default is set to `0` (disabled).
        /// </summary>
        [Input("metricsRetentionDays1hDownsampling")]
        public Input<int>? MetricsRetentionDays1hDownsampling { get; set; }

        /// <summary>
        /// Specifies for how many days the 5m downsampled metrics are kept. must be less than the value of the general retention. Default is set to `0` (disabled).
        /// </summary>
        [Input("metricsRetentionDays5mDownsampling")]
        public Input<int>? MetricsRetentionDays5mDownsampling { get; set; }

        /// <summary>
        /// Specifies metrics URL.
        /// </summary>
        [Input("metricsUrl")]
        public Input<string>? MetricsUrl { get; set; }

        /// <summary>
        /// The name of the Observability instance.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("otlpTracesUrl")]
        public Input<string>? OtlpTracesUrl { get; set; }

        [Input("parameters")]
        private InputMap<string>? _parameters;

        /// <summary>
        /// Additional parameters.
        /// </summary>
        public InputMap<string> Parameters
        {
            get => _parameters ?? (_parameters = new InputMap<string>());
            set => _parameters = value;
        }

        /// <summary>
        /// The Observability plan ID.
        /// </summary>
        [Input("planId")]
        public Input<string>? PlanId { get; set; }

        /// <summary>
        /// Specifies the Observability plan. E.g. `Observability-Monitoring-Medium-EU01`.
        /// </summary>
        [Input("planName")]
        public Input<string>? PlanName { get; set; }

        /// <summary>
        /// STACKIT project ID to which the instance is associated.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// Specifies Targets URL.
        /// </summary>
        [Input("targetsUrl")]
        public Input<string>? TargetsUrl { get; set; }

        [Input("zipkinSpansUrl")]
        public Input<string>? ZipkinSpansUrl { get; set; }

        public ObservabilityInstanceState()
        {
        }
        public static new ObservabilityInstanceState Empty => new ObservabilityInstanceState();
    }
}
