// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ediri.Stackit
{
    public static class GetObservabilityScrapeconfig
    {
        /// <summary>
        /// Observability scrape config data source schema. Must have a `region` specified in the provider configuration.
        /// 
        /// ## Example Usage
        /// 
        /// ```terraform
        /// data "stackit_observability_scrapeconfig" "example" {
        ///   project_id  = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   instance_id = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   name        = "example"
        /// }
        /// ```
        /// </summary>
        public static Task<GetObservabilityScrapeconfigResult> InvokeAsync(GetObservabilityScrapeconfigArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetObservabilityScrapeconfigResult>("stackit:index/getObservabilityScrapeconfig:getObservabilityScrapeconfig", args ?? new GetObservabilityScrapeconfigArgs(), options.WithDefaults());

        /// <summary>
        /// Observability scrape config data source schema. Must have a `region` specified in the provider configuration.
        /// 
        /// ## Example Usage
        /// 
        /// ```terraform
        /// data "stackit_observability_scrapeconfig" "example" {
        ///   project_id  = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   instance_id = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   name        = "example"
        /// }
        /// ```
        /// </summary>
        public static Output<GetObservabilityScrapeconfigResult> Invoke(GetObservabilityScrapeconfigInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetObservabilityScrapeconfigResult>("stackit:index/getObservabilityScrapeconfig:getObservabilityScrapeconfig", args ?? new GetObservabilityScrapeconfigInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Observability scrape config data source schema. Must have a `region` specified in the provider configuration.
        /// 
        /// ## Example Usage
        /// 
        /// ```terraform
        /// data "stackit_observability_scrapeconfig" "example" {
        ///   project_id  = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   instance_id = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   name        = "example"
        /// }
        /// ```
        /// </summary>
        public static Output<GetObservabilityScrapeconfigResult> Invoke(GetObservabilityScrapeconfigInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetObservabilityScrapeconfigResult>("stackit:index/getObservabilityScrapeconfig:getObservabilityScrapeconfig", args ?? new GetObservabilityScrapeconfigInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetObservabilityScrapeconfigArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Observability instance ID to which the scraping job is associated.
        /// </summary>
        [Input("instanceId", required: true)]
        public string InstanceId { get; set; } = null!;

        /// <summary>
        /// Specifies the name of the scraping job
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// STACKIT project ID to which the scraping job is associated.
        /// </summary>
        [Input("projectId", required: true)]
        public string ProjectId { get; set; } = null!;

        public GetObservabilityScrapeconfigArgs()
        {
        }
        public static new GetObservabilityScrapeconfigArgs Empty => new GetObservabilityScrapeconfigArgs();
    }

    public sealed class GetObservabilityScrapeconfigInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Observability instance ID to which the scraping job is associated.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        /// <summary>
        /// Specifies the name of the scraping job
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// STACKIT project ID to which the scraping job is associated.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        public GetObservabilityScrapeconfigInvokeArgs()
        {
        }
        public static new GetObservabilityScrapeconfigInvokeArgs Empty => new GetObservabilityScrapeconfigInvokeArgs();
    }


    [OutputType]
    public sealed class GetObservabilityScrapeconfigResult
    {
        /// <summary>
        /// A basic authentication block.
        /// </summary>
        public readonly Outputs.GetObservabilityScrapeconfigBasicAuthResult BasicAuth;
        public readonly string Id;
        /// <summary>
        /// Observability instance ID to which the scraping job is associated.
        /// </summary>
        public readonly string InstanceId;
        /// <summary>
        /// Specifies the job scraping url path.
        /// </summary>
        public readonly string MetricsPath;
        /// <summary>
        /// Specifies the name of the scraping job
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// STACKIT project ID to which the scraping job is associated.
        /// </summary>
        public readonly string ProjectId;
        /// <summary>
        /// A SAML2 configuration block.
        /// </summary>
        public readonly Outputs.GetObservabilityScrapeconfigSaml2Result Saml2;
        /// <summary>
        /// Specifies the scrape sample limit.
        /// </summary>
        public readonly int SampleLimit;
        /// <summary>
        /// Specifies the http scheme.
        /// </summary>
        public readonly string Scheme;
        /// <summary>
        /// Specifies the scrape interval as duration string.
        /// </summary>
        public readonly string ScrapeInterval;
        /// <summary>
        /// Specifies the scrape timeout as duration string.
        /// </summary>
        public readonly string ScrapeTimeout;
        /// <summary>
        /// The targets list (specified by the static config).
        /// </summary>
        public readonly ImmutableArray<Outputs.GetObservabilityScrapeconfigTargetResult> Targets;

        [OutputConstructor]
        private GetObservabilityScrapeconfigResult(
            Outputs.GetObservabilityScrapeconfigBasicAuthResult basicAuth,

            string id,

            string instanceId,

            string metricsPath,

            string name,

            string projectId,

            Outputs.GetObservabilityScrapeconfigSaml2Result saml2,

            int sampleLimit,

            string scheme,

            string scrapeInterval,

            string scrapeTimeout,

            ImmutableArray<Outputs.GetObservabilityScrapeconfigTargetResult> targets)
        {
            BasicAuth = basicAuth;
            Id = id;
            InstanceId = instanceId;
            MetricsPath = metricsPath;
            Name = name;
            ProjectId = projectId;
            Saml2 = saml2;
            SampleLimit = sampleLimit;
            Scheme = scheme;
            ScrapeInterval = scrapeInterval;
            ScrapeTimeout = scrapeTimeout;
            Targets = targets;
        }
    }
}
