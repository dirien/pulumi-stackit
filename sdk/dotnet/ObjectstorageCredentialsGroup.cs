// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ediri.Stackit
{
    /// <summary>
    /// ObjectStorage credentials group resource schema. Must have a `region` specified in the provider configuration. If you are creating `credentialsgroup` and `bucket` resources simultaneously, please include the `depends_on` field so that they are created sequentially. This prevents errors from concurrent calls to the service enablement that is done in the background.
    /// 
    /// ## Example Usage
    /// </summary>
    [StackitResourceType("stackit:index/objectstorageCredentialsGroup:ObjectstorageCredentialsGroup")]
    public partial class ObjectstorageCredentialsGroup : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The credentials group ID
        /// </summary>
        [Output("credentialsGroupId")]
        public Output<string> CredentialsGroupId { get; private set; } = null!;

        /// <summary>
        /// The credentials group's display name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Project ID to which the credentials group is associated.
        /// </summary>
        [Output("projectId")]
        public Output<string> ProjectId { get; private set; } = null!;

        /// <summary>
        /// The resource region. If not defined, the provider region is used.
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        /// <summary>
        /// Credentials group uniform resource name (URN)
        /// </summary>
        [Output("urn")]
        public Output<string> Urn { get; private set; } = null!;


        /// <summary>
        /// Create a ObjectstorageCredentialsGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ObjectstorageCredentialsGroup(string name, ObjectstorageCredentialsGroupArgs args, CustomResourceOptions? options = null)
            : base("stackit:index/objectstorageCredentialsGroup:ObjectstorageCredentialsGroup", name, args ?? new ObjectstorageCredentialsGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ObjectstorageCredentialsGroup(string name, Input<string> id, ObjectstorageCredentialsGroupState? state = null, CustomResourceOptions? options = null)
            : base("stackit:index/objectstorageCredentialsGroup:ObjectstorageCredentialsGroup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/dirien/pulumi-stackit",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ObjectstorageCredentialsGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ObjectstorageCredentialsGroup Get(string name, Input<string> id, ObjectstorageCredentialsGroupState? state = null, CustomResourceOptions? options = null)
        {
            return new ObjectstorageCredentialsGroup(name, id, state, options);
        }
    }

    public sealed class ObjectstorageCredentialsGroupArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The credentials group's display name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Project ID to which the credentials group is associated.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        /// <summary>
        /// The resource region. If not defined, the provider region is used.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        public ObjectstorageCredentialsGroupArgs()
        {
        }
        public static new ObjectstorageCredentialsGroupArgs Empty => new ObjectstorageCredentialsGroupArgs();
    }

    public sealed class ObjectstorageCredentialsGroupState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The credentials group ID
        /// </summary>
        [Input("credentialsGroupId")]
        public Input<string>? CredentialsGroupId { get; set; }

        /// <summary>
        /// The credentials group's display name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Project ID to which the credentials group is associated.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// The resource region. If not defined, the provider region is used.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// Credentials group uniform resource name (URN)
        /// </summary>
        [Input("urn")]
        public Input<string>? Urn { get; set; }

        public ObjectstorageCredentialsGroupState()
        {
        }
        public static new ObjectstorageCredentialsGroupState Empty => new ObjectstorageCredentialsGroupState();
    }
}
