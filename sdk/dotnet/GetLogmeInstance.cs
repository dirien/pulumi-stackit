// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ediri.Stackit
{
    public static class GetLogmeInstance
    {
        /// <summary>
        /// LogMe instance data source schema. Must have a `region` specified in the provider configuration.
        /// 
        /// ## Example Usage
        /// 
        /// ```terraform
        /// data "stackit_logme_instance" "example" {
        ///   project_id  = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   instance_id = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        /// }
        /// ```
        /// </summary>
        public static Task<GetLogmeInstanceResult> InvokeAsync(GetLogmeInstanceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetLogmeInstanceResult>("stackit:index/getLogmeInstance:getLogmeInstance", args ?? new GetLogmeInstanceArgs(), options.WithDefaults());

        /// <summary>
        /// LogMe instance data source schema. Must have a `region` specified in the provider configuration.
        /// 
        /// ## Example Usage
        /// 
        /// ```terraform
        /// data "stackit_logme_instance" "example" {
        ///   project_id  = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   instance_id = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        /// }
        /// ```
        /// </summary>
        public static Output<GetLogmeInstanceResult> Invoke(GetLogmeInstanceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetLogmeInstanceResult>("stackit:index/getLogmeInstance:getLogmeInstance", args ?? new GetLogmeInstanceInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// LogMe instance data source schema. Must have a `region` specified in the provider configuration.
        /// 
        /// ## Example Usage
        /// 
        /// ```terraform
        /// data "stackit_logme_instance" "example" {
        ///   project_id  = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   instance_id = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        /// }
        /// ```
        /// </summary>
        public static Output<GetLogmeInstanceResult> Invoke(GetLogmeInstanceInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetLogmeInstanceResult>("stackit:index/getLogmeInstance:getLogmeInstance", args ?? new GetLogmeInstanceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetLogmeInstanceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of the LogMe instance.
        /// </summary>
        [Input("instanceId", required: true)]
        public string InstanceId { get; set; } = null!;

        /// <summary>
        /// STACKIT Project ID to which the instance is associated.
        /// </summary>
        [Input("projectId", required: true)]
        public string ProjectId { get; set; } = null!;

        public GetLogmeInstanceArgs()
        {
        }
        public static new GetLogmeInstanceArgs Empty => new GetLogmeInstanceArgs();
    }

    public sealed class GetLogmeInstanceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of the LogMe instance.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        /// <summary>
        /// STACKIT Project ID to which the instance is associated.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        public GetLogmeInstanceInvokeArgs()
        {
        }
        public static new GetLogmeInstanceInvokeArgs Empty => new GetLogmeInstanceInvokeArgs();
    }


    [OutputType]
    public sealed class GetLogmeInstanceResult
    {
        public readonly string CfGuid;
        public readonly string CfOrganizationGuid;
        public readonly string CfSpaceGuid;
        public readonly string DashboardUrl;
        public readonly string Id;
        public readonly string ImageUrl;
        /// <summary>
        /// ID of the LogMe instance.
        /// </summary>
        public readonly string InstanceId;
        /// <summary>
        /// Instance name.
        /// </summary>
        public readonly string Name;
        public readonly Outputs.GetLogmeInstanceParametersResult Parameters;
        /// <summary>
        /// The selected plan ID.
        /// </summary>
        public readonly string PlanId;
        /// <summary>
        /// The selected plan name.
        /// </summary>
        public readonly string PlanName;
        /// <summary>
        /// STACKIT Project ID to which the instance is associated.
        /// </summary>
        public readonly string ProjectId;
        /// <summary>
        /// The service version.
        /// </summary>
        public readonly string Version;

        [OutputConstructor]
        private GetLogmeInstanceResult(
            string cfGuid,

            string cfOrganizationGuid,

            string cfSpaceGuid,

            string dashboardUrl,

            string id,

            string imageUrl,

            string instanceId,

            string name,

            Outputs.GetLogmeInstanceParametersResult parameters,

            string planId,

            string planName,

            string projectId,

            string version)
        {
            CfGuid = cfGuid;
            CfOrganizationGuid = cfOrganizationGuid;
            CfSpaceGuid = cfSpaceGuid;
            DashboardUrl = dashboardUrl;
            Id = id;
            ImageUrl = imageUrl;
            InstanceId = instanceId;
            Name = name;
            Parameters = parameters;
            PlanId = planId;
            PlanName = planName;
            ProjectId = projectId;
            Version = version;
        }
    }
}
