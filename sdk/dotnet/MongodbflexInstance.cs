// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ediri.Stackit
{
    /// <summary>
    /// MongoDB Flex instance resource schema. Must have a `region` specified in the provider configuration.
    /// 
    /// ## Example Usage
    /// </summary>
    [StackitResourceType("stackit:index/mongodbflexInstance:MongodbflexInstance")]
    public partial class MongodbflexInstance : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Access Control List (ACL) for the MongoDB Flex instance.
        /// </summary>
        [Output("acls")]
        public Output<ImmutableArray<string>> Acls { get; private set; } = null!;

        /// <summary>
        /// The backup schedule. Should follow the cron scheduling system format (e.g. "0 0 * * *").
        /// </summary>
        [Output("backupSchedule")]
        public Output<string> BackupSchedule { get; private set; } = null!;

        [Output("flavor")]
        public Output<Outputs.MongodbflexInstanceFlavor> Flavor { get; private set; } = null!;

        /// <summary>
        /// ID of the MongoDB Flex instance.
        /// </summary>
        [Output("instanceId")]
        public Output<string> InstanceId { get; private set; } = null!;

        /// <summary>
        /// Instance name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("options")]
        public Output<Outputs.MongodbflexInstanceOptions> Options { get; private set; } = null!;

        /// <summary>
        /// STACKIT project ID to which the instance is associated.
        /// </summary>
        [Output("projectId")]
        public Output<string> ProjectId { get; private set; } = null!;

        [Output("replicas")]
        public Output<int> Replicas { get; private set; } = null!;

        [Output("storage")]
        public Output<Outputs.MongodbflexInstanceStorage> Storage { get; private set; } = null!;

        [Output("version")]
        public Output<string> Version { get; private set; } = null!;


        /// <summary>
        /// Create a MongodbflexInstance resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public MongodbflexInstance(string name, MongodbflexInstanceArgs args, CustomResourceOptions? options = null)
            : base("stackit:index/mongodbflexInstance:MongodbflexInstance", name, args ?? new MongodbflexInstanceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private MongodbflexInstance(string name, Input<string> id, MongodbflexInstanceState? state = null, CustomResourceOptions? options = null)
            : base("stackit:index/mongodbflexInstance:MongodbflexInstance", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/dirien/pulumi-stackit",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing MongodbflexInstance resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static MongodbflexInstance Get(string name, Input<string> id, MongodbflexInstanceState? state = null, CustomResourceOptions? options = null)
        {
            return new MongodbflexInstance(name, id, state, options);
        }
    }

    public sealed class MongodbflexInstanceArgs : global::Pulumi.ResourceArgs
    {
        [Input("acls", required: true)]
        private InputList<string>? _acls;

        /// <summary>
        /// The Access Control List (ACL) for the MongoDB Flex instance.
        /// </summary>
        public InputList<string> Acls
        {
            get => _acls ?? (_acls = new InputList<string>());
            set => _acls = value;
        }

        /// <summary>
        /// The backup schedule. Should follow the cron scheduling system format (e.g. "0 0 * * *").
        /// </summary>
        [Input("backupSchedule", required: true)]
        public Input<string> BackupSchedule { get; set; } = null!;

        [Input("flavor", required: true)]
        public Input<Inputs.MongodbflexInstanceFlavorArgs> Flavor { get; set; } = null!;

        /// <summary>
        /// Instance name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("options", required: true)]
        public Input<Inputs.MongodbflexInstanceOptionsArgs> Options { get; set; } = null!;

        /// <summary>
        /// STACKIT project ID to which the instance is associated.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        [Input("replicas", required: true)]
        public Input<int> Replicas { get; set; } = null!;

        [Input("storage", required: true)]
        public Input<Inputs.MongodbflexInstanceStorageArgs> Storage { get; set; } = null!;

        [Input("version", required: true)]
        public Input<string> Version { get; set; } = null!;

        public MongodbflexInstanceArgs()
        {
        }
        public static new MongodbflexInstanceArgs Empty => new MongodbflexInstanceArgs();
    }

    public sealed class MongodbflexInstanceState : global::Pulumi.ResourceArgs
    {
        [Input("acls")]
        private InputList<string>? _acls;

        /// <summary>
        /// The Access Control List (ACL) for the MongoDB Flex instance.
        /// </summary>
        public InputList<string> Acls
        {
            get => _acls ?? (_acls = new InputList<string>());
            set => _acls = value;
        }

        /// <summary>
        /// The backup schedule. Should follow the cron scheduling system format (e.g. "0 0 * * *").
        /// </summary>
        [Input("backupSchedule")]
        public Input<string>? BackupSchedule { get; set; }

        [Input("flavor")]
        public Input<Inputs.MongodbflexInstanceFlavorGetArgs>? Flavor { get; set; }

        /// <summary>
        /// ID of the MongoDB Flex instance.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        /// <summary>
        /// Instance name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("options")]
        public Input<Inputs.MongodbflexInstanceOptionsGetArgs>? Options { get; set; }

        /// <summary>
        /// STACKIT project ID to which the instance is associated.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        [Input("replicas")]
        public Input<int>? Replicas { get; set; }

        [Input("storage")]
        public Input<Inputs.MongodbflexInstanceStorageGetArgs>? Storage { get; set; }

        [Input("version")]
        public Input<string>? Version { get; set; }

        public MongodbflexInstanceState()
        {
        }
        public static new MongodbflexInstanceState Empty => new MongodbflexInstanceState();
    }
}
