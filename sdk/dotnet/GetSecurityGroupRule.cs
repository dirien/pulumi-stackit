// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ediri.Stackit
{
    public static class GetSecurityGroupRule
    {
        /// <summary>
        /// Security group datasource schema. Must have a `region` specified in the provider configuration.
        /// 
        /// ## Example Usage
        /// 
        /// ```terraform
        /// data "stackit_security_group_rule" "example" {
        ///   project_id             = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   security_group_id      = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   security_group_rule_id = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        /// }
        /// ```
        /// </summary>
        public static Task<GetSecurityGroupRuleResult> InvokeAsync(GetSecurityGroupRuleArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSecurityGroupRuleResult>("stackit:index/getSecurityGroupRule:getSecurityGroupRule", args ?? new GetSecurityGroupRuleArgs(), options.WithDefaults());

        /// <summary>
        /// Security group datasource schema. Must have a `region` specified in the provider configuration.
        /// 
        /// ## Example Usage
        /// 
        /// ```terraform
        /// data "stackit_security_group_rule" "example" {
        ///   project_id             = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   security_group_id      = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   security_group_rule_id = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        /// }
        /// ```
        /// </summary>
        public static Output<GetSecurityGroupRuleResult> Invoke(GetSecurityGroupRuleInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSecurityGroupRuleResult>("stackit:index/getSecurityGroupRule:getSecurityGroupRule", args ?? new GetSecurityGroupRuleInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Security group datasource schema. Must have a `region` specified in the provider configuration.
        /// 
        /// ## Example Usage
        /// 
        /// ```terraform
        /// data "stackit_security_group_rule" "example" {
        ///   project_id             = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   security_group_id      = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   security_group_rule_id = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        /// }
        /// ```
        /// </summary>
        public static Output<GetSecurityGroupRuleResult> Invoke(GetSecurityGroupRuleInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSecurityGroupRuleResult>("stackit:index/getSecurityGroupRule:getSecurityGroupRule", args ?? new GetSecurityGroupRuleInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSecurityGroupRuleArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// STACKIT project ID to which the security group rule is associated.
        /// </summary>
        [Input("projectId", required: true)]
        public string ProjectId { get; set; } = null!;

        /// <summary>
        /// The security group ID.
        /// </summary>
        [Input("securityGroupId", required: true)]
        public string SecurityGroupId { get; set; } = null!;

        /// <summary>
        /// The security group rule ID.
        /// </summary>
        [Input("securityGroupRuleId", required: true)]
        public string SecurityGroupRuleId { get; set; } = null!;

        public GetSecurityGroupRuleArgs()
        {
        }
        public static new GetSecurityGroupRuleArgs Empty => new GetSecurityGroupRuleArgs();
    }

    public sealed class GetSecurityGroupRuleInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// STACKIT project ID to which the security group rule is associated.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        /// <summary>
        /// The security group ID.
        /// </summary>
        [Input("securityGroupId", required: true)]
        public Input<string> SecurityGroupId { get; set; } = null!;

        /// <summary>
        /// The security group rule ID.
        /// </summary>
        [Input("securityGroupRuleId", required: true)]
        public Input<string> SecurityGroupRuleId { get; set; } = null!;

        public GetSecurityGroupRuleInvokeArgs()
        {
        }
        public static new GetSecurityGroupRuleInvokeArgs Empty => new GetSecurityGroupRuleInvokeArgs();
    }


    [OutputType]
    public sealed class GetSecurityGroupRuleResult
    {
        /// <summary>
        /// The description of the security group rule.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The direction of the traffic which the rule should match. Some of the possible values are: Supported values are: `ingress`, `egress`.
        /// </summary>
        public readonly string Direction;
        /// <summary>
        /// The ethertype which the rule should match.
        /// </summary>
        public readonly string EtherType;
        /// <summary>
        /// ICMP Parameters.
        /// </summary>
        public readonly Outputs.GetSecurityGroupRuleIcmpParametersResult IcmpParameters;
        public readonly string Id;
        /// <summary>
        /// The remote IP range which the rule should match.
        /// </summary>
        public readonly string IpRange;
        /// <summary>
        /// The range of ports.
        /// </summary>
        public readonly Outputs.GetSecurityGroupRulePortRangeResult PortRange;
        /// <summary>
        /// STACKIT project ID to which the security group rule is associated.
        /// </summary>
        public readonly string ProjectId;
        /// <summary>
        /// The internet protocol which the rule should match.
        /// </summary>
        public readonly Outputs.GetSecurityGroupRuleProtocolResult Protocol;
        /// <summary>
        /// The remote security group which the rule should match.
        /// </summary>
        public readonly string RemoteSecurityGroupId;
        /// <summary>
        /// The security group ID.
        /// </summary>
        public readonly string SecurityGroupId;
        /// <summary>
        /// The security group rule ID.
        /// </summary>
        public readonly string SecurityGroupRuleId;

        [OutputConstructor]
        private GetSecurityGroupRuleResult(
            string description,

            string direction,

            string etherType,

            Outputs.GetSecurityGroupRuleIcmpParametersResult icmpParameters,

            string id,

            string ipRange,

            Outputs.GetSecurityGroupRulePortRangeResult portRange,

            string projectId,

            Outputs.GetSecurityGroupRuleProtocolResult protocol,

            string remoteSecurityGroupId,

            string securityGroupId,

            string securityGroupRuleId)
        {
            Description = description;
            Direction = direction;
            EtherType = etherType;
            IcmpParameters = icmpParameters;
            Id = id;
            IpRange = ipRange;
            PortRange = portRange;
            ProjectId = projectId;
            Protocol = protocol;
            RemoteSecurityGroupId = remoteSecurityGroupId;
            SecurityGroupId = securityGroupId;
            SecurityGroupRuleId = securityGroupRuleId;
        }
    }
}
