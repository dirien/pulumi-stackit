// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ediri.Stackit
{
    public static class GetMongodbflexUser
    {
        /// <summary>
        /// MongoDB Flex user data source schema. Must have a `region` specified in the provider configuration.
        /// 
        /// ## Example Usage
        /// 
        /// ```terraform
        /// data "stackit_mongodbflex_user" "example" {
        ///   project_id  = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   instance_id = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   user_id     = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        /// }
        /// ```
        /// </summary>
        public static Task<GetMongodbflexUserResult> InvokeAsync(GetMongodbflexUserArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetMongodbflexUserResult>("stackit:index/getMongodbflexUser:getMongodbflexUser", args ?? new GetMongodbflexUserArgs(), options.WithDefaults());

        /// <summary>
        /// MongoDB Flex user data source schema. Must have a `region` specified in the provider configuration.
        /// 
        /// ## Example Usage
        /// 
        /// ```terraform
        /// data "stackit_mongodbflex_user" "example" {
        ///   project_id  = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   instance_id = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   user_id     = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        /// }
        /// ```
        /// </summary>
        public static Output<GetMongodbflexUserResult> Invoke(GetMongodbflexUserInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetMongodbflexUserResult>("stackit:index/getMongodbflexUser:getMongodbflexUser", args ?? new GetMongodbflexUserInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// MongoDB Flex user data source schema. Must have a `region` specified in the provider configuration.
        /// 
        /// ## Example Usage
        /// 
        /// ```terraform
        /// data "stackit_mongodbflex_user" "example" {
        ///   project_id  = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   instance_id = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   user_id     = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        /// }
        /// ```
        /// </summary>
        public static Output<GetMongodbflexUserResult> Invoke(GetMongodbflexUserInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetMongodbflexUserResult>("stackit:index/getMongodbflexUser:getMongodbflexUser", args ?? new GetMongodbflexUserInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMongodbflexUserArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of the MongoDB Flex instance.
        /// </summary>
        [Input("instanceId", required: true)]
        public string InstanceId { get; set; } = null!;

        /// <summary>
        /// STACKIT project ID to which the instance is associated.
        /// </summary>
        [Input("projectId", required: true)]
        public string ProjectId { get; set; } = null!;

        /// <summary>
        /// User ID.
        /// </summary>
        [Input("userId", required: true)]
        public string UserId { get; set; } = null!;

        public GetMongodbflexUserArgs()
        {
        }
        public static new GetMongodbflexUserArgs Empty => new GetMongodbflexUserArgs();
    }

    public sealed class GetMongodbflexUserInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of the MongoDB Flex instance.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        /// <summary>
        /// STACKIT project ID to which the instance is associated.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        /// <summary>
        /// User ID.
        /// </summary>
        [Input("userId", required: true)]
        public Input<string> UserId { get; set; } = null!;

        public GetMongodbflexUserInvokeArgs()
        {
        }
        public static new GetMongodbflexUserInvokeArgs Empty => new GetMongodbflexUserInvokeArgs();
    }


    [OutputType]
    public sealed class GetMongodbflexUserResult
    {
        public readonly string Database;
        public readonly string Host;
        public readonly string Id;
        /// <summary>
        /// ID of the MongoDB Flex instance.
        /// </summary>
        public readonly string InstanceId;
        public readonly int Port;
        /// <summary>
        /// STACKIT project ID to which the instance is associated.
        /// </summary>
        public readonly string ProjectId;
        public readonly ImmutableArray<string> Roles;
        /// <summary>
        /// User ID.
        /// </summary>
        public readonly string UserId;
        public readonly string Username;

        [OutputConstructor]
        private GetMongodbflexUserResult(
            string database,

            string host,

            string id,

            string instanceId,

            int port,

            string projectId,

            ImmutableArray<string> roles,

            string userId,

            string username)
        {
            Database = database;
            Host = host;
            Id = id;
            InstanceId = instanceId;
            Port = port;
            ProjectId = projectId;
            Roles = roles;
            UserId = userId;
            Username = username;
        }
    }
}
