// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ediri.Stackit
{
    public static class GetRabbitmqInstance
    {
        /// <summary>
        /// RabbitMQ instance data source schema. Must have a `region` specified in the provider configuration.
        /// 
        /// ## Example Usage
        /// 
        /// ```terraform
        /// data "stackit_rabbitmq_instance" "example" {
        ///   project_id  = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   instance_id = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        /// }
        /// ```
        /// </summary>
        public static Task<GetRabbitmqInstanceResult> InvokeAsync(GetRabbitmqInstanceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRabbitmqInstanceResult>("stackit:index/getRabbitmqInstance:getRabbitmqInstance", args ?? new GetRabbitmqInstanceArgs(), options.WithDefaults());

        /// <summary>
        /// RabbitMQ instance data source schema. Must have a `region` specified in the provider configuration.
        /// 
        /// ## Example Usage
        /// 
        /// ```terraform
        /// data "stackit_rabbitmq_instance" "example" {
        ///   project_id  = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   instance_id = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        /// }
        /// ```
        /// </summary>
        public static Output<GetRabbitmqInstanceResult> Invoke(GetRabbitmqInstanceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRabbitmqInstanceResult>("stackit:index/getRabbitmqInstance:getRabbitmqInstance", args ?? new GetRabbitmqInstanceInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// RabbitMQ instance data source schema. Must have a `region` specified in the provider configuration.
        /// 
        /// ## Example Usage
        /// 
        /// ```terraform
        /// data "stackit_rabbitmq_instance" "example" {
        ///   project_id  = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   instance_id = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        /// }
        /// ```
        /// </summary>
        public static Output<GetRabbitmqInstanceResult> Invoke(GetRabbitmqInstanceInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetRabbitmqInstanceResult>("stackit:index/getRabbitmqInstance:getRabbitmqInstance", args ?? new GetRabbitmqInstanceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRabbitmqInstanceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of the RabbitMQ instance.
        /// </summary>
        [Input("instanceId", required: true)]
        public string InstanceId { get; set; } = null!;

        /// <summary>
        /// STACKIT Project ID to which the instance is associated.
        /// </summary>
        [Input("projectId", required: true)]
        public string ProjectId { get; set; } = null!;

        public GetRabbitmqInstanceArgs()
        {
        }
        public static new GetRabbitmqInstanceArgs Empty => new GetRabbitmqInstanceArgs();
    }

    public sealed class GetRabbitmqInstanceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of the RabbitMQ instance.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        /// <summary>
        /// STACKIT Project ID to which the instance is associated.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        public GetRabbitmqInstanceInvokeArgs()
        {
        }
        public static new GetRabbitmqInstanceInvokeArgs Empty => new GetRabbitmqInstanceInvokeArgs();
    }


    [OutputType]
    public sealed class GetRabbitmqInstanceResult
    {
        public readonly string CfGuid;
        public readonly string CfOrganizationGuid;
        public readonly string CfSpaceGuid;
        public readonly string DashboardUrl;
        public readonly string Id;
        public readonly string ImageUrl;
        /// <summary>
        /// ID of the RabbitMQ instance.
        /// </summary>
        public readonly string InstanceId;
        /// <summary>
        /// Instance name.
        /// </summary>
        public readonly string Name;
        public readonly Outputs.GetRabbitmqInstanceParametersResult Parameters;
        /// <summary>
        /// The selected plan ID.
        /// </summary>
        public readonly string PlanId;
        /// <summary>
        /// The selected plan name.
        /// </summary>
        public readonly string PlanName;
        /// <summary>
        /// STACKIT Project ID to which the instance is associated.
        /// </summary>
        public readonly string ProjectId;
        /// <summary>
        /// The service version.
        /// </summary>
        public readonly string Version;

        [OutputConstructor]
        private GetRabbitmqInstanceResult(
            string cfGuid,

            string cfOrganizationGuid,

            string cfSpaceGuid,

            string dashboardUrl,

            string id,

            string imageUrl,

            string instanceId,

            string name,

            Outputs.GetRabbitmqInstanceParametersResult parameters,

            string planId,

            string planName,

            string projectId,

            string version)
        {
            CfGuid = cfGuid;
            CfOrganizationGuid = cfOrganizationGuid;
            CfSpaceGuid = cfSpaceGuid;
            DashboardUrl = dashboardUrl;
            Id = id;
            ImageUrl = imageUrl;
            InstanceId = instanceId;
            Name = name;
            Parameters = parameters;
            PlanId = planId;
            PlanName = planName;
            ProjectId = projectId;
            Version = version;
        }
    }
}
