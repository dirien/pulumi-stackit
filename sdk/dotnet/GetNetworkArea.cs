// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ediri.Stackit
{
    public static class GetNetworkArea
    {
        /// <summary>
        /// Network area datasource schema. Must have a `region` specified in the provider configuration.
        /// 
        /// ## Example Usage
        /// 
        /// ```terraform
        /// data "stackit_network_area" "example" {
        ///   organization_id = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   network_area_id = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        /// }
        /// ```
        /// </summary>
        public static Task<GetNetworkAreaResult> InvokeAsync(GetNetworkAreaArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNetworkAreaResult>("stackit:index/getNetworkArea:getNetworkArea", args ?? new GetNetworkAreaArgs(), options.WithDefaults());

        /// <summary>
        /// Network area datasource schema. Must have a `region` specified in the provider configuration.
        /// 
        /// ## Example Usage
        /// 
        /// ```terraform
        /// data "stackit_network_area" "example" {
        ///   organization_id = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   network_area_id = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        /// }
        /// ```
        /// </summary>
        public static Output<GetNetworkAreaResult> Invoke(GetNetworkAreaInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNetworkAreaResult>("stackit:index/getNetworkArea:getNetworkArea", args ?? new GetNetworkAreaInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Network area datasource schema. Must have a `region` specified in the provider configuration.
        /// 
        /// ## Example Usage
        /// 
        /// ```terraform
        /// data "stackit_network_area" "example" {
        ///   organization_id = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   network_area_id = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        /// }
        /// ```
        /// </summary>
        public static Output<GetNetworkAreaResult> Invoke(GetNetworkAreaInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetNetworkAreaResult>("stackit:index/getNetworkArea:getNetworkArea", args ?? new GetNetworkAreaInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNetworkAreaArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The network area ID.
        /// </summary>
        [Input("networkAreaId", required: true)]
        public string NetworkAreaId { get; set; } = null!;

        /// <summary>
        /// STACKIT organization ID to which the network area is associated.
        /// </summary>
        [Input("organizationId", required: true)]
        public string OrganizationId { get; set; } = null!;

        public GetNetworkAreaArgs()
        {
        }
        public static new GetNetworkAreaArgs Empty => new GetNetworkAreaArgs();
    }

    public sealed class GetNetworkAreaInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The network area ID.
        /// </summary>
        [Input("networkAreaId", required: true)]
        public Input<string> NetworkAreaId { get; set; } = null!;

        /// <summary>
        /// STACKIT organization ID to which the network area is associated.
        /// </summary>
        [Input("organizationId", required: true)]
        public Input<string> OrganizationId { get; set; } = null!;

        public GetNetworkAreaInvokeArgs()
        {
        }
        public static new GetNetworkAreaInvokeArgs Empty => new GetNetworkAreaInvokeArgs();
    }


    [OutputType]
    public sealed class GetNetworkAreaResult
    {
        /// <summary>
        /// List of DNS Servers/Nameservers.
        /// </summary>
        public readonly ImmutableArray<string> DefaultNameservers;
        /// <summary>
        /// The default prefix length for networks in the network area.
        /// </summary>
        public readonly int DefaultPrefixLength;
        public readonly string Id;
        /// <summary>
        /// Labels are key-value string pairs which can be attached to a resource container
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        /// <summary>
        /// The maximal prefix length for networks in the network area.
        /// </summary>
        public readonly int MaxPrefixLength;
        /// <summary>
        /// The minimal prefix length for networks in the network area.
        /// </summary>
        public readonly int MinPrefixLength;
        /// <summary>
        /// The name of the network area.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The network area ID.
        /// </summary>
        public readonly string NetworkAreaId;
        /// <summary>
        /// List of Network ranges.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNetworkAreaNetworkRangeResult> NetworkRanges;
        /// <summary>
        /// STACKIT organization ID to which the network area is associated.
        /// </summary>
        public readonly string OrganizationId;
        /// <summary>
        /// The amount of projects currently referencing this area.
        /// </summary>
        public readonly int ProjectCount;
        /// <summary>
        /// Classless Inter-Domain Routing (CIDR).
        /// </summary>
        public readonly string TransferNetwork;

        [OutputConstructor]
        private GetNetworkAreaResult(
            ImmutableArray<string> defaultNameservers,

            int defaultPrefixLength,

            string id,

            ImmutableDictionary<string, string> labels,

            int maxPrefixLength,

            int minPrefixLength,

            string name,

            string networkAreaId,

            ImmutableArray<Outputs.GetNetworkAreaNetworkRangeResult> networkRanges,

            string organizationId,

            int projectCount,

            string transferNetwork)
        {
            DefaultNameservers = defaultNameservers;
            DefaultPrefixLength = defaultPrefixLength;
            Id = id;
            Labels = labels;
            MaxPrefixLength = maxPrefixLength;
            MinPrefixLength = minPrefixLength;
            Name = name;
            NetworkAreaId = networkAreaId;
            NetworkRanges = networkRanges;
            OrganizationId = organizationId;
            ProjectCount = projectCount;
            TransferNetwork = transferNetwork;
        }
    }
}
