// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ediri.Stackit
{
    public static class GetMongodbflexInstance
    {
        /// <summary>
        /// MongoDB Flex instance data source schema. Must have a `region` specified in the provider configuration.
        /// 
        /// ## Example Usage
        /// 
        /// ```terraform
        /// data "stackit_mongodbflex_instance" "example" {
        ///   project_id  = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   instance_id = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        /// }
        /// ```
        /// </summary>
        public static Task<GetMongodbflexInstanceResult> InvokeAsync(GetMongodbflexInstanceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetMongodbflexInstanceResult>("stackit:index/getMongodbflexInstance:getMongodbflexInstance", args ?? new GetMongodbflexInstanceArgs(), options.WithDefaults());

        /// <summary>
        /// MongoDB Flex instance data source schema. Must have a `region` specified in the provider configuration.
        /// 
        /// ## Example Usage
        /// 
        /// ```terraform
        /// data "stackit_mongodbflex_instance" "example" {
        ///   project_id  = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   instance_id = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        /// }
        /// ```
        /// </summary>
        public static Output<GetMongodbflexInstanceResult> Invoke(GetMongodbflexInstanceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetMongodbflexInstanceResult>("stackit:index/getMongodbflexInstance:getMongodbflexInstance", args ?? new GetMongodbflexInstanceInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// MongoDB Flex instance data source schema. Must have a `region` specified in the provider configuration.
        /// 
        /// ## Example Usage
        /// 
        /// ```terraform
        /// data "stackit_mongodbflex_instance" "example" {
        ///   project_id  = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   instance_id = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        /// }
        /// ```
        /// </summary>
        public static Output<GetMongodbflexInstanceResult> Invoke(GetMongodbflexInstanceInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetMongodbflexInstanceResult>("stackit:index/getMongodbflexInstance:getMongodbflexInstance", args ?? new GetMongodbflexInstanceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMongodbflexInstanceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of the MongoDB Flex instance.
        /// </summary>
        [Input("instanceId", required: true)]
        public string InstanceId { get; set; } = null!;

        /// <summary>
        /// STACKIT project ID to which the instance is associated.
        /// </summary>
        [Input("projectId", required: true)]
        public string ProjectId { get; set; } = null!;

        public GetMongodbflexInstanceArgs()
        {
        }
        public static new GetMongodbflexInstanceArgs Empty => new GetMongodbflexInstanceArgs();
    }

    public sealed class GetMongodbflexInstanceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of the MongoDB Flex instance.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        /// <summary>
        /// STACKIT project ID to which the instance is associated.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        public GetMongodbflexInstanceInvokeArgs()
        {
        }
        public static new GetMongodbflexInstanceInvokeArgs Empty => new GetMongodbflexInstanceInvokeArgs();
    }


    [OutputType]
    public sealed class GetMongodbflexInstanceResult
    {
        /// <summary>
        /// The Access Control List (ACL) for the MongoDB Flex instance.
        /// </summary>
        public readonly ImmutableArray<string> Acls;
        /// <summary>
        /// The backup schedule. Should follow the cron scheduling system format (e.g. "0 0 * * *").
        /// </summary>
        public readonly string BackupSchedule;
        public readonly Outputs.GetMongodbflexInstanceFlavorResult Flavor;
        public readonly string Id;
        /// <summary>
        /// ID of the MongoDB Flex instance.
        /// </summary>
        public readonly string InstanceId;
        /// <summary>
        /// Instance name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Custom parameters for the MongoDB Flex instance.
        /// </summary>
        public readonly Outputs.GetMongodbflexInstanceOptionsResult Options;
        /// <summary>
        /// STACKIT project ID to which the instance is associated.
        /// </summary>
        public readonly string ProjectId;
        public readonly int Replicas;
        public readonly Outputs.GetMongodbflexInstanceStorageResult Storage;
        public readonly string Version;

        [OutputConstructor]
        private GetMongodbflexInstanceResult(
            ImmutableArray<string> acls,

            string backupSchedule,

            Outputs.GetMongodbflexInstanceFlavorResult flavor,

            string id,

            string instanceId,

            string name,

            Outputs.GetMongodbflexInstanceOptionsResult options,

            string projectId,

            int replicas,

            Outputs.GetMongodbflexInstanceStorageResult storage,

            string version)
        {
            Acls = acls;
            BackupSchedule = backupSchedule;
            Flavor = flavor;
            Id = id;
            InstanceId = instanceId;
            Name = name;
            Options = options;
            ProjectId = projectId;
            Replicas = replicas;
            Storage = storage;
            Version = version;
        }
    }
}
