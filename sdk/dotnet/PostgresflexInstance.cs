// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ediri.Stackit
{
    /// <summary>
    /// Postgres Flex instance resource schema. Must have a `region` specified in the provider configuration.
    /// 
    /// ## Example Usage
    /// </summary>
    [StackitResourceType("stackit:index/postgresflexInstance:PostgresflexInstance")]
    public partial class PostgresflexInstance : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Access Control List (ACL) for the PostgresFlex instance.
        /// </summary>
        [Output("acls")]
        public Output<ImmutableArray<string>> Acls { get; private set; } = null!;

        [Output("backupSchedule")]
        public Output<string> BackupSchedule { get; private set; } = null!;

        [Output("flavor")]
        public Output<Outputs.PostgresflexInstanceFlavor> Flavor { get; private set; } = null!;

        /// <summary>
        /// ID of the PostgresFlex instance.
        /// </summary>
        [Output("instanceId")]
        public Output<string> InstanceId { get; private set; } = null!;

        /// <summary>
        /// Instance name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// STACKIT project ID to which the instance is associated.
        /// </summary>
        [Output("projectId")]
        public Output<string> ProjectId { get; private set; } = null!;

        /// <summary>
        /// The resource region. If not defined, the provider region is used.
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        [Output("replicas")]
        public Output<int> Replicas { get; private set; } = null!;

        [Output("storage")]
        public Output<Outputs.PostgresflexInstanceStorage> Storage { get; private set; } = null!;

        [Output("version")]
        public Output<string> Version { get; private set; } = null!;


        /// <summary>
        /// Create a PostgresflexInstance resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PostgresflexInstance(string name, PostgresflexInstanceArgs args, CustomResourceOptions? options = null)
            : base("stackit:index/postgresflexInstance:PostgresflexInstance", name, args ?? new PostgresflexInstanceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PostgresflexInstance(string name, Input<string> id, PostgresflexInstanceState? state = null, CustomResourceOptions? options = null)
            : base("stackit:index/postgresflexInstance:PostgresflexInstance", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/dirien/pulumi-stackit",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PostgresflexInstance resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PostgresflexInstance Get(string name, Input<string> id, PostgresflexInstanceState? state = null, CustomResourceOptions? options = null)
        {
            return new PostgresflexInstance(name, id, state, options);
        }
    }

    public sealed class PostgresflexInstanceArgs : global::Pulumi.ResourceArgs
    {
        [Input("acls", required: true)]
        private InputList<string>? _acls;

        /// <summary>
        /// The Access Control List (ACL) for the PostgresFlex instance.
        /// </summary>
        public InputList<string> Acls
        {
            get => _acls ?? (_acls = new InputList<string>());
            set => _acls = value;
        }

        [Input("backupSchedule", required: true)]
        public Input<string> BackupSchedule { get; set; } = null!;

        [Input("flavor", required: true)]
        public Input<Inputs.PostgresflexInstanceFlavorArgs> Flavor { get; set; } = null!;

        /// <summary>
        /// Instance name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// STACKIT project ID to which the instance is associated.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        /// <summary>
        /// The resource region. If not defined, the provider region is used.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("replicas", required: true)]
        public Input<int> Replicas { get; set; } = null!;

        [Input("storage", required: true)]
        public Input<Inputs.PostgresflexInstanceStorageArgs> Storage { get; set; } = null!;

        [Input("version", required: true)]
        public Input<string> Version { get; set; } = null!;

        public PostgresflexInstanceArgs()
        {
        }
        public static new PostgresflexInstanceArgs Empty => new PostgresflexInstanceArgs();
    }

    public sealed class PostgresflexInstanceState : global::Pulumi.ResourceArgs
    {
        [Input("acls")]
        private InputList<string>? _acls;

        /// <summary>
        /// The Access Control List (ACL) for the PostgresFlex instance.
        /// </summary>
        public InputList<string> Acls
        {
            get => _acls ?? (_acls = new InputList<string>());
            set => _acls = value;
        }

        [Input("backupSchedule")]
        public Input<string>? BackupSchedule { get; set; }

        [Input("flavor")]
        public Input<Inputs.PostgresflexInstanceFlavorGetArgs>? Flavor { get; set; }

        /// <summary>
        /// ID of the PostgresFlex instance.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        /// <summary>
        /// Instance name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// STACKIT project ID to which the instance is associated.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// The resource region. If not defined, the provider region is used.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("replicas")]
        public Input<int>? Replicas { get; set; }

        [Input("storage")]
        public Input<Inputs.PostgresflexInstanceStorageGetArgs>? Storage { get; set; }

        [Input("version")]
        public Input<string>? Version { get; set; }

        public PostgresflexInstanceState()
        {
        }
        public static new PostgresflexInstanceState Empty => new PostgresflexInstanceState();
    }
}
