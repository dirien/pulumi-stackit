// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ediri.Stackit
{
    public static class GetRabbitmqCredential
    {
        /// <summary>
        /// RabbitMQ credential data source schema. Must have a `region` specified in the provider configuration.
        /// 
        /// ## Example Usage
        /// 
        /// ```terraform
        /// data "stackit_rabbitmq_credential" "example" {
        ///   project_id    = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   instance_id   = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   credential_id = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        /// }
        /// ```
        /// </summary>
        public static Task<GetRabbitmqCredentialResult> InvokeAsync(GetRabbitmqCredentialArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRabbitmqCredentialResult>("stackit:index/getRabbitmqCredential:getRabbitmqCredential", args ?? new GetRabbitmqCredentialArgs(), options.WithDefaults());

        /// <summary>
        /// RabbitMQ credential data source schema. Must have a `region` specified in the provider configuration.
        /// 
        /// ## Example Usage
        /// 
        /// ```terraform
        /// data "stackit_rabbitmq_credential" "example" {
        ///   project_id    = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   instance_id   = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   credential_id = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        /// }
        /// ```
        /// </summary>
        public static Output<GetRabbitmqCredentialResult> Invoke(GetRabbitmqCredentialInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRabbitmqCredentialResult>("stackit:index/getRabbitmqCredential:getRabbitmqCredential", args ?? new GetRabbitmqCredentialInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// RabbitMQ credential data source schema. Must have a `region` specified in the provider configuration.
        /// 
        /// ## Example Usage
        /// 
        /// ```terraform
        /// data "stackit_rabbitmq_credential" "example" {
        ///   project_id    = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   instance_id   = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   credential_id = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        /// }
        /// ```
        /// </summary>
        public static Output<GetRabbitmqCredentialResult> Invoke(GetRabbitmqCredentialInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetRabbitmqCredentialResult>("stackit:index/getRabbitmqCredential:getRabbitmqCredential", args ?? new GetRabbitmqCredentialInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRabbitmqCredentialArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The credential's ID.
        /// </summary>
        [Input("credentialId", required: true)]
        public string CredentialId { get; set; } = null!;

        /// <summary>
        /// ID of the RabbitMQ instance.
        /// </summary>
        [Input("instanceId", required: true)]
        public string InstanceId { get; set; } = null!;

        /// <summary>
        /// STACKIT project ID to which the instance is associated.
        /// </summary>
        [Input("projectId", required: true)]
        public string ProjectId { get; set; } = null!;

        public GetRabbitmqCredentialArgs()
        {
        }
        public static new GetRabbitmqCredentialArgs Empty => new GetRabbitmqCredentialArgs();
    }

    public sealed class GetRabbitmqCredentialInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The credential's ID.
        /// </summary>
        [Input("credentialId", required: true)]
        public Input<string> CredentialId { get; set; } = null!;

        /// <summary>
        /// ID of the RabbitMQ instance.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        /// <summary>
        /// STACKIT project ID to which the instance is associated.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        public GetRabbitmqCredentialInvokeArgs()
        {
        }
        public static new GetRabbitmqCredentialInvokeArgs Empty => new GetRabbitmqCredentialInvokeArgs();
    }


    [OutputType]
    public sealed class GetRabbitmqCredentialResult
    {
        /// <summary>
        /// The credential's ID.
        /// </summary>
        public readonly string CredentialId;
        public readonly string Host;
        public readonly ImmutableArray<string> Hosts;
        public readonly string HttpApiUri;
        public readonly ImmutableArray<string> HttpApiUris;
        public readonly string Id;
        /// <summary>
        /// ID of the RabbitMQ instance.
        /// </summary>
        public readonly string InstanceId;
        public readonly string Management;
        public readonly string Password;
        public readonly int Port;
        /// <summary>
        /// STACKIT project ID to which the instance is associated.
        /// </summary>
        public readonly string ProjectId;
        public readonly string Uri;
        public readonly ImmutableArray<string> Uris;
        public readonly string Username;

        [OutputConstructor]
        private GetRabbitmqCredentialResult(
            string credentialId,

            string host,

            ImmutableArray<string> hosts,

            string httpApiUri,

            ImmutableArray<string> httpApiUris,

            string id,

            string instanceId,

            string management,

            string password,

            int port,

            string projectId,

            string uri,

            ImmutableArray<string> uris,

            string username)
        {
            CredentialId = credentialId;
            Host = host;
            Hosts = hosts;
            HttpApiUri = httpApiUri;
            HttpApiUris = httpApiUris;
            Id = id;
            InstanceId = instanceId;
            Management = management;
            Password = password;
            Port = port;
            ProjectId = projectId;
            Uri = uri;
            Uris = uris;
            Username = username;
        }
    }
}
