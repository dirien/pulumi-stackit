// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ediri.Stackit
{
    public static class GetGit
    {
        /// <summary>
        /// Git Instance datasource schema.
        /// 
        /// &gt; This datasource is in beta and may be subject to breaking changes in the future. Use with caution. See our guide for how to opt-in to use beta resources.
        /// 
        /// ## Example Usage
        /// 
        /// ```terraform
        /// data "stackit_git" "git" {
        ///   project_id  = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   instance_id = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        /// }
        /// ```
        /// </summary>
        public static Task<GetGitResult> InvokeAsync(GetGitArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetGitResult>("stackit:index/getGit:getGit", args ?? new GetGitArgs(), options.WithDefaults());

        /// <summary>
        /// Git Instance datasource schema.
        /// 
        /// &gt; This datasource is in beta and may be subject to breaking changes in the future. Use with caution. See our guide for how to opt-in to use beta resources.
        /// 
        /// ## Example Usage
        /// 
        /// ```terraform
        /// data "stackit_git" "git" {
        ///   project_id  = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   instance_id = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        /// }
        /// ```
        /// </summary>
        public static Output<GetGitResult> Invoke(GetGitInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetGitResult>("stackit:index/getGit:getGit", args ?? new GetGitInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Git Instance datasource schema.
        /// 
        /// &gt; This datasource is in beta and may be subject to breaking changes in the future. Use with caution. See our guide for how to opt-in to use beta resources.
        /// 
        /// ## Example Usage
        /// 
        /// ```terraform
        /// data "stackit_git" "git" {
        ///   project_id  = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   instance_id = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        /// }
        /// ```
        /// </summary>
        public static Output<GetGitResult> Invoke(GetGitInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetGitResult>("stackit:index/getGit:getGit", args ?? new GetGitInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGitArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID linked to the git instance.
        /// </summary>
        [Input("instanceId", required: true)]
        public string InstanceId { get; set; } = null!;

        /// <summary>
        /// STACKIT project ID to which the git instance is associated.
        /// </summary>
        [Input("projectId", required: true)]
        public string ProjectId { get; set; } = null!;

        public GetGitArgs()
        {
        }
        public static new GetGitArgs Empty => new GetGitArgs();
    }

    public sealed class GetGitInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID linked to the git instance.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        /// <summary>
        /// STACKIT project ID to which the git instance is associated.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        public GetGitInvokeArgs()
        {
        }
        public static new GetGitInvokeArgs Empty => new GetGitInvokeArgs();
    }


    [OutputType]
    public sealed class GetGitResult
    {
        /// <summary>
        /// Restricted ACL for instance access.
        /// </summary>
        public readonly ImmutableArray<string> Acls;
        /// <summary>
        /// How many bytes of disk space is consumed.
        /// </summary>
        public readonly string ConsumedDisk;
        /// <summary>
        /// How many bytes of Object Storage is consumed.
        /// </summary>
        public readonly string ConsumedObjectStorage;
        /// <summary>
        /// Instance creation timestamp in RFC3339 format.
        /// </summary>
        public readonly string Created;
        /// <summary>
        /// Instance flavor. If not provided, defaults to git-100. For a list of available flavors, refer to our API documentation: `https://docs.api.stackit.cloud/documentation/git/version/v1beta`
        /// </summary>
        public readonly string Flavor;
        public readonly string Id;
        /// <summary>
        /// ID linked to the git instance.
        /// </summary>
        public readonly string InstanceId;
        /// <summary>
        /// Unique name linked to the git instance.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// STACKIT project ID to which the git instance is associated.
        /// </summary>
        public readonly string ProjectId;
        /// <summary>
        /// Url linked to the git instance.
        /// </summary>
        public readonly string Url;
        /// <summary>
        /// Version linked to the git instance.
        /// </summary>
        public readonly string Version;

        [OutputConstructor]
        private GetGitResult(
            ImmutableArray<string> acls,

            string consumedDisk,

            string consumedObjectStorage,

            string created,

            string flavor,

            string id,

            string instanceId,

            string name,

            string projectId,

            string url,

            string version)
        {
            Acls = acls;
            ConsumedDisk = consumedDisk;
            ConsumedObjectStorage = consumedObjectStorage;
            Created = created;
            Flavor = flavor;
            Id = id;
            InstanceId = instanceId;
            Name = name;
            ProjectId = projectId;
            Url = url;
            Version = version;
        }
    }
}
