// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Immutable;

namespace ediri.Stackit
{
    public static class Config
    {
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "IDE1006", Justification = 
        "Double underscore prefix used to avoid conflicts with variable names.")]
        private sealed class __Value<T>
        {
            private readonly Func<T> _getter;
            private T _value = default!;
            private bool _set;

            public __Value(Func<T> getter)
            {
                _getter = getter;
            }

            public T Get() => _set ? _value : _getter();

            public void Set(T value)
            {
                _value = value;
                _set = true;
            }
        }

        private static readonly global::Pulumi.Config __config = new global::Pulumi.Config("stackit");

        private static readonly __Value<string?> _authorizationCustomEndpoint = new __Value<string?>(() => __config.Get("authorizationCustomEndpoint"));
        /// <summary>
        /// Custom endpoint for the Membership service
        /// </summary>
        public static string? AuthorizationCustomEndpoint
        {
            get => _authorizationCustomEndpoint.Get();
            set => _authorizationCustomEndpoint.Set(value);
        }

        private static readonly __Value<string?> _cdnCustomEndpoint = new __Value<string?>(() => __config.Get("cdnCustomEndpoint"));
        /// <summary>
        /// Custom endpoint for the CDN service
        /// </summary>
        public static string? CdnCustomEndpoint
        {
            get => _cdnCustomEndpoint.Get();
            set => _cdnCustomEndpoint.Set(value);
        }

        private static readonly __Value<string?> _credentialsPath = new __Value<string?>(() => __config.Get("credentialsPath"));
        /// <summary>
        /// Path of JSON from where the credentials are read. Takes precedence over the env var `STACKIT_CREDENTIALS_PATH`. Default
        /// value is `~/.stackit/credentials.json`.
        /// </summary>
        public static string? CredentialsPath
        {
            get => _credentialsPath.Get();
            set => _credentialsPath.Set(value);
        }

        private static readonly __Value<string?> _defaultRegion = new __Value<string?>(() => __config.Get("defaultRegion"));
        /// <summary>
        /// Region will be used as the default location for regional services. Not all services require a region, some are global
        /// </summary>
        public static string? DefaultRegion
        {
            get => _defaultRegion.Get();
            set => _defaultRegion.Set(value);
        }

        private static readonly __Value<string?> _dnsCustomEndpoint = new __Value<string?>(() => __config.Get("dnsCustomEndpoint"));
        /// <summary>
        /// Custom endpoint for the DNS service
        /// </summary>
        public static string? DnsCustomEndpoint
        {
            get => _dnsCustomEndpoint.Get();
            set => _dnsCustomEndpoint.Set(value);
        }

        private static readonly __Value<bool?> _enableBetaResources = new __Value<bool?>(() => __config.GetBoolean("enableBetaResources"));
        /// <summary>
        /// Enable beta resources. Default is false.
        /// </summary>
        public static bool? EnableBetaResources
        {
            get => _enableBetaResources.Get();
            set => _enableBetaResources.Set(value);
        }

        private static readonly __Value<ImmutableArray<string>> _experiments = new __Value<ImmutableArray<string>>(() => __config.GetObject<ImmutableArray<string>>("experiments"));
        /// <summary>
        /// Enables experiments. These are unstable features without official support. More information can be found in the README.
        /// Available Experiments: iam, routing-tables, network
        /// </summary>
        public static ImmutableArray<string> Experiments
        {
            get => _experiments.Get();
            set => _experiments.Set(value);
        }

        private static readonly __Value<string?> _gitCustomEndpoint = new __Value<string?>(() => __config.Get("gitCustomEndpoint"));
        /// <summary>
        /// Custom endpoint for the Git service
        /// </summary>
        public static string? GitCustomEndpoint
        {
            get => _gitCustomEndpoint.Get();
            set => _gitCustomEndpoint.Set(value);
        }

        private static readonly __Value<string?> _iaasCustomEndpoint = new __Value<string?>(() => __config.Get("iaasCustomEndpoint"));
        /// <summary>
        /// Custom endpoint for the IaaS service
        /// </summary>
        public static string? IaasCustomEndpoint
        {
            get => _iaasCustomEndpoint.Get();
            set => _iaasCustomEndpoint.Set(value);
        }

        private static readonly __Value<string?> _loadbalancerCustomEndpoint = new __Value<string?>(() => __config.Get("loadbalancerCustomEndpoint"));
        /// <summary>
        /// Custom endpoint for the Load Balancer service
        /// </summary>
        public static string? LoadbalancerCustomEndpoint
        {
            get => _loadbalancerCustomEndpoint.Get();
            set => _loadbalancerCustomEndpoint.Set(value);
        }

        private static readonly __Value<string?> _logmeCustomEndpoint = new __Value<string?>(() => __config.Get("logmeCustomEndpoint"));
        /// <summary>
        /// Custom endpoint for the LogMe service
        /// </summary>
        public static string? LogmeCustomEndpoint
        {
            get => _logmeCustomEndpoint.Get();
            set => _logmeCustomEndpoint.Set(value);
        }

        private static readonly __Value<string?> _mariadbCustomEndpoint = new __Value<string?>(() => __config.Get("mariadbCustomEndpoint"));
        /// <summary>
        /// Custom endpoint for the MariaDB service
        /// </summary>
        public static string? MariadbCustomEndpoint
        {
            get => _mariadbCustomEndpoint.Get();
            set => _mariadbCustomEndpoint.Set(value);
        }

        private static readonly __Value<string?> _modelservingCustomEndpoint = new __Value<string?>(() => __config.Get("modelservingCustomEndpoint"));
        /// <summary>
        /// Custom endpoint for the AI Model Serving service
        /// </summary>
        public static string? ModelservingCustomEndpoint
        {
            get => _modelservingCustomEndpoint.Get();
            set => _modelservingCustomEndpoint.Set(value);
        }

        private static readonly __Value<string?> _mongodbflexCustomEndpoint = new __Value<string?>(() => __config.Get("mongodbflexCustomEndpoint"));
        /// <summary>
        /// Custom endpoint for the MongoDB Flex service
        /// </summary>
        public static string? MongodbflexCustomEndpoint
        {
            get => _mongodbflexCustomEndpoint.Get();
            set => _mongodbflexCustomEndpoint.Set(value);
        }

        private static readonly __Value<string?> _objectstorageCustomEndpoint = new __Value<string?>(() => __config.Get("objectstorageCustomEndpoint"));
        /// <summary>
        /// Custom endpoint for the Object Storage service
        /// </summary>
        public static string? ObjectstorageCustomEndpoint
        {
            get => _objectstorageCustomEndpoint.Get();
            set => _objectstorageCustomEndpoint.Set(value);
        }

        private static readonly __Value<string?> _observabilityCustomEndpoint = new __Value<string?>(() => __config.Get("observabilityCustomEndpoint"));
        /// <summary>
        /// Custom endpoint for the Observability service
        /// </summary>
        public static string? ObservabilityCustomEndpoint
        {
            get => _observabilityCustomEndpoint.Get();
            set => _observabilityCustomEndpoint.Set(value);
        }

        private static readonly __Value<string?> _opensearchCustomEndpoint = new __Value<string?>(() => __config.Get("opensearchCustomEndpoint"));
        /// <summary>
        /// Custom endpoint for the OpenSearch service
        /// </summary>
        public static string? OpensearchCustomEndpoint
        {
            get => _opensearchCustomEndpoint.Get();
            set => _opensearchCustomEndpoint.Set(value);
        }

        private static readonly __Value<string?> _postgresflexCustomEndpoint = new __Value<string?>(() => __config.Get("postgresflexCustomEndpoint"));
        /// <summary>
        /// Custom endpoint for the PostgresFlex service
        /// </summary>
        public static string? PostgresflexCustomEndpoint
        {
            get => _postgresflexCustomEndpoint.Get();
            set => _postgresflexCustomEndpoint.Set(value);
        }

        private static readonly __Value<string?> _privateKey = new __Value<string?>(() => __config.Get("privateKey"));
        /// <summary>
        /// Private RSA key used for authentication, relevant for the key flow. It takes precedence over the private key that is
        /// included in the service account key.
        /// </summary>
        public static string? PrivateKey
        {
            get => _privateKey.Get();
            set => _privateKey.Set(value);
        }

        private static readonly __Value<string?> _privateKeyPath = new __Value<string?>(() => __config.Get("privateKeyPath"));
        /// <summary>
        /// Path for the private RSA key used for authentication, relevant for the key flow. It takes precedence over the private
        /// key that is included in the service account key.
        /// </summary>
        public static string? PrivateKeyPath
        {
            get => _privateKeyPath.Get();
            set => _privateKeyPath.Set(value);
        }

        private static readonly __Value<string?> _rabbitmqCustomEndpoint = new __Value<string?>(() => __config.Get("rabbitmqCustomEndpoint"));
        /// <summary>
        /// Custom endpoint for the RabbitMQ service
        /// </summary>
        public static string? RabbitmqCustomEndpoint
        {
            get => _rabbitmqCustomEndpoint.Get();
            set => _rabbitmqCustomEndpoint.Set(value);
        }

        private static readonly __Value<string?> _redisCustomEndpoint = new __Value<string?>(() => __config.Get("redisCustomEndpoint"));
        /// <summary>
        /// Custom endpoint for the Redis service
        /// </summary>
        public static string? RedisCustomEndpoint
        {
            get => _redisCustomEndpoint.Get();
            set => _redisCustomEndpoint.Set(value);
        }

        private static readonly __Value<string?> _region = new __Value<string?>(() => __config.Get("region"));
        /// <summary>
        /// Region will be used as the default location for regional services. Not all services require a region, some are global
        /// </summary>
        public static string? Region
        {
            get => _region.Get();
            set => _region.Set(value);
        }

        private static readonly __Value<string?> _resourcemanagerCustomEndpoint = new __Value<string?>(() => __config.Get("resourcemanagerCustomEndpoint"));
        /// <summary>
        /// Custom endpoint for the Resource Manager service
        /// </summary>
        public static string? ResourcemanagerCustomEndpoint
        {
            get => _resourcemanagerCustomEndpoint.Get();
            set => _resourcemanagerCustomEndpoint.Set(value);
        }

        private static readonly __Value<string?> _secretsmanagerCustomEndpoint = new __Value<string?>(() => __config.Get("secretsmanagerCustomEndpoint"));
        /// <summary>
        /// Custom endpoint for the Secrets Manager service
        /// </summary>
        public static string? SecretsmanagerCustomEndpoint
        {
            get => _secretsmanagerCustomEndpoint.Get();
            set => _secretsmanagerCustomEndpoint.Set(value);
        }

        private static readonly __Value<string?> _serverBackupCustomEndpoint = new __Value<string?>(() => __config.Get("serverBackupCustomEndpoint"));
        /// <summary>
        /// Custom endpoint for the Server Backup service
        /// </summary>
        public static string? ServerBackupCustomEndpoint
        {
            get => _serverBackupCustomEndpoint.Get();
            set => _serverBackupCustomEndpoint.Set(value);
        }

        private static readonly __Value<string?> _serverUpdateCustomEndpoint = new __Value<string?>(() => __config.Get("serverUpdateCustomEndpoint"));
        /// <summary>
        /// Custom endpoint for the Server Update service
        /// </summary>
        public static string? ServerUpdateCustomEndpoint
        {
            get => _serverUpdateCustomEndpoint.Get();
            set => _serverUpdateCustomEndpoint.Set(value);
        }

        private static readonly __Value<string?> _serviceAccountCustomEndpoint = new __Value<string?>(() => __config.Get("serviceAccountCustomEndpoint"));
        /// <summary>
        /// Custom endpoint for the Service Account service
        /// </summary>
        public static string? ServiceAccountCustomEndpoint
        {
            get => _serviceAccountCustomEndpoint.Get();
            set => _serviceAccountCustomEndpoint.Set(value);
        }

        private static readonly __Value<string?> _serviceAccountEmail = new __Value<string?>(() => __config.Get("serviceAccountEmail"));
        /// <summary>
        /// Service account email. It can also be set using the environment variable STACKIT_SERVICE_ACCOUNT_EMAIL. It is required
        /// if you want to use the resource manager project resource.
        /// </summary>
        public static string? ServiceAccountEmail
        {
            get => _serviceAccountEmail.Get();
            set => _serviceAccountEmail.Set(value);
        }

        private static readonly __Value<string?> _serviceAccountKey = new __Value<string?>(() => __config.Get("serviceAccountKey"));
        /// <summary>
        /// Service account key used for authentication. If set, the key flow will be used to authenticate all operations.
        /// </summary>
        public static string? ServiceAccountKey
        {
            get => _serviceAccountKey.Get();
            set => _serviceAccountKey.Set(value);
        }

        private static readonly __Value<string?> _serviceAccountKeyPath = new __Value<string?>(() => __config.Get("serviceAccountKeyPath"));
        /// <summary>
        /// Path for the service account key used for authentication. If set, the key flow will be used to authenticate all
        /// operations.
        /// </summary>
        public static string? ServiceAccountKeyPath
        {
            get => _serviceAccountKeyPath.Get();
            set => _serviceAccountKeyPath.Set(value);
        }

        private static readonly __Value<string?> _serviceAccountToken = new __Value<string?>(() => __config.Get("serviceAccountToken"));
        /// <summary>
        /// Token used for authentication. If set, the token flow will be used to authenticate all operations.
        /// </summary>
        public static string? ServiceAccountToken
        {
            get => _serviceAccountToken.Get();
            set => _serviceAccountToken.Set(value);
        }

        private static readonly __Value<string?> _serviceEnablementCustomEndpoint = new __Value<string?>(() => __config.Get("serviceEnablementCustomEndpoint"));
        /// <summary>
        /// Custom endpoint for the Service Enablement API
        /// </summary>
        public static string? ServiceEnablementCustomEndpoint
        {
            get => _serviceEnablementCustomEndpoint.Get();
            set => _serviceEnablementCustomEndpoint.Set(value);
        }

        private static readonly __Value<string?> _skeCustomEndpoint = new __Value<string?>(() => __config.Get("skeCustomEndpoint"));
        /// <summary>
        /// Custom endpoint for the Kubernetes Engine (SKE) service
        /// </summary>
        public static string? SkeCustomEndpoint
        {
            get => _skeCustomEndpoint.Get();
            set => _skeCustomEndpoint.Set(value);
        }

        private static readonly __Value<string?> _sqlserverflexCustomEndpoint = new __Value<string?>(() => __config.Get("sqlserverflexCustomEndpoint"));
        /// <summary>
        /// Custom endpoint for the SQL Server Flex service
        /// </summary>
        public static string? SqlserverflexCustomEndpoint
        {
            get => _sqlserverflexCustomEndpoint.Get();
            set => _sqlserverflexCustomEndpoint.Set(value);
        }

        private static readonly __Value<string?> _tokenCustomEndpoint = new __Value<string?>(() => __config.Get("tokenCustomEndpoint"));
        /// <summary>
        /// Custom endpoint for the token API, which is used to request access tokens when using the key flow
        /// </summary>
        public static string? TokenCustomEndpoint
        {
            get => _tokenCustomEndpoint.Get();
            set => _tokenCustomEndpoint.Set(value);
        }

    }
}
