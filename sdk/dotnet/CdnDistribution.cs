// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ediri.Stackit
{
    /// <summary>
    /// CDN distribution data source schema.
    /// 
    /// &gt; This resource is in beta and may be subject to breaking changes in the future. Use with caution. See our guide for how to opt-in to use beta resources.
    /// 
    /// ## Example Usage
    /// </summary>
    [StackitResourceType("stackit:index/cdnDistribution:CdnDistribution")]
    public partial class CdnDistribution : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The distribution configuration
        /// </summary>
        [Output("config")]
        public Output<Outputs.CdnDistributionConfig> Config { get; private set; } = null!;

        /// <summary>
        /// Time when the distribution was created
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// CDN distribution ID
        /// </summary>
        [Output("distributionId")]
        public Output<string> DistributionId { get; private set; } = null!;

        /// <summary>
        /// List of configured domains for the distribution
        /// </summary>
        [Output("domains")]
        public Output<ImmutableArray<Outputs.CdnDistributionDomain>> Domains { get; private set; } = null!;

        /// <summary>
        /// List of distribution errors
        /// </summary>
        [Output("errors")]
        public Output<ImmutableArray<string>> Errors { get; private set; } = null!;

        /// <summary>
        /// STACKIT project ID associated with the distribution
        /// </summary>
        [Output("projectId")]
        public Output<string> ProjectId { get; private set; } = null!;

        /// <summary>
        /// Status of the distribution
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// Time when the distribution was last updated
        /// </summary>
        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;


        /// <summary>
        /// Create a CdnDistribution resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CdnDistribution(string name, CdnDistributionArgs args, CustomResourceOptions? options = null)
            : base("stackit:index/cdnDistribution:CdnDistribution", name, args ?? new CdnDistributionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CdnDistribution(string name, Input<string> id, CdnDistributionState? state = null, CustomResourceOptions? options = null)
            : base("stackit:index/cdnDistribution:CdnDistribution", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/dirien/pulumi-stackit",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CdnDistribution resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CdnDistribution Get(string name, Input<string> id, CdnDistributionState? state = null, CustomResourceOptions? options = null)
        {
            return new CdnDistribution(name, id, state, options);
        }
    }

    public sealed class CdnDistributionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The distribution configuration
        /// </summary>
        [Input("config", required: true)]
        public Input<Inputs.CdnDistributionConfigArgs> Config { get; set; } = null!;

        /// <summary>
        /// STACKIT project ID associated with the distribution
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        public CdnDistributionArgs()
        {
        }
        public static new CdnDistributionArgs Empty => new CdnDistributionArgs();
    }

    public sealed class CdnDistributionState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The distribution configuration
        /// </summary>
        [Input("config")]
        public Input<Inputs.CdnDistributionConfigGetArgs>? Config { get; set; }

        /// <summary>
        /// Time when the distribution was created
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// CDN distribution ID
        /// </summary>
        [Input("distributionId")]
        public Input<string>? DistributionId { get; set; }

        [Input("domains")]
        private InputList<Inputs.CdnDistributionDomainGetArgs>? _domains;

        /// <summary>
        /// List of configured domains for the distribution
        /// </summary>
        public InputList<Inputs.CdnDistributionDomainGetArgs> Domains
        {
            get => _domains ?? (_domains = new InputList<Inputs.CdnDistributionDomainGetArgs>());
            set => _domains = value;
        }

        [Input("errors")]
        private InputList<string>? _errors;

        /// <summary>
        /// List of distribution errors
        /// </summary>
        public InputList<string> Errors
        {
            get => _errors ?? (_errors = new InputList<string>());
            set => _errors = value;
        }

        /// <summary>
        /// STACKIT project ID associated with the distribution
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// Status of the distribution
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// Time when the distribution was last updated
        /// </summary>
        [Input("updatedAt")]
        public Input<string>? UpdatedAt { get; set; }

        public CdnDistributionState()
        {
        }
        public static new CdnDistributionState Empty => new CdnDistributionState();
    }
}
