// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ediri.Stackit
{
    public static class GetRoutingTable
    {
        /// <summary>
        /// Routing table datasource schema. Must have a `region` specified in the provider configuration.
        /// 
        /// &gt; This datasource is part of the routing-tables experiment and is likely going to undergo significant changes or be removed in the future. Use it at your own discretion.
        /// 
        /// ## Example Usage
        /// 
        /// ```terraform
        /// data "stackit_routing_table" "example" {
        ///   organization_id  = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   network_area_id  = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   routing_table_id = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        /// }
        /// ```
        /// </summary>
        public static Task<GetRoutingTableResult> InvokeAsync(GetRoutingTableArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRoutingTableResult>("stackit:index/getRoutingTable:getRoutingTable", args ?? new GetRoutingTableArgs(), options.WithDefaults());

        /// <summary>
        /// Routing table datasource schema. Must have a `region` specified in the provider configuration.
        /// 
        /// &gt; This datasource is part of the routing-tables experiment and is likely going to undergo significant changes or be removed in the future. Use it at your own discretion.
        /// 
        /// ## Example Usage
        /// 
        /// ```terraform
        /// data "stackit_routing_table" "example" {
        ///   organization_id  = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   network_area_id  = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   routing_table_id = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        /// }
        /// ```
        /// </summary>
        public static Output<GetRoutingTableResult> Invoke(GetRoutingTableInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRoutingTableResult>("stackit:index/getRoutingTable:getRoutingTable", args ?? new GetRoutingTableInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Routing table datasource schema. Must have a `region` specified in the provider configuration.
        /// 
        /// &gt; This datasource is part of the routing-tables experiment and is likely going to undergo significant changes or be removed in the future. Use it at your own discretion.
        /// 
        /// ## Example Usage
        /// 
        /// ```terraform
        /// data "stackit_routing_table" "example" {
        ///   organization_id  = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   network_area_id  = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   routing_table_id = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        /// }
        /// ```
        /// </summary>
        public static Output<GetRoutingTableResult> Invoke(GetRoutingTableInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetRoutingTableResult>("stackit:index/getRoutingTable:getRoutingTable", args ?? new GetRoutingTableInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRoutingTableArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The network area ID to which the routing table is associated.
        /// </summary>
        [Input("networkAreaId", required: true)]
        public string NetworkAreaId { get; set; } = null!;

        /// <summary>
        /// STACKIT organization ID to which the routing table is associated.
        /// </summary>
        [Input("organizationId", required: true)]
        public string OrganizationId { get; set; } = null!;

        /// <summary>
        /// The resource region. If not defined, the provider region is used.
        /// </summary>
        [Input("region")]
        public string? Region { get; set; }

        /// <summary>
        /// The routing tables ID.
        /// </summary>
        [Input("routingTableId", required: true)]
        public string RoutingTableId { get; set; } = null!;

        public GetRoutingTableArgs()
        {
        }
        public static new GetRoutingTableArgs Empty => new GetRoutingTableArgs();
    }

    public sealed class GetRoutingTableInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The network area ID to which the routing table is associated.
        /// </summary>
        [Input("networkAreaId", required: true)]
        public Input<string> NetworkAreaId { get; set; } = null!;

        /// <summary>
        /// STACKIT organization ID to which the routing table is associated.
        /// </summary>
        [Input("organizationId", required: true)]
        public Input<string> OrganizationId { get; set; } = null!;

        /// <summary>
        /// The resource region. If not defined, the provider region is used.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// The routing tables ID.
        /// </summary>
        [Input("routingTableId", required: true)]
        public Input<string> RoutingTableId { get; set; } = null!;

        public GetRoutingTableInvokeArgs()
        {
        }
        public static new GetRoutingTableInvokeArgs Empty => new GetRoutingTableInvokeArgs();
    }


    [OutputType]
    public sealed class GetRoutingTableResult
    {
        /// <summary>
        /// Date-time when the routing table was created
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// When true this is the default routing table for this network area. It can't be deleted and is used if the user does not specify it otherwise.
        /// </summary>
        public readonly bool Default;
        /// <summary>
        /// Description of the routing table.
        /// </summary>
        public readonly string Description;
        public readonly string Id;
        /// <summary>
        /// Labels are key-value string pairs which can be attached to a resource container
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        /// <summary>
        /// The name of the routing table.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The network area ID to which the routing table is associated.
        /// </summary>
        public readonly string NetworkAreaId;
        /// <summary>
        /// STACKIT organization ID to which the routing table is associated.
        /// </summary>
        public readonly string OrganizationId;
        /// <summary>
        /// The resource region. If not defined, the provider region is used.
        /// </summary>
        public readonly string? Region;
        /// <summary>
        /// The routing tables ID.
        /// </summary>
        public readonly string RoutingTableId;
        /// <summary>
        /// This controls whether the routes for project-to-project communication are created automatically or not.
        /// </summary>
        public readonly bool SystemRoutes;
        /// <summary>
        /// Date-time when the routing table was updated
        /// </summary>
        public readonly string UpdatedAt;

        [OutputConstructor]
        private GetRoutingTableResult(
            string createdAt,

            bool @default,

            string description,

            string id,

            ImmutableDictionary<string, string> labels,

            string name,

            string networkAreaId,

            string organizationId,

            string? region,

            string routingTableId,

            bool systemRoutes,

            string updatedAt)
        {
            CreatedAt = createdAt;
            Default = @default;
            Description = description;
            Id = id;
            Labels = labels;
            Name = name;
            NetworkAreaId = networkAreaId;
            OrganizationId = organizationId;
            Region = region;
            RoutingTableId = routingTableId;
            SystemRoutes = systemRoutes;
            UpdatedAt = updatedAt;
        }
    }
}
