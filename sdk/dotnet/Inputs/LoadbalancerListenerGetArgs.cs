// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ediri.Stackit.Inputs
{

    public sealed class LoadbalancerListenerGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// Port number where we listen for traffic.
        /// </summary>
        [Input("port", required: true)]
        public Input<int> Port { get; set; } = null!;

        /// <summary>
        /// Protocol is the highest network protocol we understand to load balance. Supported values are: `PROTOCOL_UNSPECIFIED`, `PROTOCOL_TCP`, `PROTOCOL_UDP`, `PROTOCOL_TCP_PROXY`, `PROTOCOL_TLS_PASSTHROUGH`.
        /// </summary>
        [Input("protocol", required: true)]
        public Input<string> Protocol { get; set; } = null!;

        [Input("serverNameIndicators")]
        private InputList<Inputs.LoadbalancerListenerServerNameIndicatorGetArgs>? _serverNameIndicators;

        /// <summary>
        /// A list of domain names to match in order to pass TLS traffic to the target pool in the current listener
        /// </summary>
        public InputList<Inputs.LoadbalancerListenerServerNameIndicatorGetArgs> ServerNameIndicators
        {
            get => _serverNameIndicators ?? (_serverNameIndicators = new InputList<Inputs.LoadbalancerListenerServerNameIndicatorGetArgs>());
            set => _serverNameIndicators = value;
        }

        /// <summary>
        /// Reference target pool by target pool name.
        /// </summary>
        [Input("targetPool", required: true)]
        public Input<string> TargetPool { get; set; } = null!;

        public LoadbalancerListenerGetArgs()
        {
        }
        public static new LoadbalancerListenerGetArgs Empty => new LoadbalancerListenerGetArgs();
    }
}
