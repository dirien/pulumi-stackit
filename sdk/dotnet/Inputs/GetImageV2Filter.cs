// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ediri.Stackit.Inputs
{

    public sealed class GetImageV2FilterArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Filter images by operating system distribution. For example: `ubuntu`, `ubuntu-arm64`, `debian`, `rhel`, etc.
        /// </summary>
        [Input("distro")]
        public string? Distro { get; set; }

        /// <summary>
        /// Filter images by operating system type, such as `linux` or `windows`.
        /// </summary>
        [Input("os")]
        public string? Os { get; set; }

        /// <summary>
        /// Filter images with Secure Boot support. Set to `true` to match images that support Secure Boot.
        /// </summary>
        [Input("secureBoot")]
        public bool? SecureBoot { get; set; }

        /// <summary>
        /// Filter images based on UEFI support. Set to `true` to match images that support UEFI.
        /// </summary>
        [Input("uefi")]
        public bool? Uefi { get; set; }

        /// <summary>
        /// Filter images by OS distribution version, such as `22.04`, `11`, or `9.1`.
        /// </summary>
        [Input("version")]
        public string? Version { get; set; }

        public GetImageV2FilterArgs()
        {
        }
        public static new GetImageV2FilterArgs Empty => new GetImageV2FilterArgs();
    }
}
