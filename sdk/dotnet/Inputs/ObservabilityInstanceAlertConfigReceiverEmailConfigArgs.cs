// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ediri.Stackit.Inputs
{

    public sealed class ObservabilityInstanceAlertConfigReceiverEmailConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// SMTP authentication information. Must be a valid email address
        /// </summary>
        [Input("authIdentity")]
        public Input<string>? AuthIdentity { get; set; }

        /// <summary>
        /// SMTP authentication password.
        /// </summary>
        [Input("authPassword")]
        public Input<string>? AuthPassword { get; set; }

        /// <summary>
        /// SMTP authentication username.
        /// </summary>
        [Input("authUsername")]
        public Input<string>? AuthUsername { get; set; }

        /// <summary>
        /// The sender email address. Must be a valid email address
        /// </summary>
        [Input("from")]
        public Input<string>? From { get; set; }

        /// <summary>
        /// The SMTP host through which emails are sent.
        /// </summary>
        [Input("smartHost")]
        public Input<string>? SmartHost { get; set; }

        /// <summary>
        /// The email address to send notifications to. Must be a valid email address
        /// </summary>
        [Input("to")]
        public Input<string>? To { get; set; }

        public ObservabilityInstanceAlertConfigReceiverEmailConfigArgs()
        {
        }
        public static new ObservabilityInstanceAlertConfigReceiverEmailConfigArgs Empty => new ObservabilityInstanceAlertConfigReceiverEmailConfigArgs();
    }
}
