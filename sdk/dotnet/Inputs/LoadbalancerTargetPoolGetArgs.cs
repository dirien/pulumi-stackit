// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ediri.Stackit.Inputs
{

    public sealed class LoadbalancerTargetPoolGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("activeHealthCheck")]
        public Input<Inputs.LoadbalancerTargetPoolActiveHealthCheckGetArgs>? ActiveHealthCheck { get; set; }

        /// <summary>
        /// Target pool name.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Here you can setup various session persistence options, so far only "`use_source_ip_address`" is supported.
        /// </summary>
        [Input("sessionPersistence")]
        public Input<Inputs.LoadbalancerTargetPoolSessionPersistenceGetArgs>? SessionPersistence { get; set; }

        /// <summary>
        /// Identical port number where each target listens for traffic.
        /// </summary>
        [Input("targetPort", required: true)]
        public Input<int> TargetPort { get; set; } = null!;

        [Input("targets", required: true)]
        private InputList<Inputs.LoadbalancerTargetPoolTargetGetArgs>? _targets;

        /// <summary>
        /// List of all targets which will be used in the pool. Limited to 1000.
        /// </summary>
        public InputList<Inputs.LoadbalancerTargetPoolTargetGetArgs> Targets
        {
            get => _targets ?? (_targets = new InputList<Inputs.LoadbalancerTargetPoolTargetGetArgs>());
            set => _targets = value;
        }

        public LoadbalancerTargetPoolGetArgs()
        {
        }
        public static new LoadbalancerTargetPoolGetArgs Empty => new LoadbalancerTargetPoolGetArgs();
    }
}
