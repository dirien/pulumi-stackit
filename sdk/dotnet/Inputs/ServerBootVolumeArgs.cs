// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ediri.Stackit.Inputs
{

    public sealed class ServerBootVolumeArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Delete the volume during the termination of the server. Only allowed when `source_type` is `image`.
        /// </summary>
        [Input("deleteOnTermination")]
        public Input<bool>? DeleteOnTermination { get; set; }

        /// <summary>
        /// The ID of the boot volume
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The performance class of the server.
        /// </summary>
        [Input("performanceClass")]
        public Input<string>? PerformanceClass { get; set; }

        /// <summary>
        /// The size of the boot volume in GB. Must be provided when `source_type` is `image`.
        /// </summary>
        [Input("size")]
        public Input<int>? Size { get; set; }

        /// <summary>
        /// The ID of the source, either image ID or volume ID
        /// </summary>
        [Input("sourceId", required: true)]
        public Input<string> SourceId { get; set; } = null!;

        /// <summary>
        /// The type of the source. Supported values are: `volume`, `image`.
        /// </summary>
        [Input("sourceType", required: true)]
        public Input<string> SourceType { get; set; } = null!;

        public ServerBootVolumeArgs()
        {
        }
        public static new ServerBootVolumeArgs Empty => new ServerBootVolumeArgs();
    }
}
