// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ediri.Stackit.Outputs
{

    [OutputType]
    public sealed class GetImageConfigResult
    {
        /// <summary>
        /// Enables the BIOS bootmenu.
        /// </summary>
        public readonly bool BootMenu;
        /// <summary>
        /// Sets CDROM bus controller type.
        /// </summary>
        public readonly string CdromBus;
        /// <summary>
        /// Sets Disk bus controller type.
        /// </summary>
        public readonly string DiskBus;
        /// <summary>
        /// Sets virtual network interface model.
        /// </summary>
        public readonly string NicModel;
        /// <summary>
        /// Enables operating system specific optimizations.
        /// </summary>
        public readonly string OperatingSystem;
        /// <summary>
        /// Operating system distribution.
        /// </summary>
        public readonly string OperatingSystemDistro;
        /// <summary>
        /// Version of the operating system.
        /// </summary>
        public readonly string OperatingSystemVersion;
        /// <summary>
        /// Sets the device bus when the image is used as a rescue image.
        /// </summary>
        public readonly string RescueBus;
        /// <summary>
        /// Sets the device when the image is used as a rescue image.
        /// </summary>
        public readonly string RescueDevice;
        /// <summary>
        /// Enables Secure Boot.
        /// </summary>
        public readonly bool SecureBoot;
        /// <summary>
        /// Enables UEFI boot.
        /// </summary>
        public readonly bool Uefi;
        /// <summary>
        /// Sets Graphic device model.
        /// </summary>
        public readonly string VideoModel;
        /// <summary>
        /// Enables the use of VirtIO SCSI to provide block device access. By default instances use VirtIO Block.
        /// </summary>
        public readonly bool VirtioScsi;

        [OutputConstructor]
        private GetImageConfigResult(
            bool bootMenu,

            string cdromBus,

            string diskBus,

            string nicModel,

            string operatingSystem,

            string operatingSystemDistro,

            string operatingSystemVersion,

            string rescueBus,

            string rescueDevice,

            bool secureBoot,

            bool uefi,

            string videoModel,

            bool virtioScsi)
        {
            BootMenu = bootMenu;
            CdromBus = cdromBus;
            DiskBus = diskBus;
            NicModel = nicModel;
            OperatingSystem = operatingSystem;
            OperatingSystemDistro = operatingSystemDistro;
            OperatingSystemVersion = operatingSystemVersion;
            RescueBus = rescueBus;
            RescueDevice = rescueDevice;
            SecureBoot = secureBoot;
            Uefi = uefi;
            VideoModel = videoModel;
            VirtioScsi = virtioScsi;
        }
    }
}
