// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ediri.Stackit.Outputs
{

    [OutputType]
    public sealed class ServerBootVolume
    {
        /// <summary>
        /// Delete the volume during the termination of the server. Only allowed when `source_type` is `image`.
        /// </summary>
        public readonly bool? DeleteOnTermination;
        /// <summary>
        /// The ID of the boot volume
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The performance class of the server.
        /// </summary>
        public readonly string? PerformanceClass;
        /// <summary>
        /// The size of the boot volume in GB. Must be provided when `source_type` is `image`.
        /// </summary>
        public readonly int? Size;
        /// <summary>
        /// The ID of the source, either image ID or volume ID
        /// </summary>
        public readonly string SourceId;
        /// <summary>
        /// The type of the source. Supported values are: `volume`, `image`.
        /// </summary>
        public readonly string SourceType;

        [OutputConstructor]
        private ServerBootVolume(
            bool? deleteOnTermination,

            string? id,

            string? performanceClass,

            int? size,

            string sourceId,

            string sourceType)
        {
            DeleteOnTermination = deleteOnTermination;
            Id = id;
            PerformanceClass = performanceClass;
            Size = size;
            SourceId = sourceId;
            SourceType = sourceType;
        }
    }
}
