// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ediri.Stackit.Outputs
{

    [OutputType]
    public sealed class GetSkeClusterNodePoolResult
    {
        /// <summary>
        /// Allow system components to run on this node pool.
        /// </summary>
        public readonly bool AllowSystemComponents;
        /// <summary>
        /// Specify a list of availability zones.
        /// </summary>
        public readonly ImmutableArray<string> AvailabilityZones;
        /// <summary>
        /// Specifies the container runtime.
        /// </summary>
        public readonly string Cri;
        /// <summary>
        /// Labels to add to each node.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        /// <summary>
        /// The machine type.
        /// </summary>
        public readonly string MachineType;
        /// <summary>
        /// The maximum number of nodes upgraded simultaneously.
        /// </summary>
        public readonly int MaxSurge;
        /// <summary>
        /// The maximum number of nodes unavailable during upgraded.
        /// </summary>
        public readonly int MaxUnavailable;
        /// <summary>
        /// Maximum number of nodes in the pool.
        /// </summary>
        public readonly int Maximum;
        /// <summary>
        /// Minimum number of nodes in the pool.
        /// </summary>
        public readonly int Minimum;
        /// <summary>
        /// Specifies the name of the node pool.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The name of the OS image.
        /// </summary>
        public readonly string OsName;
        /// <summary>
        /// The OS image version.
        /// </summary>
        public readonly string OsVersion;
        /// <summary>
        /// The minimum OS image version, this field is always nil. SKE automatically updates the cluster Kubernetes version if you have set `maintenance.enable_kubernetes_version_updates` to true or if there is a mandatory update, as described in [Updates for Kubernetes versions and Operating System versions in SKE](https://docs.stackit.cloud/stackit/en/version-updates-in-ske-10125631.html). To get the current OS image version being used for the node pool, use the read-only `os_version_used` field.
        /// </summary>
        public readonly string OsVersionMin;
        /// <summary>
        /// Full OS image version used. For example, if 3815.2 was set in `os_version_min`, this value may result to 3815.2.2. SKE automatically updates the cluster Kubernetes version if you have set `maintenance.enable_kubernetes_version_updates` to true or if there is a mandatory update, as described in [Updates for Kubernetes versions and Operating System versions in SKE](https://docs.stackit.cloud/stackit/en/version-updates-in-ske-10125631.html).
        /// </summary>
        public readonly string OsVersionUsed;
        /// <summary>
        /// Specifies a taint list as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSkeClusterNodePoolTaintResult> Taints;
        /// <summary>
        /// The volume size in GB.
        /// </summary>
        public readonly int VolumeSize;
        /// <summary>
        /// Specifies the volume type.
        /// </summary>
        public readonly string VolumeType;

        [OutputConstructor]
        private GetSkeClusterNodePoolResult(
            bool allowSystemComponents,

            ImmutableArray<string> availabilityZones,

            string cri,

            ImmutableDictionary<string, string> labels,

            string machineType,

            int maxSurge,

            int maxUnavailable,

            int maximum,

            int minimum,

            string name,

            string osName,

            string osVersion,

            string osVersionMin,

            string osVersionUsed,

            ImmutableArray<Outputs.GetSkeClusterNodePoolTaintResult> taints,

            int volumeSize,

            string volumeType)
        {
            AllowSystemComponents = allowSystemComponents;
            AvailabilityZones = availabilityZones;
            Cri = cri;
            Labels = labels;
            MachineType = machineType;
            MaxSurge = maxSurge;
            MaxUnavailable = maxUnavailable;
            Maximum = maximum;
            Minimum = minimum;
            Name = name;
            OsName = osName;
            OsVersion = osVersion;
            OsVersionMin = osVersionMin;
            OsVersionUsed = osVersionUsed;
            Taints = taints;
            VolumeSize = volumeSize;
            VolumeType = volumeType;
        }
    }
}
