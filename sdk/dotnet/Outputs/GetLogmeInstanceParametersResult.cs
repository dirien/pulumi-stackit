// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ediri.Stackit.Outputs
{

    [OutputType]
    public sealed class GetLogmeInstanceParametersResult
    {
        /// <summary>
        /// Enable monitoring.
        /// </summary>
        public readonly bool EnableMonitoring;
        public readonly int FluentdTcp;
        public readonly int FluentdTls;
        public readonly string FluentdTlsCiphers;
        public readonly string FluentdTlsMaxVersion;
        public readonly string FluentdTlsMinVersion;
        public readonly string FluentdTlsVersion;
        public readonly int FluentdUdp;
        /// <summary>
        /// If set, monitoring with Graphite will be enabled. Expects the host and port where the Graphite metrics should be sent to (host:port).
        /// </summary>
        public readonly string Graphite;
        /// <summary>
        /// Combination of an integer and a timerange when an index will be considered "old" and can be deleted. Possible values for the timerange are `s`, `m`, `h` and `d`.
        /// </summary>
        public readonly string IsmDeletionAfter;
        public readonly double IsmJitter;
        /// <summary>
        /// Jitter of the execution time.
        /// </summary>
        public readonly int IsmJobInterval;
        /// <summary>
        /// The amount of memory (in MB) allocated as heap by the JVM for OpenSearch.
        /// </summary>
        public readonly int JavaHeapspace;
        /// <summary>
        /// The amount of memory (in MB) used by the JVM to store metadata for OpenSearch.
        /// </summary>
        public readonly int JavaMaxmetaspace;
        /// <summary>
        /// The maximum disk threshold in MB. If the disk usage exceeds this threshold, the instance will be stopped.
        /// </summary>
        public readonly int MaxDiskThreshold;
        /// <summary>
        /// The frequency in seconds at which metrics are emitted (in seconds).
        /// </summary>
        public readonly int MetricsFrequency;
        /// <summary>
        /// The prefix for the metrics. Could be useful when using Graphite monitoring to prefix the metrics with a certain value, like an API key.
        /// </summary>
        public readonly string MetricsPrefix;
        /// <summary>
        /// The ID of the STACKIT monitoring instance.
        /// </summary>
        public readonly string MonitoringInstanceId;
        public readonly ImmutableArray<string> OpensearchTlsCiphers;
        public readonly ImmutableArray<string> OpensearchTlsProtocols;
        /// <summary>
        /// Comma separated list of IP networks in CIDR notation which are allowed to access this instance.
        /// </summary>
        public readonly string SgwAcl;
        /// <summary>
        /// List of syslog servers to send logs to.
        /// </summary>
        public readonly ImmutableArray<string> Syslogs;

        [OutputConstructor]
        private GetLogmeInstanceParametersResult(
            bool enableMonitoring,

            int fluentdTcp,

            int fluentdTls,

            string fluentdTlsCiphers,

            string fluentdTlsMaxVersion,

            string fluentdTlsMinVersion,

            string fluentdTlsVersion,

            int fluentdUdp,

            string graphite,

            string ismDeletionAfter,

            double ismJitter,

            int ismJobInterval,

            int javaHeapspace,

            int javaMaxmetaspace,

            int maxDiskThreshold,

            int metricsFrequency,

            string metricsPrefix,

            string monitoringInstanceId,

            ImmutableArray<string> opensearchTlsCiphers,

            ImmutableArray<string> opensearchTlsProtocols,

            string sgwAcl,

            ImmutableArray<string> syslogs)
        {
            EnableMonitoring = enableMonitoring;
            FluentdTcp = fluentdTcp;
            FluentdTls = fluentdTls;
            FluentdTlsCiphers = fluentdTlsCiphers;
            FluentdTlsMaxVersion = fluentdTlsMaxVersion;
            FluentdTlsMinVersion = fluentdTlsMinVersion;
            FluentdTlsVersion = fluentdTlsVersion;
            FluentdUdp = fluentdUdp;
            Graphite = graphite;
            IsmDeletionAfter = ismDeletionAfter;
            IsmJitter = ismJitter;
            IsmJobInterval = ismJobInterval;
            JavaHeapspace = javaHeapspace;
            JavaMaxmetaspace = javaMaxmetaspace;
            MaxDiskThreshold = maxDiskThreshold;
            MetricsFrequency = metricsFrequency;
            MetricsPrefix = metricsPrefix;
            MonitoringInstanceId = monitoringInstanceId;
            OpensearchTlsCiphers = opensearchTlsCiphers;
            OpensearchTlsProtocols = opensearchTlsProtocols;
            SgwAcl = sgwAcl;
            Syslogs = syslogs;
        }
    }
}
