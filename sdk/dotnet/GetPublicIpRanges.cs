// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ediri.Stackit
{
    public static class GetPublicIpRanges
    {
        /// <summary>
        /// A list of all public IP ranges that STACKIT uses.
        /// 
        /// ## Example Usage
        /// 
        /// ```terraform
        /// data "stackit_public_ip_ranges" "example" {}
        /// ```
        /// </summary>
        public static Task<GetPublicIpRangesResult> InvokeAsync(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPublicIpRangesResult>("stackit:index/getPublicIpRanges:getPublicIpRanges", InvokeArgs.Empty, options.WithDefaults());

        /// <summary>
        /// A list of all public IP ranges that STACKIT uses.
        /// 
        /// ## Example Usage
        /// 
        /// ```terraform
        /// data "stackit_public_ip_ranges" "example" {}
        /// ```
        /// </summary>
        public static Output<GetPublicIpRangesResult> Invoke(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPublicIpRangesResult>("stackit:index/getPublicIpRanges:getPublicIpRanges", InvokeArgs.Empty, options.WithDefaults());

        /// <summary>
        /// A list of all public IP ranges that STACKIT uses.
        /// 
        /// ## Example Usage
        /// 
        /// ```terraform
        /// data "stackit_public_ip_ranges" "example" {}
        /// ```
        /// </summary>
        public static Output<GetPublicIpRangesResult> Invoke(InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetPublicIpRangesResult>("stackit:index/getPublicIpRanges:getPublicIpRanges", InvokeArgs.Empty, options.WithDefaults());
    }


    [OutputType]
    public sealed class GetPublicIpRangesResult
    {
        public readonly string Id;
        /// <summary>
        /// A list of all public IP ranges.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetPublicIpRangesPublicIpRangeResult> PublicIpRanges;

        [OutputConstructor]
        private GetPublicIpRangesResult(
            string id,

            ImmutableArray<Outputs.GetPublicIpRangesPublicIpRangeResult> publicIpRanges)
        {
            Id = id;
            PublicIpRanges = publicIpRanges;
        }
    }
}
