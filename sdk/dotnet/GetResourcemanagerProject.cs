// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ediri.Stackit
{
    public static class GetResourcemanagerProject
    {
        /// <summary>
        /// Resource Manager project data source schema. To identify the project, you need to provider either project_id or container_id. If you provide both, project_id will be used.
        /// 
        /// ## Example Usage
        /// 
        /// ```terraform
        /// data "stackit_resourcemanager_project" "example" {
        ///   project_id   = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   container_id = "example-container-abc123"
        /// }
        /// ```
        /// </summary>
        public static Task<GetResourcemanagerProjectResult> InvokeAsync(GetResourcemanagerProjectArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetResourcemanagerProjectResult>("stackit:index/getResourcemanagerProject:getResourcemanagerProject", args ?? new GetResourcemanagerProjectArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Manager project data source schema. To identify the project, you need to provider either project_id or container_id. If you provide both, project_id will be used.
        /// 
        /// ## Example Usage
        /// 
        /// ```terraform
        /// data "stackit_resourcemanager_project" "example" {
        ///   project_id   = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   container_id = "example-container-abc123"
        /// }
        /// ```
        /// </summary>
        public static Output<GetResourcemanagerProjectResult> Invoke(GetResourcemanagerProjectInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetResourcemanagerProjectResult>("stackit:index/getResourcemanagerProject:getResourcemanagerProject", args ?? new GetResourcemanagerProjectInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Manager project data source schema. To identify the project, you need to provider either project_id or container_id. If you provide both, project_id will be used.
        /// 
        /// ## Example Usage
        /// 
        /// ```terraform
        /// data "stackit_resourcemanager_project" "example" {
        ///   project_id   = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   container_id = "example-container-abc123"
        /// }
        /// ```
        /// </summary>
        public static Output<GetResourcemanagerProjectResult> Invoke(GetResourcemanagerProjectInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetResourcemanagerProjectResult>("stackit:index/getResourcemanagerProject:getResourcemanagerProject", args ?? new GetResourcemanagerProjectInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetResourcemanagerProjectArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Project container ID. Globally unique, user-friendly identifier.
        /// </summary>
        [Input("containerId")]
        public string? ContainerId { get; set; }

        /// <summary>
        /// Project UUID identifier. This is the ID that can be used in most of the other resources to identify the project.
        /// </summary>
        [Input("projectId")]
        public string? ProjectId { get; set; }

        public GetResourcemanagerProjectArgs()
        {
        }
        public static new GetResourcemanagerProjectArgs Empty => new GetResourcemanagerProjectArgs();
    }

    public sealed class GetResourcemanagerProjectInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Project container ID. Globally unique, user-friendly identifier.
        /// </summary>
        [Input("containerId")]
        public Input<string>? ContainerId { get; set; }

        /// <summary>
        /// Project UUID identifier. This is the ID that can be used in most of the other resources to identify the project.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        public GetResourcemanagerProjectInvokeArgs()
        {
        }
        public static new GetResourcemanagerProjectInvokeArgs Empty => new GetResourcemanagerProjectInvokeArgs();
    }


    [OutputType]
    public sealed class GetResourcemanagerProjectResult
    {
        /// <summary>
        /// Project container ID. Globally unique, user-friendly identifier.
        /// </summary>
        public readonly string? ContainerId;
        public readonly string Id;
        /// <summary>
        /// Labels are key-value string pairs which can be attached to a resource container. A label key must match the regex [A-ZÄÜÖa-zäüöß0-9*-]{1,64}. A label value must match the regex ^$|[A-ZÄÜÖa-zäüöß0-9*-]{1,64}
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        /// <summary>
        /// Project name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Parent resource identifier. Both container ID (user-friendly) and UUID are supported
        /// </summary>
        public readonly string ParentContainerId;
        /// <summary>
        /// Project UUID identifier. This is the ID that can be used in most of the other resources to identify the project.
        /// </summary>
        public readonly string? ProjectId;

        [OutputConstructor]
        private GetResourcemanagerProjectResult(
            string? containerId,

            string id,

            ImmutableDictionary<string, string> labels,

            string name,

            string parentContainerId,

            string? projectId)
        {
            ContainerId = containerId;
            Id = id;
            Labels = labels;
            Name = name;
            ParentContainerId = parentContainerId;
            ProjectId = projectId;
        }
    }
}
