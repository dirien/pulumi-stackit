// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ediri.Stackit
{
    /// <summary>
    /// Load balancer observability credential resource schema. Must have a `region` specified in the provider configuration. These contain the username and password for the observability service (e.g. Argus) where the load balancer logs/metrics will be pushed into
    /// 
    /// ## Example Usage
    /// </summary>
    [StackitResourceType("stackit:index/loadbalancerObservabilityCredential:LoadbalancerObservabilityCredential")]
    public partial class LoadbalancerObservabilityCredential : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The credentials reference is used by the Load Balancer to define which credentials it will use.
        /// </summary>
        [Output("credentialsRef")]
        public Output<string> CredentialsRef { get; private set; } = null!;

        /// <summary>
        /// Observability credential name.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// The username for the observability service (e.g. Argus) where the logs/metrics will be pushed into.
        /// </summary>
        [Output("password")]
        public Output<string> Password { get; private set; } = null!;

        /// <summary>
        /// STACKIT project ID to which the load balancer observability credential is associated.
        /// </summary>
        [Output("projectId")]
        public Output<string> ProjectId { get; private set; } = null!;

        /// <summary>
        /// The resource region. If not defined, the provider region is used.
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        /// <summary>
        /// The password for the observability service (e.g. Argus) where the logs/metrics will be pushed into.
        /// </summary>
        [Output("username")]
        public Output<string> Username { get; private set; } = null!;


        /// <summary>
        /// Create a LoadbalancerObservabilityCredential resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LoadbalancerObservabilityCredential(string name, LoadbalancerObservabilityCredentialArgs args, CustomResourceOptions? options = null)
            : base("stackit:index/loadbalancerObservabilityCredential:LoadbalancerObservabilityCredential", name, args ?? new LoadbalancerObservabilityCredentialArgs(), MakeResourceOptions(options, ""))
        {
        }

        private LoadbalancerObservabilityCredential(string name, Input<string> id, LoadbalancerObservabilityCredentialState? state = null, CustomResourceOptions? options = null)
            : base("stackit:index/loadbalancerObservabilityCredential:LoadbalancerObservabilityCredential", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/dirien/pulumi-stackit",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LoadbalancerObservabilityCredential resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LoadbalancerObservabilityCredential Get(string name, Input<string> id, LoadbalancerObservabilityCredentialState? state = null, CustomResourceOptions? options = null)
        {
            return new LoadbalancerObservabilityCredential(name, id, state, options);
        }
    }

    public sealed class LoadbalancerObservabilityCredentialArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Observability credential name.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        /// <summary>
        /// The username for the observability service (e.g. Argus) where the logs/metrics will be pushed into.
        /// </summary>
        [Input("password", required: true)]
        public Input<string> Password { get; set; } = null!;

        /// <summary>
        /// STACKIT project ID to which the load balancer observability credential is associated.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        /// <summary>
        /// The resource region. If not defined, the provider region is used.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// The password for the observability service (e.g. Argus) where the logs/metrics will be pushed into.
        /// </summary>
        [Input("username", required: true)]
        public Input<string> Username { get; set; } = null!;

        public LoadbalancerObservabilityCredentialArgs()
        {
        }
        public static new LoadbalancerObservabilityCredentialArgs Empty => new LoadbalancerObservabilityCredentialArgs();
    }

    public sealed class LoadbalancerObservabilityCredentialState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The credentials reference is used by the Load Balancer to define which credentials it will use.
        /// </summary>
        [Input("credentialsRef")]
        public Input<string>? CredentialsRef { get; set; }

        /// <summary>
        /// Observability credential name.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// The username for the observability service (e.g. Argus) where the logs/metrics will be pushed into.
        /// </summary>
        [Input("password")]
        public Input<string>? Password { get; set; }

        /// <summary>
        /// STACKIT project ID to which the load balancer observability credential is associated.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// The resource region. If not defined, the provider region is used.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// The password for the observability service (e.g. Argus) where the logs/metrics will be pushed into.
        /// </summary>
        [Input("username")]
        public Input<string>? Username { get; set; }

        public LoadbalancerObservabilityCredentialState()
        {
        }
        public static new LoadbalancerObservabilityCredentialState Empty => new LoadbalancerObservabilityCredentialState();
    }
}
