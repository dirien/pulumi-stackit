// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ediri.Stackit
{
    public static class GetRoutingTableRoutes
    {
        /// <summary>
        /// Routing table routes datasource schema. Must have a `region` specified in the provider configuration.
        /// 
        /// &gt; This datasource is part of the routing-tables experiment and is likely going to undergo significant changes or be removed in the future. Use it at your own discretion.
        /// 
        /// ## Example Usage
        /// 
        /// ```terraform
        /// data "stackit_routing_table_routes" "example" {
        ///   organization_id  = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   network_area_id  = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   routing_table_id = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        /// }
        /// ```
        /// </summary>
        public static Task<GetRoutingTableRoutesResult> InvokeAsync(GetRoutingTableRoutesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRoutingTableRoutesResult>("stackit:index/getRoutingTableRoutes:getRoutingTableRoutes", args ?? new GetRoutingTableRoutesArgs(), options.WithDefaults());

        /// <summary>
        /// Routing table routes datasource schema. Must have a `region` specified in the provider configuration.
        /// 
        /// &gt; This datasource is part of the routing-tables experiment and is likely going to undergo significant changes or be removed in the future. Use it at your own discretion.
        /// 
        /// ## Example Usage
        /// 
        /// ```terraform
        /// data "stackit_routing_table_routes" "example" {
        ///   organization_id  = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   network_area_id  = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   routing_table_id = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        /// }
        /// ```
        /// </summary>
        public static Output<GetRoutingTableRoutesResult> Invoke(GetRoutingTableRoutesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRoutingTableRoutesResult>("stackit:index/getRoutingTableRoutes:getRoutingTableRoutes", args ?? new GetRoutingTableRoutesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Routing table routes datasource schema. Must have a `region` specified in the provider configuration.
        /// 
        /// &gt; This datasource is part of the routing-tables experiment and is likely going to undergo significant changes or be removed in the future. Use it at your own discretion.
        /// 
        /// ## Example Usage
        /// 
        /// ```terraform
        /// data "stackit_routing_table_routes" "example" {
        ///   organization_id  = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   network_area_id  = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   routing_table_id = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        /// }
        /// ```
        /// </summary>
        public static Output<GetRoutingTableRoutesResult> Invoke(GetRoutingTableRoutesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetRoutingTableRoutesResult>("stackit:index/getRoutingTableRoutes:getRoutingTableRoutes", args ?? new GetRoutingTableRoutesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRoutingTableRoutesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The network area ID to which the routing table is associated.
        /// </summary>
        [Input("networkAreaId", required: true)]
        public string NetworkAreaId { get; set; } = null!;

        /// <summary>
        /// STACKIT organization ID to which the routing table is associated.
        /// </summary>
        [Input("organizationId", required: true)]
        public string OrganizationId { get; set; } = null!;

        /// <summary>
        /// The datasource region. If not defined, the provider region is used.
        /// </summary>
        [Input("region")]
        public string? Region { get; set; }

        /// <summary>
        /// The routing tables ID.
        /// </summary>
        [Input("routingTableId", required: true)]
        public string RoutingTableId { get; set; } = null!;

        public GetRoutingTableRoutesArgs()
        {
        }
        public static new GetRoutingTableRoutesArgs Empty => new GetRoutingTableRoutesArgs();
    }

    public sealed class GetRoutingTableRoutesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The network area ID to which the routing table is associated.
        /// </summary>
        [Input("networkAreaId", required: true)]
        public Input<string> NetworkAreaId { get; set; } = null!;

        /// <summary>
        /// STACKIT organization ID to which the routing table is associated.
        /// </summary>
        [Input("organizationId", required: true)]
        public Input<string> OrganizationId { get; set; } = null!;

        /// <summary>
        /// The datasource region. If not defined, the provider region is used.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// The routing tables ID.
        /// </summary>
        [Input("routingTableId", required: true)]
        public Input<string> RoutingTableId { get; set; } = null!;

        public GetRoutingTableRoutesInvokeArgs()
        {
        }
        public static new GetRoutingTableRoutesInvokeArgs Empty => new GetRoutingTableRoutesInvokeArgs();
    }


    [OutputType]
    public sealed class GetRoutingTableRoutesResult
    {
        public readonly string Id;
        /// <summary>
        /// The network area ID to which the routing table is associated.
        /// </summary>
        public readonly string NetworkAreaId;
        /// <summary>
        /// STACKIT organization ID to which the routing table is associated.
        /// </summary>
        public readonly string OrganizationId;
        /// <summary>
        /// The datasource region. If not defined, the provider region is used.
        /// </summary>
        public readonly string? Region;
        /// <summary>
        /// List of routes.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRoutingTableRoutesRouteResult> Routes;
        /// <summary>
        /// The routing tables ID.
        /// </summary>
        public readonly string RoutingTableId;

        [OutputConstructor]
        private GetRoutingTableRoutesResult(
            string id,

            string networkAreaId,

            string organizationId,

            string? region,

            ImmutableArray<Outputs.GetRoutingTableRoutesRouteResult> routes,

            string routingTableId)
        {
            Id = id;
            NetworkAreaId = networkAreaId;
            OrganizationId = organizationId;
            Region = region;
            Routes = routes;
            RoutingTableId = routingTableId;
        }
    }
}
