// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ediri.Stackit
{
    public static class GetRoutingTableRoute
    {
        /// <summary>
        /// Routing table route datasource schema. Must have a `region` specified in the provider configuration.
        /// 
        /// &gt; This datasource is part of the routing-tables experiment and is likely going to undergo significant changes or be removed in the future. Use it at your own discretion.
        /// 
        /// ## Example Usage
        /// 
        /// ```terraform
        /// data "stackit_routing_table_route" "example" {
        ///   organization_id  = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   network_area_id  = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   routing_table_id = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   route_id         = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        /// }
        /// ```
        /// </summary>
        public static Task<GetRoutingTableRouteResult> InvokeAsync(GetRoutingTableRouteArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRoutingTableRouteResult>("stackit:index/getRoutingTableRoute:getRoutingTableRoute", args ?? new GetRoutingTableRouteArgs(), options.WithDefaults());

        /// <summary>
        /// Routing table route datasource schema. Must have a `region` specified in the provider configuration.
        /// 
        /// &gt; This datasource is part of the routing-tables experiment and is likely going to undergo significant changes or be removed in the future. Use it at your own discretion.
        /// 
        /// ## Example Usage
        /// 
        /// ```terraform
        /// data "stackit_routing_table_route" "example" {
        ///   organization_id  = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   network_area_id  = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   routing_table_id = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   route_id         = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        /// }
        /// ```
        /// </summary>
        public static Output<GetRoutingTableRouteResult> Invoke(GetRoutingTableRouteInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRoutingTableRouteResult>("stackit:index/getRoutingTableRoute:getRoutingTableRoute", args ?? new GetRoutingTableRouteInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Routing table route datasource schema. Must have a `region` specified in the provider configuration.
        /// 
        /// &gt; This datasource is part of the routing-tables experiment and is likely going to undergo significant changes or be removed in the future. Use it at your own discretion.
        /// 
        /// ## Example Usage
        /// 
        /// ```terraform
        /// data "stackit_routing_table_route" "example" {
        ///   organization_id  = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   network_area_id  = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   routing_table_id = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   route_id         = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        /// }
        /// ```
        /// </summary>
        public static Output<GetRoutingTableRouteResult> Invoke(GetRoutingTableRouteInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetRoutingTableRouteResult>("stackit:index/getRoutingTableRoute:getRoutingTableRoute", args ?? new GetRoutingTableRouteInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRoutingTableRouteArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The network area ID to which the routing table is associated.
        /// </summary>
        [Input("networkAreaId", required: true)]
        public string NetworkAreaId { get; set; } = null!;

        /// <summary>
        /// STACKIT organization ID to which the routing table is associated.
        /// </summary>
        [Input("organizationId", required: true)]
        public string OrganizationId { get; set; } = null!;

        /// <summary>
        /// The resource region. If not defined, the provider region is used.
        /// </summary>
        [Input("region")]
        public string? Region { get; set; }

        /// <summary>
        /// Route ID.
        /// </summary>
        [Input("routeId", required: true)]
        public string RouteId { get; set; } = null!;

        /// <summary>
        /// The routing tables ID.
        /// </summary>
        [Input("routingTableId", required: true)]
        public string RoutingTableId { get; set; } = null!;

        public GetRoutingTableRouteArgs()
        {
        }
        public static new GetRoutingTableRouteArgs Empty => new GetRoutingTableRouteArgs();
    }

    public sealed class GetRoutingTableRouteInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The network area ID to which the routing table is associated.
        /// </summary>
        [Input("networkAreaId", required: true)]
        public Input<string> NetworkAreaId { get; set; } = null!;

        /// <summary>
        /// STACKIT organization ID to which the routing table is associated.
        /// </summary>
        [Input("organizationId", required: true)]
        public Input<string> OrganizationId { get; set; } = null!;

        /// <summary>
        /// The resource region. If not defined, the provider region is used.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// Route ID.
        /// </summary>
        [Input("routeId", required: true)]
        public Input<string> RouteId { get; set; } = null!;

        /// <summary>
        /// The routing tables ID.
        /// </summary>
        [Input("routingTableId", required: true)]
        public Input<string> RoutingTableId { get; set; } = null!;

        public GetRoutingTableRouteInvokeArgs()
        {
        }
        public static new GetRoutingTableRouteInvokeArgs Empty => new GetRoutingTableRouteInvokeArgs();
    }


    [OutputType]
    public sealed class GetRoutingTableRouteResult
    {
        /// <summary>
        /// Date-time when the route was created
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// Destination of the route.
        /// </summary>
        public readonly Outputs.GetRoutingTableRouteDestinationResult Destination;
        public readonly string Id;
        /// <summary>
        /// Labels are key-value string pairs which can be attached to a resource container
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        /// <summary>
        /// The network area ID to which the routing table is associated.
        /// </summary>
        public readonly string NetworkAreaId;
        /// <summary>
        /// Next hop destination.
        /// </summary>
        public readonly Outputs.GetRoutingTableRouteNextHopResult NextHop;
        /// <summary>
        /// STACKIT organization ID to which the routing table is associated.
        /// </summary>
        public readonly string OrganizationId;
        /// <summary>
        /// The resource region. If not defined, the provider region is used.
        /// </summary>
        public readonly string? Region;
        /// <summary>
        /// Route ID.
        /// </summary>
        public readonly string RouteId;
        /// <summary>
        /// The routing tables ID.
        /// </summary>
        public readonly string RoutingTableId;
        /// <summary>
        /// Date-time when the route was updated
        /// </summary>
        public readonly string UpdatedAt;

        [OutputConstructor]
        private GetRoutingTableRouteResult(
            string createdAt,

            Outputs.GetRoutingTableRouteDestinationResult destination,

            string id,

            ImmutableDictionary<string, string> labels,

            string networkAreaId,

            Outputs.GetRoutingTableRouteNextHopResult nextHop,

            string organizationId,

            string? region,

            string routeId,

            string routingTableId,

            string updatedAt)
        {
            CreatedAt = createdAt;
            Destination = destination;
            Id = id;
            Labels = labels;
            NetworkAreaId = networkAreaId;
            NextHop = nextHop;
            OrganizationId = organizationId;
            Region = region;
            RouteId = routeId;
            RoutingTableId = routingTableId;
            UpdatedAt = updatedAt;
        }
    }
}
