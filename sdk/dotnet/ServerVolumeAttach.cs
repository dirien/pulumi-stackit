// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ediri.Stackit
{
    /// <summary>
    /// Volume attachment resource schema. Attaches a volume to a server. Must have a `region` specified in the provider configuration.
    /// 
    /// ## Example Usage
    /// </summary>
    [StackitResourceType("stackit:index/serverVolumeAttach:ServerVolumeAttach")]
    public partial class ServerVolumeAttach : global::Pulumi.CustomResource
    {
        /// <summary>
        /// STACKIT project ID to which the volume attachment is associated.
        /// </summary>
        [Output("projectId")]
        public Output<string> ProjectId { get; private set; } = null!;

        /// <summary>
        /// The server ID.
        /// </summary>
        [Output("serverId")]
        public Output<string> ServerId { get; private set; } = null!;

        /// <summary>
        /// The volume ID.
        /// </summary>
        [Output("volumeId")]
        public Output<string> VolumeId { get; private set; } = null!;


        /// <summary>
        /// Create a ServerVolumeAttach resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ServerVolumeAttach(string name, ServerVolumeAttachArgs args, CustomResourceOptions? options = null)
            : base("stackit:index/serverVolumeAttach:ServerVolumeAttach", name, args ?? new ServerVolumeAttachArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ServerVolumeAttach(string name, Input<string> id, ServerVolumeAttachState? state = null, CustomResourceOptions? options = null)
            : base("stackit:index/serverVolumeAttach:ServerVolumeAttach", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/dirien/pulumi-stackit",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ServerVolumeAttach resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ServerVolumeAttach Get(string name, Input<string> id, ServerVolumeAttachState? state = null, CustomResourceOptions? options = null)
        {
            return new ServerVolumeAttach(name, id, state, options);
        }
    }

    public sealed class ServerVolumeAttachArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// STACKIT project ID to which the volume attachment is associated.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        /// <summary>
        /// The server ID.
        /// </summary>
        [Input("serverId", required: true)]
        public Input<string> ServerId { get; set; } = null!;

        /// <summary>
        /// The volume ID.
        /// </summary>
        [Input("volumeId", required: true)]
        public Input<string> VolumeId { get; set; } = null!;

        public ServerVolumeAttachArgs()
        {
        }
        public static new ServerVolumeAttachArgs Empty => new ServerVolumeAttachArgs();
    }

    public sealed class ServerVolumeAttachState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// STACKIT project ID to which the volume attachment is associated.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// The server ID.
        /// </summary>
        [Input("serverId")]
        public Input<string>? ServerId { get; set; }

        /// <summary>
        /// The volume ID.
        /// </summary>
        [Input("volumeId")]
        public Input<string>? VolumeId { get; set; }

        public ServerVolumeAttachState()
        {
        }
        public static new ServerVolumeAttachState Empty => new ServerVolumeAttachState();
    }
}
