// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ediri.Stackit
{
    public static class GetRoutingTables
    {
        /// <summary>
        /// Routing table datasource schema. Must have a `region` specified in the provider configuration.
        /// 
        /// &gt; This datasource is part of the routing-tables experiment and is likely going to undergo significant changes or be removed in the future. Use it at your own discretion.
        /// 
        /// ## Example Usage
        /// 
        /// ```terraform
        /// data "stackit_routing_tables" "example" {
        ///   organization_id = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   network_area_id = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        /// }
        /// ```
        /// </summary>
        public static Task<GetRoutingTablesResult> InvokeAsync(GetRoutingTablesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRoutingTablesResult>("stackit:index/getRoutingTables:getRoutingTables", args ?? new GetRoutingTablesArgs(), options.WithDefaults());

        /// <summary>
        /// Routing table datasource schema. Must have a `region` specified in the provider configuration.
        /// 
        /// &gt; This datasource is part of the routing-tables experiment and is likely going to undergo significant changes or be removed in the future. Use it at your own discretion.
        /// 
        /// ## Example Usage
        /// 
        /// ```terraform
        /// data "stackit_routing_tables" "example" {
        ///   organization_id = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   network_area_id = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        /// }
        /// ```
        /// </summary>
        public static Output<GetRoutingTablesResult> Invoke(GetRoutingTablesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRoutingTablesResult>("stackit:index/getRoutingTables:getRoutingTables", args ?? new GetRoutingTablesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Routing table datasource schema. Must have a `region` specified in the provider configuration.
        /// 
        /// &gt; This datasource is part of the routing-tables experiment and is likely going to undergo significant changes or be removed in the future. Use it at your own discretion.
        /// 
        /// ## Example Usage
        /// 
        /// ```terraform
        /// data "stackit_routing_tables" "example" {
        ///   organization_id = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        ///   network_area_id = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        /// }
        /// ```
        /// </summary>
        public static Output<GetRoutingTablesResult> Invoke(GetRoutingTablesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetRoutingTablesResult>("stackit:index/getRoutingTables:getRoutingTables", args ?? new GetRoutingTablesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRoutingTablesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The network area ID to which the routing table is associated.
        /// </summary>
        [Input("networkAreaId", required: true)]
        public string NetworkAreaId { get; set; } = null!;

        /// <summary>
        /// STACKIT organization ID to which the routing table is associated.
        /// </summary>
        [Input("organizationId", required: true)]
        public string OrganizationId { get; set; } = null!;

        /// <summary>
        /// The resource region. If not defined, the provider region is used.
        /// </summary>
        [Input("region")]
        public string? Region { get; set; }

        public GetRoutingTablesArgs()
        {
        }
        public static new GetRoutingTablesArgs Empty => new GetRoutingTablesArgs();
    }

    public sealed class GetRoutingTablesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The network area ID to which the routing table is associated.
        /// </summary>
        [Input("networkAreaId", required: true)]
        public Input<string> NetworkAreaId { get; set; } = null!;

        /// <summary>
        /// STACKIT organization ID to which the routing table is associated.
        /// </summary>
        [Input("organizationId", required: true)]
        public Input<string> OrganizationId { get; set; } = null!;

        /// <summary>
        /// The resource region. If not defined, the provider region is used.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        public GetRoutingTablesInvokeArgs()
        {
        }
        public static new GetRoutingTablesInvokeArgs Empty => new GetRoutingTablesInvokeArgs();
    }


    [OutputType]
    public sealed class GetRoutingTablesResult
    {
        public readonly string Id;
        /// <summary>
        /// List of routing tables.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRoutingTablesItemResult> Items;
        /// <summary>
        /// The network area ID to which the routing table is associated.
        /// </summary>
        public readonly string NetworkAreaId;
        /// <summary>
        /// STACKIT organization ID to which the routing table is associated.
        /// </summary>
        public readonly string OrganizationId;
        /// <summary>
        /// The resource region. If not defined, the provider region is used.
        /// </summary>
        public readonly string? Region;

        [OutputConstructor]
        private GetRoutingTablesResult(
            string id,

            ImmutableArray<Outputs.GetRoutingTablesItemResult> items,

            string networkAreaId,

            string organizationId,

            string? region)
        {
            Id = id;
            Items = items;
            NetworkAreaId = networkAreaId;
            OrganizationId = organizationId;
            Region = region;
        }
    }
}
