// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Routing table route datasource schema. Must have a `region` specified in the provider configuration.
 *
 * > This datasource is part of the routing-tables experiment and is likely going to undergo significant changes or be removed in the future. Use it at your own discretion.
 *
 * ## Example Usage
 */
export function getRoutingTableRoute(args: GetRoutingTableRouteArgs, opts?: pulumi.InvokeOptions): Promise<GetRoutingTableRouteResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("stackit:index/getRoutingTableRoute:getRoutingTableRoute", {
        "networkAreaId": args.networkAreaId,
        "organizationId": args.organizationId,
        "region": args.region,
        "routeId": args.routeId,
        "routingTableId": args.routingTableId,
    }, opts);
}

/**
 * A collection of arguments for invoking getRoutingTableRoute.
 */
export interface GetRoutingTableRouteArgs {
    /**
     * The network area ID to which the routing table is associated.
     */
    networkAreaId: string;
    /**
     * STACKIT organization ID to which the routing table is associated.
     */
    organizationId: string;
    /**
     * The resource region. If not defined, the provider region is used.
     */
    region?: string;
    /**
     * Route ID.
     */
    routeId: string;
    /**
     * The routing tables ID.
     */
    routingTableId: string;
}

/**
 * A collection of values returned by getRoutingTableRoute.
 */
export interface GetRoutingTableRouteResult {
    /**
     * Date-time when the route was created
     */
    readonly createdAt: string;
    /**
     * Destination of the route.
     */
    readonly destination: outputs.GetRoutingTableRouteDestination;
    readonly id: string;
    /**
     * Labels are key-value string pairs which can be attached to a resource container
     */
    readonly labels: {[key: string]: string};
    /**
     * The network area ID to which the routing table is associated.
     */
    readonly networkAreaId: string;
    /**
     * Next hop destination.
     */
    readonly nextHop: outputs.GetRoutingTableRouteNextHop;
    /**
     * STACKIT organization ID to which the routing table is associated.
     */
    readonly organizationId: string;
    /**
     * The resource region. If not defined, the provider region is used.
     */
    readonly region?: string;
    /**
     * Route ID.
     */
    readonly routeId: string;
    /**
     * The routing tables ID.
     */
    readonly routingTableId: string;
    /**
     * Date-time when the route was updated
     */
    readonly updatedAt: string;
}
/**
 * Routing table route datasource schema. Must have a `region` specified in the provider configuration.
 *
 * > This datasource is part of the routing-tables experiment and is likely going to undergo significant changes or be removed in the future. Use it at your own discretion.
 *
 * ## Example Usage
 */
export function getRoutingTableRouteOutput(args: GetRoutingTableRouteOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetRoutingTableRouteResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("stackit:index/getRoutingTableRoute:getRoutingTableRoute", {
        "networkAreaId": args.networkAreaId,
        "organizationId": args.organizationId,
        "region": args.region,
        "routeId": args.routeId,
        "routingTableId": args.routingTableId,
    }, opts);
}

/**
 * A collection of arguments for invoking getRoutingTableRoute.
 */
export interface GetRoutingTableRouteOutputArgs {
    /**
     * The network area ID to which the routing table is associated.
     */
    networkAreaId: pulumi.Input<string>;
    /**
     * STACKIT organization ID to which the routing table is associated.
     */
    organizationId: pulumi.Input<string>;
    /**
     * The resource region. If not defined, the provider region is used.
     */
    region?: pulumi.Input<string>;
    /**
     * Route ID.
     */
    routeId: pulumi.Input<string>;
    /**
     * The routing tables ID.
     */
    routingTableId: pulumi.Input<string>;
}
