// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Observability alert group datasource schema. Used to create alerts based on metrics (Thanos). Must have a `region` specified in the provider configuration.
 *
 * ## Example Usage
 */
export function getObservabilityAlertgroup(args: GetObservabilityAlertgroupArgs, opts?: pulumi.InvokeOptions): Promise<GetObservabilityAlertgroupResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("stackit:index/getObservabilityAlertgroup:getObservabilityAlertgroup", {
        "instanceId": args.instanceId,
        "name": args.name,
        "projectId": args.projectId,
    }, opts);
}

/**
 * A collection of arguments for invoking getObservabilityAlertgroup.
 */
export interface GetObservabilityAlertgroupArgs {
    /**
     * Observability instance ID to which the alert group is associated.
     */
    instanceId: string;
    /**
     * The name of the alert group. Is the identifier and must be unique in the group.
     */
    name: string;
    /**
     * STACKIT project ID to which the alert group is associated.
     */
    projectId: string;
}

/**
 * A collection of values returned by getObservabilityAlertgroup.
 */
export interface GetObservabilityAlertgroupResult {
    readonly id: string;
    /**
     * Observability instance ID to which the alert group is associated.
     */
    readonly instanceId: string;
    /**
     * Specifies the frequency at which rules within the group are evaluated. The interval must be at least 60 seconds and defaults to 60 seconds if not set. Supported formats include hours, minutes, and seconds, either singly or in combination. Examples of valid formats are: '5h30m40s', '5h', '5h30m', '60m', and '60s'.
     */
    readonly interval: string;
    /**
     * The name of the alert group. Is the identifier and must be unique in the group.
     */
    readonly name: string;
    /**
     * STACKIT project ID to which the alert group is associated.
     */
    readonly projectId: string;
    readonly rules: outputs.GetObservabilityAlertgroupRule[];
}
/**
 * Observability alert group datasource schema. Used to create alerts based on metrics (Thanos). Must have a `region` specified in the provider configuration.
 *
 * ## Example Usage
 */
export function getObservabilityAlertgroupOutput(args: GetObservabilityAlertgroupOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetObservabilityAlertgroupResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("stackit:index/getObservabilityAlertgroup:getObservabilityAlertgroup", {
        "instanceId": args.instanceId,
        "name": args.name,
        "projectId": args.projectId,
    }, opts);
}

/**
 * A collection of arguments for invoking getObservabilityAlertgroup.
 */
export interface GetObservabilityAlertgroupOutputArgs {
    /**
     * Observability instance ID to which the alert group is associated.
     */
    instanceId: pulumi.Input<string>;
    /**
     * The name of the alert group. Is the identifier and must be unique in the group.
     */
    name: pulumi.Input<string>;
    /**
     * STACKIT project ID to which the alert group is associated.
     */
    projectId: pulumi.Input<string>;
}
