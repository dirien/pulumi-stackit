// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * DNS Zone resource schema.
 *
 * ## Example Usage
 */
export function getDnsZone(args: GetDnsZoneArgs, opts?: pulumi.InvokeOptions): Promise<GetDnsZoneResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("stackit:index/getDnsZone:getDnsZone", {
        "dnsName": args.dnsName,
        "projectId": args.projectId,
        "zoneId": args.zoneId,
    }, opts);
}

/**
 * A collection of arguments for invoking getDnsZone.
 */
export interface GetDnsZoneArgs {
    /**
     * The zone name. E.g. `example.com`
     */
    dnsName?: string;
    /**
     * STACKIT project ID to which the dns zone is associated.
     */
    projectId: string;
    /**
     * The zone ID.
     */
    zoneId?: string;
}

/**
 * A collection of values returned by getDnsZone.
 */
export interface GetDnsZoneResult {
    /**
     * The access control list.
     */
    readonly acl: string;
    readonly active: boolean;
    /**
     * A contact e-mail for the zone.
     */
    readonly contactEmail: string;
    /**
     * Default time to live.
     */
    readonly defaultTtl: number;
    /**
     * Description of the zone.
     */
    readonly description: string;
    /**
     * The zone name. E.g. `example.com`
     */
    readonly dnsName?: string;
    /**
     * Expire time.
     */
    readonly expireTime: number;
    readonly id: string;
    /**
     * Specifies, if the zone is a reverse zone or not.
     */
    readonly isReverseZone: boolean;
    /**
     * The user given name of the zone.
     */
    readonly name: string;
    /**
     * Negative caching.
     */
    readonly negativeCache: number;
    /**
     * Primary name server for secondary zone.
     */
    readonly primaries: string[];
    /**
     * Primary name server. FQDN.
     */
    readonly primaryNameServer: string;
    /**
     * STACKIT project ID to which the dns zone is associated.
     */
    readonly projectId: string;
    /**
     * Record count how many records are in the zone.
     */
    readonly recordCount: number;
    /**
     * Refresh time.
     */
    readonly refreshTime: number;
    /**
     * Retry time.
     */
    readonly retryTime: number;
    /**
     * Serial number.
     */
    readonly serialNumber: number;
    /**
     * Zone state.
     */
    readonly state: string;
    /**
     * Zone type.
     */
    readonly type: string;
    /**
     * Visibility of the zone.
     */
    readonly visibility: string;
    /**
     * The zone ID.
     */
    readonly zoneId?: string;
}
/**
 * DNS Zone resource schema.
 *
 * ## Example Usage
 */
export function getDnsZoneOutput(args: GetDnsZoneOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetDnsZoneResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("stackit:index/getDnsZone:getDnsZone", {
        "dnsName": args.dnsName,
        "projectId": args.projectId,
        "zoneId": args.zoneId,
    }, opts);
}

/**
 * A collection of arguments for invoking getDnsZone.
 */
export interface GetDnsZoneOutputArgs {
    /**
     * The zone name. E.g. `example.com`
     */
    dnsName?: pulumi.Input<string>;
    /**
     * STACKIT project ID to which the dns zone is associated.
     */
    projectId: pulumi.Input<string>;
    /**
     * The zone ID.
     */
    zoneId?: pulumi.Input<string>;
}
