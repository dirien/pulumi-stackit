// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Network resource schema. Must have a `region` specified in the provider configuration.
 *
 * ## Example Usage
 */
export function getNetwork(args: GetNetworkArgs, opts?: pulumi.InvokeOptions): Promise<GetNetworkResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("stackit:index/getNetwork:getNetwork", {
        "networkId": args.networkId,
        "projectId": args.projectId,
        "region": args.region,
    }, opts);
}

/**
 * A collection of arguments for invoking getNetwork.
 */
export interface GetNetworkArgs {
    /**
     * The network ID.
     */
    networkId: string;
    /**
     * STACKIT project ID to which the network is associated.
     */
    projectId: string;
    /**
     * Can only be used when experimental "network" is set. This is likely going to undergo significant changes or be removed in the future.
     * The resource region. If not defined, the provider region is used.
     */
    region?: string;
}

/**
 * A collection of values returned by getNetwork.
 */
export interface GetNetworkResult {
    readonly id: string;
    /**
     * The IPv4 gateway of a network. If not specified, the first IP of the network will be assigned as the gateway.
     */
    readonly ipv4Gateway: string;
    /**
     * The IPv4 nameservers of the network.
     */
    readonly ipv4Nameservers: string[];
    /**
     * The IPv4 prefix of the network (CIDR).
     *
     * @deprecated The API supports reading multiple prefixes. So using the attribute 'ipv4_prefixes` should be preferred. This attribute will be populated with the first element from the list
     */
    readonly ipv4Prefix: string;
    /**
     * The IPv4 prefix length of the network.
     */
    readonly ipv4PrefixLength: number;
    /**
     * The IPv4 prefixes of the network.
     */
    readonly ipv4Prefixes: string[];
    /**
     * The IPv6 gateway of a network. If not specified, the first IP of the network will be assigned as the gateway.
     */
    readonly ipv6Gateway: string;
    /**
     * The IPv6 nameservers of the network.
     */
    readonly ipv6Nameservers: string[];
    /**
     * The IPv6 prefix of the network (CIDR).
     *
     * @deprecated The API supports reading multiple prefixes. So using the attribute 'ipv6_prefixes` should be preferred. This attribute will be populated with the first element from the list
     */
    readonly ipv6Prefix: string;
    /**
     * The IPv6 prefix length of the network.
     */
    readonly ipv6PrefixLength: number;
    /**
     * The IPv6 prefixes of the network.
     */
    readonly ipv6Prefixes: string[];
    /**
     * Labels are key-value string pairs which can be attached to a resource container
     */
    readonly labels: {[key: string]: string};
    /**
     * The name of the network.
     */
    readonly name: string;
    /**
     * The nameservers of the network. This field is deprecated and will be removed soon, use `ipv4Nameservers` to configure the nameservers for IPv4.
     *
     * @deprecated Use `ipv4Nameservers` to configure the nameservers for IPv4.
     */
    readonly nameservers: string[];
    /**
     * The network ID.
     */
    readonly networkId: string;
    /**
     * The prefixes of the network. This field is deprecated and will be removed soon, use `ipv4Prefixes` to read the prefixes of the IPv4 networks.
     *
     * @deprecated Use `ipv4Prefixes` to read the prefixes of the IPv4 networks.
     */
    readonly prefixes: string[];
    /**
     * STACKIT project ID to which the network is associated.
     */
    readonly projectId: string;
    /**
     * The public IP of the network.
     */
    readonly publicIp: string;
    /**
     * Can only be used when experimental "network" is set. This is likely going to undergo significant changes or be removed in the future.
     * The resource region. If not defined, the provider region is used.
     */
    readonly region?: string;
    /**
     * Shows if the network is routed and therefore accessible from other networks.
     */
    readonly routed: boolean;
    /**
     * Can only be used when experimental "network" is set. This is likely going to undergo significant changes or be removed in the future. Use it at your own discretion.
     * The ID of the routing table associated with the network.
     */
    readonly routingTableId: string;
}
/**
 * Network resource schema. Must have a `region` specified in the provider configuration.
 *
 * ## Example Usage
 */
export function getNetworkOutput(args: GetNetworkOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetNetworkResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("stackit:index/getNetwork:getNetwork", {
        "networkId": args.networkId,
        "projectId": args.projectId,
        "region": args.region,
    }, opts);
}

/**
 * A collection of arguments for invoking getNetwork.
 */
export interface GetNetworkOutputArgs {
    /**
     * The network ID.
     */
    networkId: pulumi.Input<string>;
    /**
     * STACKIT project ID to which the network is associated.
     */
    projectId: pulumi.Input<string>;
    /**
     * Can only be used when experimental "network" is set. This is likely going to undergo significant changes or be removed in the future.
     * The resource region. If not defined, the provider region is used.
     */
    region?: pulumi.Input<string>;
}
