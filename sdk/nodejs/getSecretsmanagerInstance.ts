// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Secrets Manager instance data source schema. Must have a `region` specified in the provider configuration.
 *
 * ## Example Usage
 */
export function getSecretsmanagerInstance(args: GetSecretsmanagerInstanceArgs, opts?: pulumi.InvokeOptions): Promise<GetSecretsmanagerInstanceResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("stackit:index/getSecretsmanagerInstance:getSecretsmanagerInstance", {
        "instanceId": args.instanceId,
        "projectId": args.projectId,
    }, opts);
}

/**
 * A collection of arguments for invoking getSecretsmanagerInstance.
 */
export interface GetSecretsmanagerInstanceArgs {
    /**
     * ID of the Secrets Manager instance.
     */
    instanceId: string;
    /**
     * STACKIT project ID to which the instance is associated.
     */
    projectId: string;
}

/**
 * A collection of values returned by getSecretsmanagerInstance.
 */
export interface GetSecretsmanagerInstanceResult {
    /**
     * The access control list for this instance. Each entry is an IP or IP range that is permitted to access, in CIDR notation
     */
    readonly acls: string[];
    readonly id: string;
    /**
     * ID of the Secrets Manager instance.
     */
    readonly instanceId: string;
    /**
     * Instance name.
     */
    readonly name: string;
    /**
     * STACKIT project ID to which the instance is associated.
     */
    readonly projectId: string;
}
/**
 * Secrets Manager instance data source schema. Must have a `region` specified in the provider configuration.
 *
 * ## Example Usage
 */
export function getSecretsmanagerInstanceOutput(args: GetSecretsmanagerInstanceOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetSecretsmanagerInstanceResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("stackit:index/getSecretsmanagerInstance:getSecretsmanagerInstance", {
        "instanceId": args.instanceId,
        "projectId": args.projectId,
    }, opts);
}

/**
 * A collection of arguments for invoking getSecretsmanagerInstance.
 */
export interface GetSecretsmanagerInstanceOutputArgs {
    /**
     * ID of the Secrets Manager instance.
     */
    instanceId: pulumi.Input<string>;
    /**
     * STACKIT project ID to which the instance is associated.
     */
    projectId: pulumi.Input<string>;
}
