// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

declare var exports: any;
const __config = new pulumi.Config("stackit");

/**
 * Custom endpoint for the Argus service
 */
export declare const argusCustomEndpoint: string | undefined;
Object.defineProperty(exports, "argusCustomEndpoint", {
    get() {
        return __config.get("argusCustomEndpoint");
    },
    enumerable: true,
});

/**
 * Custom endpoint for the Membership service
 */
export declare const authorizationCustomEndpoint: string | undefined;
Object.defineProperty(exports, "authorizationCustomEndpoint", {
    get() {
        return __config.get("authorizationCustomEndpoint");
    },
    enumerable: true,
});

/**
 * Custom endpoint for the CDN service
 */
export declare const cdnCustomEndpoint: string | undefined;
Object.defineProperty(exports, "cdnCustomEndpoint", {
    get() {
        return __config.get("cdnCustomEndpoint");
    },
    enumerable: true,
});

/**
 * Path of JSON from where the credentials are read. Takes precedence over the env var `STACKIT_CREDENTIALS_PATH`. Default
 * value is `~/.stackit/credentials.json`.
 */
export declare const credentialsPath: string | undefined;
Object.defineProperty(exports, "credentialsPath", {
    get() {
        return __config.get("credentialsPath");
    },
    enumerable: true,
});

/**
 * Region will be used as the default location for regional services. Not all services require a region, some are global
 */
export declare const defaultRegion: string | undefined;
Object.defineProperty(exports, "defaultRegion", {
    get() {
        return __config.get("defaultRegion");
    },
    enumerable: true,
});

/**
 * Custom endpoint for the DNS service
 */
export declare const dnsCustomEndpoint: string | undefined;
Object.defineProperty(exports, "dnsCustomEndpoint", {
    get() {
        return __config.get("dnsCustomEndpoint");
    },
    enumerable: true,
});

/**
 * Enable beta resources. Default is false.
 */
export declare const enableBetaResources: boolean | undefined;
Object.defineProperty(exports, "enableBetaResources", {
    get() {
        return __config.getObject<boolean>("enableBetaResources");
    },
    enumerable: true,
});

/**
 * Enables experiments. These are unstable features without official support. More information can be found in the README.
 * Available Experiments: [iam]
 */
export declare const experiments: string[] | undefined;
Object.defineProperty(exports, "experiments", {
    get() {
        return __config.getObject<string[]>("experiments");
    },
    enumerable: true,
});

/**
 * Custom endpoint for the Git service
 */
export declare const gitCustomEndpoint: string | undefined;
Object.defineProperty(exports, "gitCustomEndpoint", {
    get() {
        return __config.get("gitCustomEndpoint");
    },
    enumerable: true,
});

/**
 * Custom endpoint for the IaaS service
 */
export declare const iaasCustomEndpoint: string | undefined;
Object.defineProperty(exports, "iaasCustomEndpoint", {
    get() {
        return __config.get("iaasCustomEndpoint");
    },
    enumerable: true,
});

/**
 * Custom endpoint for the Load Balancer service
 */
export declare const loadbalancerCustomEndpoint: string | undefined;
Object.defineProperty(exports, "loadbalancerCustomEndpoint", {
    get() {
        return __config.get("loadbalancerCustomEndpoint");
    },
    enumerable: true,
});

/**
 * Custom endpoint for the LogMe service
 */
export declare const logmeCustomEndpoint: string | undefined;
Object.defineProperty(exports, "logmeCustomEndpoint", {
    get() {
        return __config.get("logmeCustomEndpoint");
    },
    enumerable: true,
});

/**
 * Custom endpoint for the MariaDB service
 */
export declare const mariadbCustomEndpoint: string | undefined;
Object.defineProperty(exports, "mariadbCustomEndpoint", {
    get() {
        return __config.get("mariadbCustomEndpoint");
    },
    enumerable: true,
});

/**
 * Custom endpoint for the AI Model Serving service
 */
export declare const modelservingCustomEndpoint: string | undefined;
Object.defineProperty(exports, "modelservingCustomEndpoint", {
    get() {
        return __config.get("modelservingCustomEndpoint");
    },
    enumerable: true,
});

/**
 * Custom endpoint for the MongoDB Flex service
 */
export declare const mongodbflexCustomEndpoint: string | undefined;
Object.defineProperty(exports, "mongodbflexCustomEndpoint", {
    get() {
        return __config.get("mongodbflexCustomEndpoint");
    },
    enumerable: true,
});

/**
 * Custom endpoint for the Object Storage service
 */
export declare const objectstorageCustomEndpoint: string | undefined;
Object.defineProperty(exports, "objectstorageCustomEndpoint", {
    get() {
        return __config.get("objectstorageCustomEndpoint");
    },
    enumerable: true,
});

/**
 * Custom endpoint for the Observability service
 */
export declare const observabilityCustomEndpoint: string | undefined;
Object.defineProperty(exports, "observabilityCustomEndpoint", {
    get() {
        return __config.get("observabilityCustomEndpoint");
    },
    enumerable: true,
});

/**
 * Custom endpoint for the OpenSearch service
 */
export declare const opensearchCustomEndpoint: string | undefined;
Object.defineProperty(exports, "opensearchCustomEndpoint", {
    get() {
        return __config.get("opensearchCustomEndpoint");
    },
    enumerable: true,
});

/**
 * Custom endpoint for the PostgresFlex service
 */
export declare const postgresflexCustomEndpoint: string | undefined;
Object.defineProperty(exports, "postgresflexCustomEndpoint", {
    get() {
        return __config.get("postgresflexCustomEndpoint");
    },
    enumerable: true,
});

/**
 * Private RSA key used for authentication, relevant for the key flow. It takes precedence over the private key that is
 * included in the service account key.
 */
export declare const privateKey: string | undefined;
Object.defineProperty(exports, "privateKey", {
    get() {
        return __config.get("privateKey");
    },
    enumerable: true,
});

/**
 * Path for the private RSA key used for authentication, relevant for the key flow. It takes precedence over the private
 * key that is included in the service account key.
 */
export declare const privateKeyPath: string | undefined;
Object.defineProperty(exports, "privateKeyPath", {
    get() {
        return __config.get("privateKeyPath");
    },
    enumerable: true,
});

/**
 * Custom endpoint for the RabbitMQ service
 */
export declare const rabbitmqCustomEndpoint: string | undefined;
Object.defineProperty(exports, "rabbitmqCustomEndpoint", {
    get() {
        return __config.get("rabbitmqCustomEndpoint");
    },
    enumerable: true,
});

/**
 * Custom endpoint for the Redis service
 */
export declare const redisCustomEndpoint: string | undefined;
Object.defineProperty(exports, "redisCustomEndpoint", {
    get() {
        return __config.get("redisCustomEndpoint");
    },
    enumerable: true,
});

/**
 * Region will be used as the default location for regional services. Not all services require a region, some are global
 */
export declare const region: string | undefined;
Object.defineProperty(exports, "region", {
    get() {
        return __config.get("region");
    },
    enumerable: true,
});

/**
 * Custom endpoint for the Resource Manager service
 */
export declare const resourcemanagerCustomEndpoint: string | undefined;
Object.defineProperty(exports, "resourcemanagerCustomEndpoint", {
    get() {
        return __config.get("resourcemanagerCustomEndpoint");
    },
    enumerable: true,
});

/**
 * Custom endpoint for the Secrets Manager service
 */
export declare const secretsmanagerCustomEndpoint: string | undefined;
Object.defineProperty(exports, "secretsmanagerCustomEndpoint", {
    get() {
        return __config.get("secretsmanagerCustomEndpoint");
    },
    enumerable: true,
});

/**
 * Custom endpoint for the Server Backup service
 */
export declare const serverBackupCustomEndpoint: string | undefined;
Object.defineProperty(exports, "serverBackupCustomEndpoint", {
    get() {
        return __config.get("serverBackupCustomEndpoint");
    },
    enumerable: true,
});

/**
 * Custom endpoint for the Server Update service
 */
export declare const serverUpdateCustomEndpoint: string | undefined;
Object.defineProperty(exports, "serverUpdateCustomEndpoint", {
    get() {
        return __config.get("serverUpdateCustomEndpoint");
    },
    enumerable: true,
});

/**
 * Custom endpoint for the Service Account service
 */
export declare const serviceAccountCustomEndpoint: string | undefined;
Object.defineProperty(exports, "serviceAccountCustomEndpoint", {
    get() {
        return __config.get("serviceAccountCustomEndpoint");
    },
    enumerable: true,
});

/**
 * Service account email. It can also be set using the environment variable STACKIT_SERVICE_ACCOUNT_EMAIL. It is required
 * if you want to use the resource manager project resource.
 */
export declare const serviceAccountEmail: string | undefined;
Object.defineProperty(exports, "serviceAccountEmail", {
    get() {
        return __config.get("serviceAccountEmail");
    },
    enumerable: true,
});

/**
 * Service account key used for authentication. If set, the key flow will be used to authenticate all operations.
 */
export declare const serviceAccountKey: string | undefined;
Object.defineProperty(exports, "serviceAccountKey", {
    get() {
        return __config.get("serviceAccountKey");
    },
    enumerable: true,
});

/**
 * Path for the service account key used for authentication. If set, the key flow will be used to authenticate all
 * operations.
 */
export declare const serviceAccountKeyPath: string | undefined;
Object.defineProperty(exports, "serviceAccountKeyPath", {
    get() {
        return __config.get("serviceAccountKeyPath");
    },
    enumerable: true,
});

/**
 * Token used for authentication. If set, the token flow will be used to authenticate all operations.
 */
export declare const serviceAccountToken: string | undefined;
Object.defineProperty(exports, "serviceAccountToken", {
    get() {
        return __config.get("serviceAccountToken");
    },
    enumerable: true,
});

/**
 * Custom endpoint for the Service Enablement API
 */
export declare const serviceEnablementCustomEndpoint: string | undefined;
Object.defineProperty(exports, "serviceEnablementCustomEndpoint", {
    get() {
        return __config.get("serviceEnablementCustomEndpoint");
    },
    enumerable: true,
});

/**
 * Custom endpoint for the Kubernetes Engine (SKE) service
 */
export declare const skeCustomEndpoint: string | undefined;
Object.defineProperty(exports, "skeCustomEndpoint", {
    get() {
        return __config.get("skeCustomEndpoint");
    },
    enumerable: true,
});

/**
 * Custom endpoint for the SQL Server Flex service
 */
export declare const sqlserverflexCustomEndpoint: string | undefined;
Object.defineProperty(exports, "sqlserverflexCustomEndpoint", {
    get() {
        return __config.get("sqlserverflexCustomEndpoint");
    },
    enumerable: true,
});

/**
 * Custom endpoint for the token API, which is used to request access tokens when using the key flow
 */
export declare const tokenCustomEndpoint: string | undefined;
Object.defineProperty(exports, "tokenCustomEndpoint", {
    get() {
        return __config.get("tokenCustomEndpoint");
    },
    enumerable: true,
});

