// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Server backup schedule resource schema. Must have a `region` specified in the provider configuration.
 *
 * > This resource is in beta and may be subject to breaking changes in the future. Use with caution. See our guide for how to opt-in to use beta resources.
 *
 * ## Example Usage
 */
export class ServerBackupSchedule extends pulumi.CustomResource {
    /**
     * Get an existing ServerBackupSchedule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ServerBackupScheduleState, opts?: pulumi.CustomResourceOptions): ServerBackupSchedule {
        return new ServerBackupSchedule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'stackit:index/serverBackupSchedule:ServerBackupSchedule';

    /**
     * Returns true if the given object is an instance of ServerBackupSchedule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ServerBackupSchedule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ServerBackupSchedule.__pulumiType;
    }

    /**
     * Backup schedule details for the backups.
     */
    public readonly backupProperties!: pulumi.Output<outputs.ServerBackupScheduleBackupProperties>;
    /**
     * Backup schedule ID.
     */
    public /*out*/ readonly backupScheduleId!: pulumi.Output<number>;
    /**
     * Is the backup schedule enabled or disabled.
     */
    public readonly enabled!: pulumi.Output<boolean>;
    /**
     * The schedule name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * STACKIT Project ID to which the server is associated.
     */
    public readonly projectId!: pulumi.Output<string>;
    /**
     * The resource region. If not defined, the provider region is used.
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * Backup schedule described in `rrule` (recurrence rule) format.
     */
    public readonly rrule!: pulumi.Output<string>;
    /**
     * Server ID for the backup schedule.
     */
    public readonly serverId!: pulumi.Output<string>;

    /**
     * Create a ServerBackupSchedule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServerBackupScheduleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ServerBackupScheduleArgs | ServerBackupScheduleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ServerBackupScheduleState | undefined;
            resourceInputs["backupProperties"] = state ? state.backupProperties : undefined;
            resourceInputs["backupScheduleId"] = state ? state.backupScheduleId : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["rrule"] = state ? state.rrule : undefined;
            resourceInputs["serverId"] = state ? state.serverId : undefined;
        } else {
            const args = argsOrState as ServerBackupScheduleArgs | undefined;
            if ((!args || args.backupProperties === undefined) && !opts.urn) {
                throw new Error("Missing required property 'backupProperties'");
            }
            if ((!args || args.enabled === undefined) && !opts.urn) {
                throw new Error("Missing required property 'enabled'");
            }
            if ((!args || args.projectId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectId'");
            }
            if ((!args || args.rrule === undefined) && !opts.urn) {
                throw new Error("Missing required property 'rrule'");
            }
            if ((!args || args.serverId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serverId'");
            }
            resourceInputs["backupProperties"] = args ? args.backupProperties : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["projectId"] = args ? args.projectId : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["rrule"] = args ? args.rrule : undefined;
            resourceInputs["serverId"] = args ? args.serverId : undefined;
            resourceInputs["backupScheduleId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ServerBackupSchedule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ServerBackupSchedule resources.
 */
export interface ServerBackupScheduleState {
    /**
     * Backup schedule details for the backups.
     */
    backupProperties?: pulumi.Input<inputs.ServerBackupScheduleBackupProperties>;
    /**
     * Backup schedule ID.
     */
    backupScheduleId?: pulumi.Input<number>;
    /**
     * Is the backup schedule enabled or disabled.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The schedule name.
     */
    name?: pulumi.Input<string>;
    /**
     * STACKIT Project ID to which the server is associated.
     */
    projectId?: pulumi.Input<string>;
    /**
     * The resource region. If not defined, the provider region is used.
     */
    region?: pulumi.Input<string>;
    /**
     * Backup schedule described in `rrule` (recurrence rule) format.
     */
    rrule?: pulumi.Input<string>;
    /**
     * Server ID for the backup schedule.
     */
    serverId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ServerBackupSchedule resource.
 */
export interface ServerBackupScheduleArgs {
    /**
     * Backup schedule details for the backups.
     */
    backupProperties: pulumi.Input<inputs.ServerBackupScheduleBackupProperties>;
    /**
     * Is the backup schedule enabled or disabled.
     */
    enabled: pulumi.Input<boolean>;
    /**
     * The schedule name.
     */
    name?: pulumi.Input<string>;
    /**
     * STACKIT Project ID to which the server is associated.
     */
    projectId: pulumi.Input<string>;
    /**
     * The resource region. If not defined, the provider region is used.
     */
    region?: pulumi.Input<string>;
    /**
     * Backup schedule described in `rrule` (recurrence rule) format.
     */
    rrule: pulumi.Input<string>;
    /**
     * Server ID for the backup schedule.
     */
    serverId: pulumi.Input<string>;
}
