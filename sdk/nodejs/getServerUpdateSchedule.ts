// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Server update schedule datasource schema. Must have a `region` specified in the provider configuration.
 *
 * > This resource is in beta and may be subject to breaking changes in the future. Use with caution. See our guide for how to opt-in to use beta resources.
 *
 * ## Example Usage
 */
export function getServerUpdateSchedule(args: GetServerUpdateScheduleArgs, opts?: pulumi.InvokeOptions): Promise<GetServerUpdateScheduleResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("stackit:index/getServerUpdateSchedule:getServerUpdateSchedule", {
        "projectId": args.projectId,
        "region": args.region,
        "serverId": args.serverId,
        "updateScheduleId": args.updateScheduleId,
    }, opts);
}

/**
 * A collection of arguments for invoking getServerUpdateSchedule.
 */
export interface GetServerUpdateScheduleArgs {
    /**
     * STACKIT Project ID to which the server is associated.
     */
    projectId: string;
    /**
     * The resource region. If not defined, the provider region is used.
     */
    region?: string;
    /**
     * Server ID for the update schedule.
     */
    serverId: string;
    /**
     * Update schedule ID.
     */
    updateScheduleId: number;
}

/**
 * A collection of values returned by getServerUpdateSchedule.
 */
export interface GetServerUpdateScheduleResult {
    /**
     * Is the update schedule enabled or disabled.
     */
    readonly enabled: boolean;
    readonly id: string;
    /**
     * Maintenance window [1..24].
     */
    readonly maintenanceWindow: number;
    /**
     * The schedule name.
     */
    readonly name: string;
    /**
     * STACKIT Project ID to which the server is associated.
     */
    readonly projectId: string;
    /**
     * The resource region. If not defined, the provider region is used.
     */
    readonly region?: string;
    /**
     * Update schedule described in `rrule` (recurrence rule) format.
     */
    readonly rrule: string;
    /**
     * Server ID for the update schedule.
     */
    readonly serverId: string;
    /**
     * Update schedule ID.
     */
    readonly updateScheduleId: number;
}
/**
 * Server update schedule datasource schema. Must have a `region` specified in the provider configuration.
 *
 * > This resource is in beta and may be subject to breaking changes in the future. Use with caution. See our guide for how to opt-in to use beta resources.
 *
 * ## Example Usage
 */
export function getServerUpdateScheduleOutput(args: GetServerUpdateScheduleOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetServerUpdateScheduleResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("stackit:index/getServerUpdateSchedule:getServerUpdateSchedule", {
        "projectId": args.projectId,
        "region": args.region,
        "serverId": args.serverId,
        "updateScheduleId": args.updateScheduleId,
    }, opts);
}

/**
 * A collection of arguments for invoking getServerUpdateSchedule.
 */
export interface GetServerUpdateScheduleOutputArgs {
    /**
     * STACKIT Project ID to which the server is associated.
     */
    projectId: pulumi.Input<string>;
    /**
     * The resource region. If not defined, the provider region is used.
     */
    region?: pulumi.Input<string>;
    /**
     * Server ID for the update schedule.
     */
    serverId: pulumi.Input<string>;
    /**
     * Update schedule ID.
     */
    updateScheduleId: pulumi.Input<number>;
}
