// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Affinity Group schema. Must have a `region` specified in the provider configuration.
 *
 * ## Example Usage
 */
export function getAffinityGroup(args: GetAffinityGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetAffinityGroupResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("stackit:index/getAffinityGroup:getAffinityGroup", {
        "affinityGroupId": args.affinityGroupId,
        "projectId": args.projectId,
    }, opts);
}

/**
 * A collection of arguments for invoking getAffinityGroup.
 */
export interface GetAffinityGroupArgs {
    /**
     * The affinity group ID.
     */
    affinityGroupId: string;
    /**
     * STACKIT Project ID to which the affinity group is associated.
     */
    projectId: string;
}

/**
 * A collection of values returned by getAffinityGroup.
 */
export interface GetAffinityGroupResult {
    /**
     * The affinity group ID.
     */
    readonly affinityGroupId: string;
    readonly id: string;
    /**
     * Affinity Group schema. Must have a `region` specified in the provider configuration.
     */
    readonly members: string[];
    /**
     * The name of the affinity group.
     */
    readonly name: string;
    /**
     * The policy of the affinity group.
     */
    readonly policy: string;
    /**
     * STACKIT Project ID to which the affinity group is associated.
     */
    readonly projectId: string;
}
/**
 * Affinity Group schema. Must have a `region` specified in the provider configuration.
 *
 * ## Example Usage
 */
export function getAffinityGroupOutput(args: GetAffinityGroupOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetAffinityGroupResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("stackit:index/getAffinityGroup:getAffinityGroup", {
        "affinityGroupId": args.affinityGroupId,
        "projectId": args.projectId,
    }, opts);
}

/**
 * A collection of arguments for invoking getAffinityGroup.
 */
export interface GetAffinityGroupOutputArgs {
    /**
     * The affinity group ID.
     */
    affinityGroupId: pulumi.Input<string>;
    /**
     * STACKIT Project ID to which the affinity group is associated.
     */
    projectId: pulumi.Input<string>;
}
