// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Observability log alert group datasource schema. Used to create alerts based on logs (Loki). Must have a `region` specified in the provider configuration.
 *
 * ## Example Usage
 */
export function getObservabilityLogalertgroup(args: GetObservabilityLogalertgroupArgs, opts?: pulumi.InvokeOptions): Promise<GetObservabilityLogalertgroupResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("stackit:index/getObservabilityLogalertgroup:getObservabilityLogalertgroup", {
        "instanceId": args.instanceId,
        "name": args.name,
        "projectId": args.projectId,
    }, opts);
}

/**
 * A collection of arguments for invoking getObservabilityLogalertgroup.
 */
export interface GetObservabilityLogalertgroupArgs {
    /**
     * Observability instance ID to which the log alert group is associated.
     */
    instanceId: string;
    /**
     * The name of the log alert group. Is the identifier and must be unique in the group.
     */
    name: string;
    /**
     * STACKIT project ID to which the log alert group is associated.
     */
    projectId: string;
}

/**
 * A collection of values returned by getObservabilityLogalertgroup.
 */
export interface GetObservabilityLogalertgroupResult {
    readonly id: string;
    /**
     * Observability instance ID to which the log alert group is associated.
     */
    readonly instanceId: string;
    /**
     * Specifies the frequency at which rules within the group are evaluated. The interval must be at least 60 seconds and defaults to 60 seconds if not set. Supported formats include hours, minutes, and seconds, either singly or in combination. Examples of valid formats are: '5h30m40s', '5h', '5h30m', '60m', and '60s'.
     */
    readonly interval: string;
    /**
     * The name of the log alert group. Is the identifier and must be unique in the group.
     */
    readonly name: string;
    /**
     * STACKIT project ID to which the log alert group is associated.
     */
    readonly projectId: string;
    readonly rules: outputs.GetObservabilityLogalertgroupRule[];
}
/**
 * Observability log alert group datasource schema. Used to create alerts based on logs (Loki). Must have a `region` specified in the provider configuration.
 *
 * ## Example Usage
 */
export function getObservabilityLogalertgroupOutput(args: GetObservabilityLogalertgroupOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetObservabilityLogalertgroupResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("stackit:index/getObservabilityLogalertgroup:getObservabilityLogalertgroup", {
        "instanceId": args.instanceId,
        "name": args.name,
        "projectId": args.projectId,
    }, opts);
}

/**
 * A collection of arguments for invoking getObservabilityLogalertgroup.
 */
export interface GetObservabilityLogalertgroupOutputArgs {
    /**
     * Observability instance ID to which the log alert group is associated.
     */
    instanceId: pulumi.Input<string>;
    /**
     * The name of the log alert group. Is the identifier and must be unique in the group.
     */
    name: pulumi.Input<string>;
    /**
     * STACKIT project ID to which the log alert group is associated.
     */
    projectId: pulumi.Input<string>;
}
