// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ObjectStorage credential resource schema. Must have a `region` specified in the provider configuration.
 *
 * ## Example Usage
 */
export class ObjectstorageCredential extends pulumi.CustomResource {
    /**
     * Get an existing ObjectstorageCredential resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ObjectstorageCredentialState, opts?: pulumi.CustomResourceOptions): ObjectstorageCredential {
        return new ObjectstorageCredential(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'stackit:index/objectstorageCredential:ObjectstorageCredential';

    /**
     * Returns true if the given object is an instance of ObjectstorageCredential.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ObjectstorageCredential {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ObjectstorageCredential.__pulumiType;
    }

    declare public /*out*/ readonly accessKey: pulumi.Output<string>;
    /**
     * The credential ID.
     */
    declare public /*out*/ readonly credentialId: pulumi.Output<string>;
    /**
     * The credential group ID.
     */
    declare public readonly credentialsGroupId: pulumi.Output<string>;
    /**
     * Expiration timestamp, in RFC339 format without fractional seconds. Example: "2025-01-01T00:00:00Z". If not set, the credential never expires.
     */
    declare public readonly expirationTimestamp: pulumi.Output<string>;
    declare public /*out*/ readonly name: pulumi.Output<string>;
    /**
     * STACKIT Project ID to which the credential group is associated.
     */
    declare public readonly projectId: pulumi.Output<string>;
    /**
     * The resource region. If not defined, the provider region is used.
     */
    declare public readonly region: pulumi.Output<string>;
    declare public /*out*/ readonly secretAccessKey: pulumi.Output<string>;

    /**
     * Create a ObjectstorageCredential resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ObjectstorageCredentialArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ObjectstorageCredentialArgs | ObjectstorageCredentialState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ObjectstorageCredentialState | undefined;
            resourceInputs["accessKey"] = state?.accessKey;
            resourceInputs["credentialId"] = state?.credentialId;
            resourceInputs["credentialsGroupId"] = state?.credentialsGroupId;
            resourceInputs["expirationTimestamp"] = state?.expirationTimestamp;
            resourceInputs["name"] = state?.name;
            resourceInputs["projectId"] = state?.projectId;
            resourceInputs["region"] = state?.region;
            resourceInputs["secretAccessKey"] = state?.secretAccessKey;
        } else {
            const args = argsOrState as ObjectstorageCredentialArgs | undefined;
            if (args?.credentialsGroupId === undefined && !opts.urn) {
                throw new Error("Missing required property 'credentialsGroupId'");
            }
            if (args?.projectId === undefined && !opts.urn) {
                throw new Error("Missing required property 'projectId'");
            }
            resourceInputs["credentialsGroupId"] = args?.credentialsGroupId;
            resourceInputs["expirationTimestamp"] = args?.expirationTimestamp;
            resourceInputs["projectId"] = args?.projectId;
            resourceInputs["region"] = args?.region;
            resourceInputs["accessKey"] = undefined /*out*/;
            resourceInputs["credentialId"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["secretAccessKey"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["secretAccessKey"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(ObjectstorageCredential.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ObjectstorageCredential resources.
 */
export interface ObjectstorageCredentialState {
    accessKey?: pulumi.Input<string>;
    /**
     * The credential ID.
     */
    credentialId?: pulumi.Input<string>;
    /**
     * The credential group ID.
     */
    credentialsGroupId?: pulumi.Input<string>;
    /**
     * Expiration timestamp, in RFC339 format without fractional seconds. Example: "2025-01-01T00:00:00Z". If not set, the credential never expires.
     */
    expirationTimestamp?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    /**
     * STACKIT Project ID to which the credential group is associated.
     */
    projectId?: pulumi.Input<string>;
    /**
     * The resource region. If not defined, the provider region is used.
     */
    region?: pulumi.Input<string>;
    secretAccessKey?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ObjectstorageCredential resource.
 */
export interface ObjectstorageCredentialArgs {
    /**
     * The credential group ID.
     */
    credentialsGroupId: pulumi.Input<string>;
    /**
     * Expiration timestamp, in RFC339 format without fractional seconds. Example: "2025-01-01T00:00:00Z". If not set, the credential never expires.
     */
    expirationTimestamp?: pulumi.Input<string>;
    /**
     * STACKIT Project ID to which the credential group is associated.
     */
    projectId: pulumi.Input<string>;
    /**
     * The resource region. If not defined, the provider region is used.
     */
    region?: pulumi.Input<string>;
}
