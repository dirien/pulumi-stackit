// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Network resource schema. Must have a `region` specified in the provider configuration.
 *
 * ## Example Usage
 */
export class Network extends pulumi.CustomResource {
    /**
     * Get an existing Network resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NetworkState, opts?: pulumi.CustomResourceOptions): Network {
        return new Network(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'stackit:index/network:Network';

    /**
     * Returns true if the given object is an instance of Network.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Network {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Network.__pulumiType;
    }

    /**
     * The IPv4 gateway of a network. If not specified, the first IP of the network will be assigned as the gateway.
     */
    public readonly ipv4Gateway!: pulumi.Output<string>;
    /**
     * The IPv4 nameservers of the network.
     */
    public readonly ipv4Nameservers!: pulumi.Output<string[]>;
    /**
     * The IPv4 prefix of the network (CIDR).
     */
    public readonly ipv4Prefix!: pulumi.Output<string>;
    /**
     * The IPv4 prefix length of the network.
     */
    public readonly ipv4PrefixLength!: pulumi.Output<number>;
    /**
     * The IPv4 prefixes of the network.
     */
    public /*out*/ readonly ipv4Prefixes!: pulumi.Output<string[]>;
    /**
     * The IPv6 gateway of a network. If not specified, the first IP of the network will be assigned as the gateway.
     */
    public readonly ipv6Gateway!: pulumi.Output<string>;
    /**
     * The IPv6 nameservers of the network.
     */
    public readonly ipv6Nameservers!: pulumi.Output<string[]>;
    /**
     * The IPv6 prefix of the network (CIDR).
     */
    public readonly ipv6Prefix!: pulumi.Output<string | undefined>;
    /**
     * The IPv6 prefix length of the network.
     */
    public readonly ipv6PrefixLength!: pulumi.Output<number | undefined>;
    /**
     * The IPv6 prefixes of the network.
     */
    public /*out*/ readonly ipv6Prefixes!: pulumi.Output<string[]>;
    /**
     * Labels are key-value string pairs which can be attached to a resource container
     */
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The name of the network.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The nameservers of the network. This field is deprecated and will be removed soon, use `ipv4Nameservers` to configure the nameservers for IPv4.
     *
     * @deprecated Use `ipv4Nameservers` to configure the nameservers for IPv4.
     */
    public readonly nameservers!: pulumi.Output<string[]>;
    /**
     * The network ID.
     */
    public /*out*/ readonly networkId!: pulumi.Output<string>;
    /**
     * If set to `true`, the network doesn't have a gateway.
     */
    public readonly noIpv4Gateway!: pulumi.Output<boolean | undefined>;
    /**
     * If set to `true`, the network doesn't have a gateway.
     */
    public readonly noIpv6Gateway!: pulumi.Output<boolean | undefined>;
    /**
     * The prefixes of the network. This field is deprecated and will be removed soon, use `ipv4Prefixes` to read the prefixes of the IPv4 networks.
     *
     * @deprecated Use `ipv4Prefixes` to read the prefixes of the IPv4 networks.
     */
    public /*out*/ readonly prefixes!: pulumi.Output<string[]>;
    /**
     * STACKIT project ID to which the network is associated.
     */
    public readonly projectId!: pulumi.Output<string>;
    /**
     * The public IP of the network.
     */
    public /*out*/ readonly publicIp!: pulumi.Output<string>;
    /**
     * Can only be used when experimental "network" is set.
     * The resource region. If not defined, the provider region is used.
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * If set to `true`, the network is routed and therefore accessible from other networks.
     */
    public readonly routed!: pulumi.Output<boolean>;
    /**
     * Can only be used when experimental "network" is set.
     * The ID of the routing table associated with the network.
     */
    public readonly routingTableId!: pulumi.Output<string>;

    /**
     * Create a Network resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NetworkArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NetworkArgs | NetworkState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NetworkState | undefined;
            resourceInputs["ipv4Gateway"] = state ? state.ipv4Gateway : undefined;
            resourceInputs["ipv4Nameservers"] = state ? state.ipv4Nameservers : undefined;
            resourceInputs["ipv4Prefix"] = state ? state.ipv4Prefix : undefined;
            resourceInputs["ipv4PrefixLength"] = state ? state.ipv4PrefixLength : undefined;
            resourceInputs["ipv4Prefixes"] = state ? state.ipv4Prefixes : undefined;
            resourceInputs["ipv6Gateway"] = state ? state.ipv6Gateway : undefined;
            resourceInputs["ipv6Nameservers"] = state ? state.ipv6Nameservers : undefined;
            resourceInputs["ipv6Prefix"] = state ? state.ipv6Prefix : undefined;
            resourceInputs["ipv6PrefixLength"] = state ? state.ipv6PrefixLength : undefined;
            resourceInputs["ipv6Prefixes"] = state ? state.ipv6Prefixes : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nameservers"] = state ? state.nameservers : undefined;
            resourceInputs["networkId"] = state ? state.networkId : undefined;
            resourceInputs["noIpv4Gateway"] = state ? state.noIpv4Gateway : undefined;
            resourceInputs["noIpv6Gateway"] = state ? state.noIpv6Gateway : undefined;
            resourceInputs["prefixes"] = state ? state.prefixes : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["publicIp"] = state ? state.publicIp : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["routed"] = state ? state.routed : undefined;
            resourceInputs["routingTableId"] = state ? state.routingTableId : undefined;
        } else {
            const args = argsOrState as NetworkArgs | undefined;
            if ((!args || args.projectId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectId'");
            }
            resourceInputs["ipv4Gateway"] = args ? args.ipv4Gateway : undefined;
            resourceInputs["ipv4Nameservers"] = args ? args.ipv4Nameservers : undefined;
            resourceInputs["ipv4Prefix"] = args ? args.ipv4Prefix : undefined;
            resourceInputs["ipv4PrefixLength"] = args ? args.ipv4PrefixLength : undefined;
            resourceInputs["ipv6Gateway"] = args ? args.ipv6Gateway : undefined;
            resourceInputs["ipv6Nameservers"] = args ? args.ipv6Nameservers : undefined;
            resourceInputs["ipv6Prefix"] = args ? args.ipv6Prefix : undefined;
            resourceInputs["ipv6PrefixLength"] = args ? args.ipv6PrefixLength : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nameservers"] = args ? args.nameservers : undefined;
            resourceInputs["noIpv4Gateway"] = args ? args.noIpv4Gateway : undefined;
            resourceInputs["noIpv6Gateway"] = args ? args.noIpv6Gateway : undefined;
            resourceInputs["projectId"] = args ? args.projectId : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["routed"] = args ? args.routed : undefined;
            resourceInputs["routingTableId"] = args ? args.routingTableId : undefined;
            resourceInputs["ipv4Prefixes"] = undefined /*out*/;
            resourceInputs["ipv6Prefixes"] = undefined /*out*/;
            resourceInputs["networkId"] = undefined /*out*/;
            resourceInputs["prefixes"] = undefined /*out*/;
            resourceInputs["publicIp"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Network.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Network resources.
 */
export interface NetworkState {
    /**
     * The IPv4 gateway of a network. If not specified, the first IP of the network will be assigned as the gateway.
     */
    ipv4Gateway?: pulumi.Input<string>;
    /**
     * The IPv4 nameservers of the network.
     */
    ipv4Nameservers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The IPv4 prefix of the network (CIDR).
     */
    ipv4Prefix?: pulumi.Input<string>;
    /**
     * The IPv4 prefix length of the network.
     */
    ipv4PrefixLength?: pulumi.Input<number>;
    /**
     * The IPv4 prefixes of the network.
     */
    ipv4Prefixes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The IPv6 gateway of a network. If not specified, the first IP of the network will be assigned as the gateway.
     */
    ipv6Gateway?: pulumi.Input<string>;
    /**
     * The IPv6 nameservers of the network.
     */
    ipv6Nameservers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The IPv6 prefix of the network (CIDR).
     */
    ipv6Prefix?: pulumi.Input<string>;
    /**
     * The IPv6 prefix length of the network.
     */
    ipv6PrefixLength?: pulumi.Input<number>;
    /**
     * The IPv6 prefixes of the network.
     */
    ipv6Prefixes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Labels are key-value string pairs which can be attached to a resource container
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The name of the network.
     */
    name?: pulumi.Input<string>;
    /**
     * The nameservers of the network. This field is deprecated and will be removed soon, use `ipv4Nameservers` to configure the nameservers for IPv4.
     *
     * @deprecated Use `ipv4Nameservers` to configure the nameservers for IPv4.
     */
    nameservers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The network ID.
     */
    networkId?: pulumi.Input<string>;
    /**
     * If set to `true`, the network doesn't have a gateway.
     */
    noIpv4Gateway?: pulumi.Input<boolean>;
    /**
     * If set to `true`, the network doesn't have a gateway.
     */
    noIpv6Gateway?: pulumi.Input<boolean>;
    /**
     * The prefixes of the network. This field is deprecated and will be removed soon, use `ipv4Prefixes` to read the prefixes of the IPv4 networks.
     *
     * @deprecated Use `ipv4Prefixes` to read the prefixes of the IPv4 networks.
     */
    prefixes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * STACKIT project ID to which the network is associated.
     */
    projectId?: pulumi.Input<string>;
    /**
     * The public IP of the network.
     */
    publicIp?: pulumi.Input<string>;
    /**
     * Can only be used when experimental "network" is set.
     * The resource region. If not defined, the provider region is used.
     */
    region?: pulumi.Input<string>;
    /**
     * If set to `true`, the network is routed and therefore accessible from other networks.
     */
    routed?: pulumi.Input<boolean>;
    /**
     * Can only be used when experimental "network" is set.
     * The ID of the routing table associated with the network.
     */
    routingTableId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Network resource.
 */
export interface NetworkArgs {
    /**
     * The IPv4 gateway of a network. If not specified, the first IP of the network will be assigned as the gateway.
     */
    ipv4Gateway?: pulumi.Input<string>;
    /**
     * The IPv4 nameservers of the network.
     */
    ipv4Nameservers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The IPv4 prefix of the network (CIDR).
     */
    ipv4Prefix?: pulumi.Input<string>;
    /**
     * The IPv4 prefix length of the network.
     */
    ipv4PrefixLength?: pulumi.Input<number>;
    /**
     * The IPv6 gateway of a network. If not specified, the first IP of the network will be assigned as the gateway.
     */
    ipv6Gateway?: pulumi.Input<string>;
    /**
     * The IPv6 nameservers of the network.
     */
    ipv6Nameservers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The IPv6 prefix of the network (CIDR).
     */
    ipv6Prefix?: pulumi.Input<string>;
    /**
     * The IPv6 prefix length of the network.
     */
    ipv6PrefixLength?: pulumi.Input<number>;
    /**
     * Labels are key-value string pairs which can be attached to a resource container
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The name of the network.
     */
    name?: pulumi.Input<string>;
    /**
     * The nameservers of the network. This field is deprecated and will be removed soon, use `ipv4Nameservers` to configure the nameservers for IPv4.
     *
     * @deprecated Use `ipv4Nameservers` to configure the nameservers for IPv4.
     */
    nameservers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * If set to `true`, the network doesn't have a gateway.
     */
    noIpv4Gateway?: pulumi.Input<boolean>;
    /**
     * If set to `true`, the network doesn't have a gateway.
     */
    noIpv6Gateway?: pulumi.Input<boolean>;
    /**
     * STACKIT project ID to which the network is associated.
     */
    projectId: pulumi.Input<string>;
    /**
     * Can only be used when experimental "network" is set.
     * The resource region. If not defined, the provider region is used.
     */
    region?: pulumi.Input<string>;
    /**
     * If set to `true`, the network is routed and therefore accessible from other networks.
     */
    routed?: pulumi.Input<boolean>;
    /**
     * Can only be used when experimental "network" is set.
     * The ID of the routing table associated with the network.
     */
    routingTableId?: pulumi.Input<string>;
}
