// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Machine type data source.
 *
 * > This datasource is in beta and may be subject to breaking changes in the future. Use with caution. See our guide for how to opt-in to use beta resources.
 *
 * ## Example Usage
 */
export function getMachineType(args: GetMachineTypeArgs, opts?: pulumi.InvokeOptions): Promise<GetMachineTypeResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("stackit:index/getMachineType:getMachineType", {
        "filter": args.filter,
        "projectId": args.projectId,
        "sortAscending": args.sortAscending,
    }, opts);
}

/**
 * A collection of arguments for invoking getMachineType.
 */
export interface GetMachineTypeArgs {
    /**
     * Expr-lang filter for filtering machine types.
     */
    filter: string;
    projectId: string;
    sortAscending?: boolean;
}

/**
 * A collection of values returned by getMachineType.
 */
export interface GetMachineTypeResult {
    readonly description: string;
    readonly disk: number;
    readonly extraSpecs: {[key: string]: string};
    /**
     * Expr-lang filter for filtering machine types.
     */
    readonly filter: string;
    readonly id: string;
    readonly name: string;
    readonly projectId: string;
    readonly ram: number;
    readonly sortAscending?: boolean;
    readonly vcpus: number;
}
/**
 * Machine type data source.
 *
 * > This datasource is in beta and may be subject to breaking changes in the future. Use with caution. See our guide for how to opt-in to use beta resources.
 *
 * ## Example Usage
 */
export function getMachineTypeOutput(args: GetMachineTypeOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetMachineTypeResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("stackit:index/getMachineType:getMachineType", {
        "filter": args.filter,
        "projectId": args.projectId,
        "sortAscending": args.sortAscending,
    }, opts);
}

/**
 * A collection of arguments for invoking getMachineType.
 */
export interface GetMachineTypeOutputArgs {
    /**
     * Expr-lang filter for filtering machine types.
     */
    filter: pulumi.Input<string>;
    projectId: pulumi.Input<string>;
    sortAscending?: pulumi.Input<boolean>;
}
