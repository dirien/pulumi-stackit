// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Security group datasource schema. Must have a `region` specified in the provider configuration.
 *
 * ## Example Usage
 */
export function getSecurityGroup(args: GetSecurityGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetSecurityGroupResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("stackit:index/getSecurityGroup:getSecurityGroup", {
        "projectId": args.projectId,
        "securityGroupId": args.securityGroupId,
    }, opts);
}

/**
 * A collection of arguments for invoking getSecurityGroup.
 */
export interface GetSecurityGroupArgs {
    /**
     * STACKIT project ID to which the security group is associated.
     */
    projectId: string;
    /**
     * The security group ID.
     */
    securityGroupId: string;
}

/**
 * A collection of values returned by getSecurityGroup.
 */
export interface GetSecurityGroupResult {
    /**
     * The description of the security group.
     */
    readonly description: string;
    readonly id: string;
    /**
     * Labels are key-value string pairs which can be attached to a resource container
     */
    readonly labels: {[key: string]: string};
    /**
     * The name of the security group.
     */
    readonly name: string;
    /**
     * STACKIT project ID to which the security group is associated.
     */
    readonly projectId: string;
    /**
     * The security group ID.
     */
    readonly securityGroupId: string;
    /**
     * Configures if a security group is stateful or stateless. There can only be one type of security groups per network interface/server.
     */
    readonly stateful: boolean;
}
/**
 * Security group datasource schema. Must have a `region` specified in the provider configuration.
 *
 * ## Example Usage
 */
export function getSecurityGroupOutput(args: GetSecurityGroupOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetSecurityGroupResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("stackit:index/getSecurityGroup:getSecurityGroup", {
        "projectId": args.projectId,
        "securityGroupId": args.securityGroupId,
    }, opts);
}

/**
 * A collection of arguments for invoking getSecurityGroup.
 */
export interface GetSecurityGroupOutputArgs {
    /**
     * STACKIT project ID to which the security group is associated.
     */
    projectId: pulumi.Input<string>;
    /**
     * The security group ID.
     */
    securityGroupId: pulumi.Input<string>;
}
