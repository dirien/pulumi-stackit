// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Routing table datasource schema. Must have a `region` specified in the provider configuration.
 *
 * > This datasource is part of the routing-tables experiment and is likely going to undergo significant changes or be removed in the future. Use it at your own discretion.
 *
 * ## Example Usage
 */
export function getRoutingTables(args: GetRoutingTablesArgs, opts?: pulumi.InvokeOptions): Promise<GetRoutingTablesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("stackit:index/getRoutingTables:getRoutingTables", {
        "networkAreaId": args.networkAreaId,
        "organizationId": args.organizationId,
        "region": args.region,
    }, opts);
}

/**
 * A collection of arguments for invoking getRoutingTables.
 */
export interface GetRoutingTablesArgs {
    /**
     * The network area ID to which the routing table is associated.
     */
    networkAreaId: string;
    /**
     * STACKIT organization ID to which the routing table is associated.
     */
    organizationId: string;
    /**
     * The resource region. If not defined, the provider region is used.
     */
    region?: string;
}

/**
 * A collection of values returned by getRoutingTables.
 */
export interface GetRoutingTablesResult {
    readonly id: string;
    /**
     * List of routing tables.
     */
    readonly items: outputs.GetRoutingTablesItem[];
    /**
     * The network area ID to which the routing table is associated.
     */
    readonly networkAreaId: string;
    /**
     * STACKIT organization ID to which the routing table is associated.
     */
    readonly organizationId: string;
    /**
     * The resource region. If not defined, the provider region is used.
     */
    readonly region?: string;
}
/**
 * Routing table datasource schema. Must have a `region` specified in the provider configuration.
 *
 * > This datasource is part of the routing-tables experiment and is likely going to undergo significant changes or be removed in the future. Use it at your own discretion.
 *
 * ## Example Usage
 */
export function getRoutingTablesOutput(args: GetRoutingTablesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetRoutingTablesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("stackit:index/getRoutingTables:getRoutingTables", {
        "networkAreaId": args.networkAreaId,
        "organizationId": args.organizationId,
        "region": args.region,
    }, opts);
}

/**
 * A collection of arguments for invoking getRoutingTables.
 */
export interface GetRoutingTablesOutputArgs {
    /**
     * The network area ID to which the routing table is associated.
     */
    networkAreaId: pulumi.Input<string>;
    /**
     * STACKIT organization ID to which the routing table is associated.
     */
    organizationId: pulumi.Input<string>;
    /**
     * The resource region. If not defined, the provider region is used.
     */
    region?: pulumi.Input<string>;
}
