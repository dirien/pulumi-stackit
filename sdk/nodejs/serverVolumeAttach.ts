// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Volume attachment resource schema. Attaches a volume to a server. Must have a `region` specified in the provider configuration.
 *
 * ## Example Usage
 */
export class ServerVolumeAttach extends pulumi.CustomResource {
    /**
     * Get an existing ServerVolumeAttach resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ServerVolumeAttachState, opts?: pulumi.CustomResourceOptions): ServerVolumeAttach {
        return new ServerVolumeAttach(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'stackit:index/serverVolumeAttach:ServerVolumeAttach';

    /**
     * Returns true if the given object is an instance of ServerVolumeAttach.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ServerVolumeAttach {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ServerVolumeAttach.__pulumiType;
    }

    /**
     * STACKIT project ID to which the volume attachment is associated.
     */
    declare public readonly projectId: pulumi.Output<string>;
    /**
     * The server ID.
     */
    declare public readonly serverId: pulumi.Output<string>;
    /**
     * The volume ID.
     */
    declare public readonly volumeId: pulumi.Output<string>;

    /**
     * Create a ServerVolumeAttach resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServerVolumeAttachArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ServerVolumeAttachArgs | ServerVolumeAttachState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ServerVolumeAttachState | undefined;
            resourceInputs["projectId"] = state?.projectId;
            resourceInputs["serverId"] = state?.serverId;
            resourceInputs["volumeId"] = state?.volumeId;
        } else {
            const args = argsOrState as ServerVolumeAttachArgs | undefined;
            if (args?.projectId === undefined && !opts.urn) {
                throw new Error("Missing required property 'projectId'");
            }
            if (args?.serverId === undefined && !opts.urn) {
                throw new Error("Missing required property 'serverId'");
            }
            if (args?.volumeId === undefined && !opts.urn) {
                throw new Error("Missing required property 'volumeId'");
            }
            resourceInputs["projectId"] = args?.projectId;
            resourceInputs["serverId"] = args?.serverId;
            resourceInputs["volumeId"] = args?.volumeId;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ServerVolumeAttach.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ServerVolumeAttach resources.
 */
export interface ServerVolumeAttachState {
    /**
     * STACKIT project ID to which the volume attachment is associated.
     */
    projectId?: pulumi.Input<string>;
    /**
     * The server ID.
     */
    serverId?: pulumi.Input<string>;
    /**
     * The volume ID.
     */
    volumeId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ServerVolumeAttach resource.
 */
export interface ServerVolumeAttachArgs {
    /**
     * STACKIT project ID to which the volume attachment is associated.
     */
    projectId: pulumi.Input<string>;
    /**
     * The server ID.
     */
    serverId: pulumi.Input<string>;
    /**
     * The volume ID.
     */
    volumeId: pulumi.Input<string>;
}
