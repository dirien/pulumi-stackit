// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * LogMe instance data source schema. Must have a `region` specified in the provider configuration.
 *
 * ## Example Usage
 */
export function getLogmeInstance(args: GetLogmeInstanceArgs, opts?: pulumi.InvokeOptions): Promise<GetLogmeInstanceResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("stackit:index/getLogmeInstance:getLogmeInstance", {
        "instanceId": args.instanceId,
        "projectId": args.projectId,
    }, opts);
}

/**
 * A collection of arguments for invoking getLogmeInstance.
 */
export interface GetLogmeInstanceArgs {
    /**
     * ID of the LogMe instance.
     */
    instanceId: string;
    /**
     * STACKIT Project ID to which the instance is associated.
     */
    projectId: string;
}

/**
 * A collection of values returned by getLogmeInstance.
 */
export interface GetLogmeInstanceResult {
    readonly cfGuid: string;
    readonly cfOrganizationGuid: string;
    readonly cfSpaceGuid: string;
    readonly dashboardUrl: string;
    readonly id: string;
    readonly imageUrl: string;
    /**
     * ID of the LogMe instance.
     */
    readonly instanceId: string;
    /**
     * Instance name.
     */
    readonly name: string;
    readonly parameters: outputs.GetLogmeInstanceParameters;
    /**
     * The selected plan ID.
     */
    readonly planId: string;
    /**
     * The selected plan name.
     */
    readonly planName: string;
    /**
     * STACKIT Project ID to which the instance is associated.
     */
    readonly projectId: string;
    /**
     * The service version.
     */
    readonly version: string;
}
/**
 * LogMe instance data source schema. Must have a `region` specified in the provider configuration.
 *
 * ## Example Usage
 */
export function getLogmeInstanceOutput(args: GetLogmeInstanceOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetLogmeInstanceResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("stackit:index/getLogmeInstance:getLogmeInstance", {
        "instanceId": args.instanceId,
        "projectId": args.projectId,
    }, opts);
}

/**
 * A collection of arguments for invoking getLogmeInstance.
 */
export interface GetLogmeInstanceOutputArgs {
    /**
     * ID of the LogMe instance.
     */
    instanceId: pulumi.Input<string>;
    /**
     * STACKIT Project ID to which the instance is associated.
     */
    projectId: pulumi.Input<string>;
}
