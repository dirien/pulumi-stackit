// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Network interface attachment resource schema. Attaches a network interface to a server. Must have a `region` specified in the provider configuration. The attachment only takes full effect after server reboot.
 *
 * ## Example Usage
 */
export class ServerNetworkInterfaceAttach extends pulumi.CustomResource {
    /**
     * Get an existing ServerNetworkInterfaceAttach resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ServerNetworkInterfaceAttachState, opts?: pulumi.CustomResourceOptions): ServerNetworkInterfaceAttach {
        return new ServerNetworkInterfaceAttach(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'stackit:index/serverNetworkInterfaceAttach:ServerNetworkInterfaceAttach';

    /**
     * Returns true if the given object is an instance of ServerNetworkInterfaceAttach.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ServerNetworkInterfaceAttach {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ServerNetworkInterfaceAttach.__pulumiType;
    }

    /**
     * The network interface ID.
     */
    public readonly networkInterfaceId!: pulumi.Output<string>;
    /**
     * STACKIT project ID to which the network interface attachment is associated.
     */
    public readonly projectId!: pulumi.Output<string>;
    /**
     * The server ID.
     */
    public readonly serverId!: pulumi.Output<string>;

    /**
     * Create a ServerNetworkInterfaceAttach resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServerNetworkInterfaceAttachArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ServerNetworkInterfaceAttachArgs | ServerNetworkInterfaceAttachState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ServerNetworkInterfaceAttachState | undefined;
            resourceInputs["networkInterfaceId"] = state ? state.networkInterfaceId : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["serverId"] = state ? state.serverId : undefined;
        } else {
            const args = argsOrState as ServerNetworkInterfaceAttachArgs | undefined;
            if ((!args || args.networkInterfaceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'networkInterfaceId'");
            }
            if ((!args || args.projectId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectId'");
            }
            if ((!args || args.serverId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serverId'");
            }
            resourceInputs["networkInterfaceId"] = args ? args.networkInterfaceId : undefined;
            resourceInputs["projectId"] = args ? args.projectId : undefined;
            resourceInputs["serverId"] = args ? args.serverId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ServerNetworkInterfaceAttach.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ServerNetworkInterfaceAttach resources.
 */
export interface ServerNetworkInterfaceAttachState {
    /**
     * The network interface ID.
     */
    networkInterfaceId?: pulumi.Input<string>;
    /**
     * STACKIT project ID to which the network interface attachment is associated.
     */
    projectId?: pulumi.Input<string>;
    /**
     * The server ID.
     */
    serverId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ServerNetworkInterfaceAttach resource.
 */
export interface ServerNetworkInterfaceAttachArgs {
    /**
     * The network interface ID.
     */
    networkInterfaceId: pulumi.Input<string>;
    /**
     * STACKIT project ID to which the network interface attachment is associated.
     */
    projectId: pulumi.Input<string>;
    /**
     * The server ID.
     */
    serverId: pulumi.Input<string>;
}
