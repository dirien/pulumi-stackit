// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Network interface datasource schema. Must have a `region` specified in the provider configuration.
 *
 * ## Example Usage
 */
export function getNetworkInterface(args: GetNetworkInterfaceArgs, opts?: pulumi.InvokeOptions): Promise<GetNetworkInterfaceResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("stackit:index/getNetworkInterface:getNetworkInterface", {
        "networkId": args.networkId,
        "networkInterfaceId": args.networkInterfaceId,
        "projectId": args.projectId,
    }, opts);
}

/**
 * A collection of arguments for invoking getNetworkInterface.
 */
export interface GetNetworkInterfaceArgs {
    /**
     * The network ID to which the network interface is associated.
     */
    networkId: string;
    /**
     * The network interface ID.
     */
    networkInterfaceId: string;
    /**
     * STACKIT project ID to which the network interface is associated.
     */
    projectId: string;
}

/**
 * A collection of values returned by getNetworkInterface.
 */
export interface GetNetworkInterfaceResult {
    /**
     * The list of CIDR (Classless Inter-Domain Routing) notations.
     */
    readonly allowedAddresses: string[];
    /**
     * The device UUID of the network interface.
     */
    readonly device: string;
    readonly id: string;
    /**
     * The IPv4 address.
     */
    readonly ipv4: string;
    /**
     * Labels are key-value string pairs which can be attached to a network interface.
     */
    readonly labels: {[key: string]: string};
    /**
     * The MAC address of network interface.
     */
    readonly mac: string;
    /**
     * The name of the network interface.
     */
    readonly name: string;
    /**
     * The network ID to which the network interface is associated.
     */
    readonly networkId: string;
    /**
     * The network interface ID.
     */
    readonly networkInterfaceId: string;
    /**
     * STACKIT project ID to which the network interface is associated.
     */
    readonly projectId: string;
    /**
     * The Network Interface Security. If set to false, then no security groups will apply to this network interface.
     */
    readonly security: boolean;
    /**
     * The list of security group UUIDs. If security is set to false, setting this field will lead to an error.
     */
    readonly securityGroupIds: string[];
    /**
     * Type of network interface. Some of the possible values are: Supported values are: `server`, `metadata`, `gateway`.
     */
    readonly type: string;
}
/**
 * Network interface datasource schema. Must have a `region` specified in the provider configuration.
 *
 * ## Example Usage
 */
export function getNetworkInterfaceOutput(args: GetNetworkInterfaceOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetNetworkInterfaceResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("stackit:index/getNetworkInterface:getNetworkInterface", {
        "networkId": args.networkId,
        "networkInterfaceId": args.networkInterfaceId,
        "projectId": args.projectId,
    }, opts);
}

/**
 * A collection of arguments for invoking getNetworkInterface.
 */
export interface GetNetworkInterfaceOutputArgs {
    /**
     * The network ID to which the network interface is associated.
     */
    networkId: pulumi.Input<string>;
    /**
     * The network interface ID.
     */
    networkInterfaceId: pulumi.Input<string>;
    /**
     * STACKIT project ID to which the network interface is associated.
     */
    projectId: pulumi.Input<string>;
}
