// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * CDN distribution data source schema.
 *
 * > This resource is in beta and may be subject to breaking changes in the future. Use with caution. See our guide for how to opt-in to use beta resources.
 *
 * ## Example Usage
 */
export class CdnDistribution extends pulumi.CustomResource {
    /**
     * Get an existing CdnDistribution resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CdnDistributionState, opts?: pulumi.CustomResourceOptions): CdnDistribution {
        return new CdnDistribution(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'stackit:index/cdnDistribution:CdnDistribution';

    /**
     * Returns true if the given object is an instance of CdnDistribution.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CdnDistribution {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CdnDistribution.__pulumiType;
    }

    /**
     * The distribution configuration
     */
    declare public readonly config: pulumi.Output<outputs.CdnDistributionConfig>;
    /**
     * Time when the distribution was created
     */
    declare public /*out*/ readonly createdAt: pulumi.Output<string>;
    /**
     * CDN distribution ID
     */
    declare public /*out*/ readonly distributionId: pulumi.Output<string>;
    /**
     * List of configured domains for the distribution
     */
    declare public /*out*/ readonly domains: pulumi.Output<outputs.CdnDistributionDomain[]>;
    /**
     * List of distribution errors
     */
    declare public /*out*/ readonly errors: pulumi.Output<string[]>;
    /**
     * STACKIT project ID associated with the distribution
     */
    declare public readonly projectId: pulumi.Output<string>;
    /**
     * Status of the distribution
     */
    declare public /*out*/ readonly status: pulumi.Output<string>;
    /**
     * Time when the distribution was last updated
     */
    declare public /*out*/ readonly updatedAt: pulumi.Output<string>;

    /**
     * Create a CdnDistribution resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CdnDistributionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CdnDistributionArgs | CdnDistributionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CdnDistributionState | undefined;
            resourceInputs["config"] = state?.config;
            resourceInputs["createdAt"] = state?.createdAt;
            resourceInputs["distributionId"] = state?.distributionId;
            resourceInputs["domains"] = state?.domains;
            resourceInputs["errors"] = state?.errors;
            resourceInputs["projectId"] = state?.projectId;
            resourceInputs["status"] = state?.status;
            resourceInputs["updatedAt"] = state?.updatedAt;
        } else {
            const args = argsOrState as CdnDistributionArgs | undefined;
            if (args?.config === undefined && !opts.urn) {
                throw new Error("Missing required property 'config'");
            }
            if (args?.projectId === undefined && !opts.urn) {
                throw new Error("Missing required property 'projectId'");
            }
            resourceInputs["config"] = args?.config;
            resourceInputs["projectId"] = args?.projectId;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["distributionId"] = undefined /*out*/;
            resourceInputs["domains"] = undefined /*out*/;
            resourceInputs["errors"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CdnDistribution.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CdnDistribution resources.
 */
export interface CdnDistributionState {
    /**
     * The distribution configuration
     */
    config?: pulumi.Input<inputs.CdnDistributionConfig>;
    /**
     * Time when the distribution was created
     */
    createdAt?: pulumi.Input<string>;
    /**
     * CDN distribution ID
     */
    distributionId?: pulumi.Input<string>;
    /**
     * List of configured domains for the distribution
     */
    domains?: pulumi.Input<pulumi.Input<inputs.CdnDistributionDomain>[]>;
    /**
     * List of distribution errors
     */
    errors?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * STACKIT project ID associated with the distribution
     */
    projectId?: pulumi.Input<string>;
    /**
     * Status of the distribution
     */
    status?: pulumi.Input<string>;
    /**
     * Time when the distribution was last updated
     */
    updatedAt?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CdnDistribution resource.
 */
export interface CdnDistributionArgs {
    /**
     * The distribution configuration
     */
    config: pulumi.Input<inputs.CdnDistributionConfig>;
    /**
     * STACKIT project ID associated with the distribution
     */
    projectId: pulumi.Input<string>;
}
