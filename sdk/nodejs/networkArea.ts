// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Network area resource schema. Must have a `region` specified in the provider configuration.
 *
 * ## Example Usage
 */
export class NetworkArea extends pulumi.CustomResource {
    /**
     * Get an existing NetworkArea resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NetworkAreaState, opts?: pulumi.CustomResourceOptions): NetworkArea {
        return new NetworkArea(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'stackit:index/networkArea:NetworkArea';

    /**
     * Returns true if the given object is an instance of NetworkArea.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NetworkArea {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NetworkArea.__pulumiType;
    }

    /**
     * List of DNS Servers/Nameservers.
     */
    declare public readonly defaultNameservers: pulumi.Output<string[] | undefined>;
    /**
     * The default prefix length for networks in the network area.
     */
    declare public readonly defaultPrefixLength: pulumi.Output<number>;
    /**
     * Labels are key-value string pairs which can be attached to a resource container
     */
    declare public readonly labels: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The maximal prefix length for networks in the network area.
     */
    declare public readonly maxPrefixLength: pulumi.Output<number>;
    /**
     * The minimal prefix length for networks in the network area.
     */
    declare public readonly minPrefixLength: pulumi.Output<number>;
    /**
     * The name of the network area.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The network area ID.
     */
    declare public /*out*/ readonly networkAreaId: pulumi.Output<string>;
    /**
     * List of Network ranges.
     */
    declare public readonly networkRanges: pulumi.Output<outputs.NetworkAreaNetworkRange[]>;
    /**
     * STACKIT organization ID to which the network area is associated.
     */
    declare public readonly organizationId: pulumi.Output<string>;
    /**
     * The amount of projects currently referencing this area.
     */
    declare public /*out*/ readonly projectCount: pulumi.Output<number>;
    /**
     * Classless Inter-Domain Routing (CIDR).
     */
    declare public readonly transferNetwork: pulumi.Output<string>;

    /**
     * Create a NetworkArea resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NetworkAreaArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NetworkAreaArgs | NetworkAreaState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NetworkAreaState | undefined;
            resourceInputs["defaultNameservers"] = state?.defaultNameservers;
            resourceInputs["defaultPrefixLength"] = state?.defaultPrefixLength;
            resourceInputs["labels"] = state?.labels;
            resourceInputs["maxPrefixLength"] = state?.maxPrefixLength;
            resourceInputs["minPrefixLength"] = state?.minPrefixLength;
            resourceInputs["name"] = state?.name;
            resourceInputs["networkAreaId"] = state?.networkAreaId;
            resourceInputs["networkRanges"] = state?.networkRanges;
            resourceInputs["organizationId"] = state?.organizationId;
            resourceInputs["projectCount"] = state?.projectCount;
            resourceInputs["transferNetwork"] = state?.transferNetwork;
        } else {
            const args = argsOrState as NetworkAreaArgs | undefined;
            if (args?.networkRanges === undefined && !opts.urn) {
                throw new Error("Missing required property 'networkRanges'");
            }
            if (args?.organizationId === undefined && !opts.urn) {
                throw new Error("Missing required property 'organizationId'");
            }
            if (args?.transferNetwork === undefined && !opts.urn) {
                throw new Error("Missing required property 'transferNetwork'");
            }
            resourceInputs["defaultNameservers"] = args?.defaultNameservers;
            resourceInputs["defaultPrefixLength"] = args?.defaultPrefixLength;
            resourceInputs["labels"] = args?.labels;
            resourceInputs["maxPrefixLength"] = args?.maxPrefixLength;
            resourceInputs["minPrefixLength"] = args?.minPrefixLength;
            resourceInputs["name"] = args?.name;
            resourceInputs["networkRanges"] = args?.networkRanges;
            resourceInputs["organizationId"] = args?.organizationId;
            resourceInputs["transferNetwork"] = args?.transferNetwork;
            resourceInputs["networkAreaId"] = undefined /*out*/;
            resourceInputs["projectCount"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NetworkArea.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering NetworkArea resources.
 */
export interface NetworkAreaState {
    /**
     * List of DNS Servers/Nameservers.
     */
    defaultNameservers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The default prefix length for networks in the network area.
     */
    defaultPrefixLength?: pulumi.Input<number>;
    /**
     * Labels are key-value string pairs which can be attached to a resource container
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The maximal prefix length for networks in the network area.
     */
    maxPrefixLength?: pulumi.Input<number>;
    /**
     * The minimal prefix length for networks in the network area.
     */
    minPrefixLength?: pulumi.Input<number>;
    /**
     * The name of the network area.
     */
    name?: pulumi.Input<string>;
    /**
     * The network area ID.
     */
    networkAreaId?: pulumi.Input<string>;
    /**
     * List of Network ranges.
     */
    networkRanges?: pulumi.Input<pulumi.Input<inputs.NetworkAreaNetworkRange>[]>;
    /**
     * STACKIT organization ID to which the network area is associated.
     */
    organizationId?: pulumi.Input<string>;
    /**
     * The amount of projects currently referencing this area.
     */
    projectCount?: pulumi.Input<number>;
    /**
     * Classless Inter-Domain Routing (CIDR).
     */
    transferNetwork?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a NetworkArea resource.
 */
export interface NetworkAreaArgs {
    /**
     * List of DNS Servers/Nameservers.
     */
    defaultNameservers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The default prefix length for networks in the network area.
     */
    defaultPrefixLength?: pulumi.Input<number>;
    /**
     * Labels are key-value string pairs which can be attached to a resource container
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The maximal prefix length for networks in the network area.
     */
    maxPrefixLength?: pulumi.Input<number>;
    /**
     * The minimal prefix length for networks in the network area.
     */
    minPrefixLength?: pulumi.Input<number>;
    /**
     * The name of the network area.
     */
    name?: pulumi.Input<string>;
    /**
     * List of Network ranges.
     */
    networkRanges: pulumi.Input<pulumi.Input<inputs.NetworkAreaNetworkRange>[]>;
    /**
     * STACKIT organization ID to which the network area is associated.
     */
    organizationId: pulumi.Input<string>;
    /**
     * Classless Inter-Domain Routing (CIDR).
     */
    transferNetwork: pulumi.Input<string>;
}
