// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Volume resource schema. Must have a `region` specified in the provider configuration.
 *
 * ## Example Usage
 */
export function getVolume(args: GetVolumeArgs, opts?: pulumi.InvokeOptions): Promise<GetVolumeResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("stackit:index/getVolume:getVolume", {
        "projectId": args.projectId,
        "volumeId": args.volumeId,
    }, opts);
}

/**
 * A collection of arguments for invoking getVolume.
 */
export interface GetVolumeArgs {
    /**
     * STACKIT project ID to which the volume is associated.
     */
    projectId: string;
    /**
     * The volume ID.
     */
    volumeId: string;
}

/**
 * A collection of values returned by getVolume.
 */
export interface GetVolumeResult {
    /**
     * The availability zone of the volume.
     */
    readonly availabilityZone: string;
    /**
     * The description of the volume.
     */
    readonly description: string;
    readonly id: string;
    /**
     * Labels are key-value string pairs which can be attached to a resource container
     */
    readonly labels: {[key: string]: string};
    /**
     * The name of the volume.
     */
    readonly name: string;
    /**
     * The performance class of the volume. Possible values are documented in [Service plans BlockStorage](https://docs.stackit.cloud/stackit/en/service-plans-blockstorage-75137974.html#ServiceplansBlockStorage-CurrentlyavailableServicePlans%28performanceclasses%29)
     */
    readonly performanceClass: string;
    /**
     * STACKIT project ID to which the volume is associated.
     */
    readonly projectId: string;
    /**
     * The server ID of the server to which the volume is attached to.
     */
    readonly serverId: string;
    /**
     * The size of the volume in GB. It can only be updated to a larger value than the current size
     */
    readonly size: number;
    /**
     * The source of the volume. It can be either a volume, an image, a snapshot or a backup
     */
    readonly source: outputs.GetVolumeSource;
    /**
     * The volume ID.
     */
    readonly volumeId: string;
}
/**
 * Volume resource schema. Must have a `region` specified in the provider configuration.
 *
 * ## Example Usage
 */
export function getVolumeOutput(args: GetVolumeOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetVolumeResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("stackit:index/getVolume:getVolume", {
        "projectId": args.projectId,
        "volumeId": args.volumeId,
    }, opts);
}

/**
 * A collection of arguments for invoking getVolume.
 */
export interface GetVolumeOutputArgs {
    /**
     * STACKIT project ID to which the volume is associated.
     */
    projectId: pulumi.Input<string>;
    /**
     * The volume ID.
     */
    volumeId: pulumi.Input<string>;
}
