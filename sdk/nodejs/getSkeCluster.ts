// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * SKE Cluster data source schema. Must have a `region` specified in the provider configuration.
 *
 * ## Example Usage
 */
export function getSkeCluster(args: GetSkeClusterArgs, opts?: pulumi.InvokeOptions): Promise<GetSkeClusterResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("stackit:index/getSkeCluster:getSkeCluster", {
        "name": args.name,
        "projectId": args.projectId,
        "region": args.region,
    }, opts);
}

/**
 * A collection of arguments for invoking getSkeCluster.
 */
export interface GetSkeClusterArgs {
    /**
     * The cluster name.
     */
    name: string;
    /**
     * STACKIT project ID to which the cluster is associated.
     */
    projectId: string;
    /**
     * The resource region. If not defined, the provider region is used.
     */
    region?: string;
}

/**
 * A collection of values returned by getSkeCluster.
 */
export interface GetSkeClusterResult {
    /**
     * The outgoing network ranges (in CIDR notation) of traffic originating from workload on the cluster.
     */
    readonly egressAddressRanges: string[];
    /**
     * A single extensions block as defined below
     */
    readonly extensions: outputs.GetSkeClusterExtensions;
    /**
     * One or more hibernation block as defined below.
     */
    readonly hibernations: outputs.GetSkeClusterHibernation[];
    readonly id: string;
    /**
     * The minimum Kubernetes version, this field is always nil. SKE automatically updates the cluster Kubernetes version if you have set `maintenance.enable_kubernetes_version_updates` to true or if there is a mandatory update, as described in [Updates for Kubernetes versions and Operating System versions in SKE](https://docs.stackit.cloud/stackit/en/version-updates-in-ske-10125631.html). To get the current kubernetes version being used for your cluster, use the `kubernetesVersionUsed` field.
     */
    readonly kubernetesVersionMin: string;
    /**
     * Full Kubernetes version used. For example, if `1.22` was selected, this value may result to `1.22.15`
     */
    readonly kubernetesVersionUsed: string;
    /**
     * A single maintenance block as defined below
     */
    readonly maintenance: outputs.GetSkeClusterMaintenance;
    /**
     * The cluster name.
     */
    readonly name: string;
    /**
     * Network block as defined below.
     */
    readonly network: outputs.GetSkeClusterNetwork;
    /**
     * One or more `nodePool` block as defined below.
     */
    readonly nodePools: outputs.GetSkeClusterNodePool[];
    /**
     * The network ranges (in CIDR notation) used by pods of the cluster.
     */
    readonly podAddressRanges: string[];
    /**
     * STACKIT project ID to which the cluster is associated.
     */
    readonly projectId: string;
    /**
     * The resource region. If not defined, the provider region is used.
     */
    readonly region?: string;
}
/**
 * SKE Cluster data source schema. Must have a `region` specified in the provider configuration.
 *
 * ## Example Usage
 */
export function getSkeClusterOutput(args: GetSkeClusterOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetSkeClusterResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("stackit:index/getSkeCluster:getSkeCluster", {
        "name": args.name,
        "projectId": args.projectId,
        "region": args.region,
    }, opts);
}

/**
 * A collection of arguments for invoking getSkeCluster.
 */
export interface GetSkeClusterOutputArgs {
    /**
     * The cluster name.
     */
    name: pulumi.Input<string>;
    /**
     * STACKIT project ID to which the cluster is associated.
     */
    projectId: pulumi.Input<string>;
    /**
     * The resource region. If not defined, the provider region is used.
     */
    region?: pulumi.Input<string>;
}
