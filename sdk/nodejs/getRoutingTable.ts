// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Routing table datasource schema. Must have a `region` specified in the provider configuration.
 *
 * > This datasource is part of the routing-tables experiment and is likely going to undergo significant changes or be removed in the future. Use it at your own discretion.
 *
 * ## Example Usage
 */
export function getRoutingTable(args: GetRoutingTableArgs, opts?: pulumi.InvokeOptions): Promise<GetRoutingTableResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("stackit:index/getRoutingTable:getRoutingTable", {
        "networkAreaId": args.networkAreaId,
        "organizationId": args.organizationId,
        "region": args.region,
        "routingTableId": args.routingTableId,
    }, opts);
}

/**
 * A collection of arguments for invoking getRoutingTable.
 */
export interface GetRoutingTableArgs {
    /**
     * The network area ID to which the routing table is associated.
     */
    networkAreaId: string;
    /**
     * STACKIT organization ID to which the routing table is associated.
     */
    organizationId: string;
    /**
     * The resource region. If not defined, the provider region is used.
     */
    region?: string;
    /**
     * The routing tables ID.
     */
    routingTableId: string;
}

/**
 * A collection of values returned by getRoutingTable.
 */
export interface GetRoutingTableResult {
    /**
     * Date-time when the routing table was created
     */
    readonly createdAt: string;
    /**
     * When true this is the default routing table for this network area. It can't be deleted and is used if the user does not specify it otherwise.
     */
    readonly default: boolean;
    /**
     * Description of the routing table.
     */
    readonly description: string;
    readonly id: string;
    /**
     * Labels are key-value string pairs which can be attached to a resource container
     */
    readonly labels: {[key: string]: string};
    /**
     * The name of the routing table.
     */
    readonly name: string;
    /**
     * The network area ID to which the routing table is associated.
     */
    readonly networkAreaId: string;
    /**
     * STACKIT organization ID to which the routing table is associated.
     */
    readonly organizationId: string;
    /**
     * The resource region. If not defined, the provider region is used.
     */
    readonly region?: string;
    /**
     * The routing tables ID.
     */
    readonly routingTableId: string;
    /**
     * This controls whether the routes for project-to-project communication are created automatically or not.
     */
    readonly systemRoutes: boolean;
    /**
     * Date-time when the routing table was updated
     */
    readonly updatedAt: string;
}
/**
 * Routing table datasource schema. Must have a `region` specified in the provider configuration.
 *
 * > This datasource is part of the routing-tables experiment and is likely going to undergo significant changes or be removed in the future. Use it at your own discretion.
 *
 * ## Example Usage
 */
export function getRoutingTableOutput(args: GetRoutingTableOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetRoutingTableResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("stackit:index/getRoutingTable:getRoutingTable", {
        "networkAreaId": args.networkAreaId,
        "organizationId": args.organizationId,
        "region": args.region,
        "routingTableId": args.routingTableId,
    }, opts);
}

/**
 * A collection of arguments for invoking getRoutingTable.
 */
export interface GetRoutingTableOutputArgs {
    /**
     * The network area ID to which the routing table is associated.
     */
    networkAreaId: pulumi.Input<string>;
    /**
     * STACKIT organization ID to which the routing table is associated.
     */
    organizationId: pulumi.Input<string>;
    /**
     * The resource region. If not defined, the provider region is used.
     */
    region?: pulumi.Input<string>;
    /**
     * The routing tables ID.
     */
    routingTableId: pulumi.Input<string>;
}
