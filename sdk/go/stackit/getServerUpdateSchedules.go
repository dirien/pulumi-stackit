// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package stackit

import (
	"context"
	"reflect"

	"github.com/dirien/pulumi-stackit/sdk/go/stackit/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Server update schedules datasource schema. Must have a `region` specified in the provider configuration.
//
// > This datasource is in beta and may be subject to breaking changes in the future. Use with caution. See our guide for how to opt-in to use beta resources.
//
// ## Example Usage
func GetServerUpdateSchedules(ctx *pulumi.Context, args *GetServerUpdateSchedulesArgs, opts ...pulumi.InvokeOption) (*GetServerUpdateSchedulesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetServerUpdateSchedulesResult
	err := ctx.Invoke("stackit:index/getServerUpdateSchedules:getServerUpdateSchedules", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getServerUpdateSchedules.
type GetServerUpdateSchedulesArgs struct {
	// STACKIT Project ID (UUID) to which the server is associated.
	ProjectId string `pulumi:"projectId"`
	// The resource region. If not defined, the provider region is used.
	Region *string `pulumi:"region"`
	// Server ID (UUID) to which the update schedule is associated.
	ServerId string `pulumi:"serverId"`
}

// A collection of values returned by getServerUpdateSchedules.
type GetServerUpdateSchedulesResult struct {
	Id    string                         `pulumi:"id"`
	Items []GetServerUpdateSchedulesItem `pulumi:"items"`
	// STACKIT Project ID (UUID) to which the server is associated.
	ProjectId string `pulumi:"projectId"`
	// The resource region. If not defined, the provider region is used.
	Region *string `pulumi:"region"`
	// Server ID (UUID) to which the update schedule is associated.
	ServerId string `pulumi:"serverId"`
}

func GetServerUpdateSchedulesOutput(ctx *pulumi.Context, args GetServerUpdateSchedulesOutputArgs, opts ...pulumi.InvokeOption) GetServerUpdateSchedulesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetServerUpdateSchedulesResultOutput, error) {
			args := v.(GetServerUpdateSchedulesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("stackit:index/getServerUpdateSchedules:getServerUpdateSchedules", args, GetServerUpdateSchedulesResultOutput{}, options).(GetServerUpdateSchedulesResultOutput), nil
		}).(GetServerUpdateSchedulesResultOutput)
}

// A collection of arguments for invoking getServerUpdateSchedules.
type GetServerUpdateSchedulesOutputArgs struct {
	// STACKIT Project ID (UUID) to which the server is associated.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// The resource region. If not defined, the provider region is used.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Server ID (UUID) to which the update schedule is associated.
	ServerId pulumi.StringInput `pulumi:"serverId"`
}

func (GetServerUpdateSchedulesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerUpdateSchedulesArgs)(nil)).Elem()
}

// A collection of values returned by getServerUpdateSchedules.
type GetServerUpdateSchedulesResultOutput struct{ *pulumi.OutputState }

func (GetServerUpdateSchedulesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerUpdateSchedulesResult)(nil)).Elem()
}

func (o GetServerUpdateSchedulesResultOutput) ToGetServerUpdateSchedulesResultOutput() GetServerUpdateSchedulesResultOutput {
	return o
}

func (o GetServerUpdateSchedulesResultOutput) ToGetServerUpdateSchedulesResultOutputWithContext(ctx context.Context) GetServerUpdateSchedulesResultOutput {
	return o
}

func (o GetServerUpdateSchedulesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerUpdateSchedulesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetServerUpdateSchedulesResultOutput) Items() GetServerUpdateSchedulesItemArrayOutput {
	return o.ApplyT(func(v GetServerUpdateSchedulesResult) []GetServerUpdateSchedulesItem { return v.Items }).(GetServerUpdateSchedulesItemArrayOutput)
}

// STACKIT Project ID (UUID) to which the server is associated.
func (o GetServerUpdateSchedulesResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerUpdateSchedulesResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

// The resource region. If not defined, the provider region is used.
func (o GetServerUpdateSchedulesResultOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServerUpdateSchedulesResult) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// Server ID (UUID) to which the update schedule is associated.
func (o GetServerUpdateSchedulesResultOutput) ServerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerUpdateSchedulesResult) string { return v.ServerId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetServerUpdateSchedulesResultOutput{})
}
