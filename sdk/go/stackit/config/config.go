// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package config

import (
	"github.com/dirien/pulumi-stackit/sdk/go/stackit/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
)

var _ = internal.GetEnvOrDefault

// Custom endpoint for the Membership service
func GetAuthorizationCustomEndpoint(ctx *pulumi.Context) string {
	return config.Get(ctx, "stackit:authorizationCustomEndpoint")
}

// Custom endpoint for the CDN service
func GetCdnCustomEndpoint(ctx *pulumi.Context) string {
	return config.Get(ctx, "stackit:cdnCustomEndpoint")
}

// Path of JSON from where the credentials are read. Takes precedence over the env var `STACKIT_CREDENTIALS_PATH`. Default
// value is `~/.stackit/credentials.json`.
func GetCredentialsPath(ctx *pulumi.Context) string {
	return config.Get(ctx, "stackit:credentialsPath")
}

// Region will be used as the default location for regional services. Not all services require a region, some are global
func GetDefaultRegion(ctx *pulumi.Context) string {
	return config.Get(ctx, "stackit:defaultRegion")
}

// Custom endpoint for the DNS service
func GetDnsCustomEndpoint(ctx *pulumi.Context) string {
	return config.Get(ctx, "stackit:dnsCustomEndpoint")
}

// Enable beta resources. Default is false.
func GetEnableBetaResources(ctx *pulumi.Context) bool {
	return config.GetBool(ctx, "stackit:enableBetaResources")
}

// Enables experiments. These are unstable features without official support. More information can be found in the README.
// Available Experiments: iam, routing-tables, network
func GetExperiments(ctx *pulumi.Context) string {
	return config.Get(ctx, "stackit:experiments")
}

// Custom endpoint for the Git service
func GetGitCustomEndpoint(ctx *pulumi.Context) string {
	return config.Get(ctx, "stackit:gitCustomEndpoint")
}

// Custom endpoint for the IaaS service
func GetIaasCustomEndpoint(ctx *pulumi.Context) string {
	return config.Get(ctx, "stackit:iaasCustomEndpoint")
}

// Custom endpoint for the Load Balancer service
func GetLoadbalancerCustomEndpoint(ctx *pulumi.Context) string {
	return config.Get(ctx, "stackit:loadbalancerCustomEndpoint")
}

// Custom endpoint for the LogMe service
func GetLogmeCustomEndpoint(ctx *pulumi.Context) string {
	return config.Get(ctx, "stackit:logmeCustomEndpoint")
}

// Custom endpoint for the MariaDB service
func GetMariadbCustomEndpoint(ctx *pulumi.Context) string {
	return config.Get(ctx, "stackit:mariadbCustomEndpoint")
}

// Custom endpoint for the AI Model Serving service
func GetModelservingCustomEndpoint(ctx *pulumi.Context) string {
	return config.Get(ctx, "stackit:modelservingCustomEndpoint")
}

// Custom endpoint for the MongoDB Flex service
func GetMongodbflexCustomEndpoint(ctx *pulumi.Context) string {
	return config.Get(ctx, "stackit:mongodbflexCustomEndpoint")
}

// Custom endpoint for the Object Storage service
func GetObjectstorageCustomEndpoint(ctx *pulumi.Context) string {
	return config.Get(ctx, "stackit:objectstorageCustomEndpoint")
}

// Custom endpoint for the Observability service
func GetObservabilityCustomEndpoint(ctx *pulumi.Context) string {
	return config.Get(ctx, "stackit:observabilityCustomEndpoint")
}

// Custom endpoint for the OpenSearch service
func GetOpensearchCustomEndpoint(ctx *pulumi.Context) string {
	return config.Get(ctx, "stackit:opensearchCustomEndpoint")
}

// Custom endpoint for the PostgresFlex service
func GetPostgresflexCustomEndpoint(ctx *pulumi.Context) string {
	return config.Get(ctx, "stackit:postgresflexCustomEndpoint")
}

// Private RSA key used for authentication, relevant for the key flow. It takes precedence over the private key that is
// included in the service account key.
func GetPrivateKey(ctx *pulumi.Context) string {
	return config.Get(ctx, "stackit:privateKey")
}

// Path for the private RSA key used for authentication, relevant for the key flow. It takes precedence over the private
// key that is included in the service account key.
func GetPrivateKeyPath(ctx *pulumi.Context) string {
	return config.Get(ctx, "stackit:privateKeyPath")
}

// Custom endpoint for the RabbitMQ service
func GetRabbitmqCustomEndpoint(ctx *pulumi.Context) string {
	return config.Get(ctx, "stackit:rabbitmqCustomEndpoint")
}

// Custom endpoint for the Redis service
func GetRedisCustomEndpoint(ctx *pulumi.Context) string {
	return config.Get(ctx, "stackit:redisCustomEndpoint")
}

// Region will be used as the default location for regional services. Not all services require a region, some are global
//
// Deprecated: This attribute is deprecated. Use 'default_region' instead
func GetRegion(ctx *pulumi.Context) string {
	return config.Get(ctx, "stackit:region")
}

// Custom endpoint for the Resource Manager service
func GetResourcemanagerCustomEndpoint(ctx *pulumi.Context) string {
	return config.Get(ctx, "stackit:resourcemanagerCustomEndpoint")
}

// Custom endpoint for the Secrets Manager service
func GetSecretsmanagerCustomEndpoint(ctx *pulumi.Context) string {
	return config.Get(ctx, "stackit:secretsmanagerCustomEndpoint")
}

// Custom endpoint for the Server Backup service
func GetServerBackupCustomEndpoint(ctx *pulumi.Context) string {
	return config.Get(ctx, "stackit:serverBackupCustomEndpoint")
}

// Custom endpoint for the Server Update service
func GetServerUpdateCustomEndpoint(ctx *pulumi.Context) string {
	return config.Get(ctx, "stackit:serverUpdateCustomEndpoint")
}

// Custom endpoint for the Service Account service
func GetServiceAccountCustomEndpoint(ctx *pulumi.Context) string {
	return config.Get(ctx, "stackit:serviceAccountCustomEndpoint")
}

// Service account email. It can also be set using the environment variable STACKIT_SERVICE_ACCOUNT_EMAIL. It is required
// if you want to use the resource manager project resource.
//
// Deprecated: The `serviceAccountEmail` field has been deprecated because it is not required. Will be removed after June 12th 2025.
func GetServiceAccountEmail(ctx *pulumi.Context) string {
	return config.Get(ctx, "stackit:serviceAccountEmail")
}

// Service account key used for authentication. If set, the key flow will be used to authenticate all operations.
func GetServiceAccountKey(ctx *pulumi.Context) string {
	return config.Get(ctx, "stackit:serviceAccountKey")
}

// Path for the service account key used for authentication. If set, the key flow will be used to authenticate all
// operations.
func GetServiceAccountKeyPath(ctx *pulumi.Context) string {
	return config.Get(ctx, "stackit:serviceAccountKeyPath")
}

// Token used for authentication. If set, the token flow will be used to authenticate all operations.
func GetServiceAccountToken(ctx *pulumi.Context) string {
	return config.Get(ctx, "stackit:serviceAccountToken")
}

// Custom endpoint for the Service Enablement API
func GetServiceEnablementCustomEndpoint(ctx *pulumi.Context) string {
	return config.Get(ctx, "stackit:serviceEnablementCustomEndpoint")
}

// Custom endpoint for the Kubernetes Engine (SKE) service
func GetSkeCustomEndpoint(ctx *pulumi.Context) string {
	return config.Get(ctx, "stackit:skeCustomEndpoint")
}

// Custom endpoint for the SQL Server Flex service
func GetSqlserverflexCustomEndpoint(ctx *pulumi.Context) string {
	return config.Get(ctx, "stackit:sqlserverflexCustomEndpoint")
}

// Custom endpoint for the token API, which is used to request access tokens when using the key flow
func GetTokenCustomEndpoint(ctx *pulumi.Context) string {
	return config.Get(ctx, "stackit:tokenCustomEndpoint")
}
