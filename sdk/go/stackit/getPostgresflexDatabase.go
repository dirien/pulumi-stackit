// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package stackit

import (
	"context"
	"reflect"

	"github.com/dirien/pulumi-stackit/sdk/go/stackit/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Postgres Flex database resource schema. Must have a `region` specified in the provider configuration.
//
// ## Example Usage
func LookupPostgresflexDatabase(ctx *pulumi.Context, args *LookupPostgresflexDatabaseArgs, opts ...pulumi.InvokeOption) (*LookupPostgresflexDatabaseResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupPostgresflexDatabaseResult
	err := ctx.Invoke("stackit:index/getPostgresflexDatabase:getPostgresflexDatabase", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPostgresflexDatabase.
type LookupPostgresflexDatabaseArgs struct {
	// Database ID.
	DatabaseId string `pulumi:"databaseId"`
	// ID of the Postgres Flex instance.
	InstanceId string `pulumi:"instanceId"`
	// STACKIT project ID to which the instance is associated.
	ProjectId string `pulumi:"projectId"`
	// The resource region. If not defined, the provider region is used.
	Region *string `pulumi:"region"`
}

// A collection of values returned by getPostgresflexDatabase.
type LookupPostgresflexDatabaseResult struct {
	// Database ID.
	DatabaseId string `pulumi:"databaseId"`
	Id         string `pulumi:"id"`
	// ID of the Postgres Flex instance.
	InstanceId string `pulumi:"instanceId"`
	// Database name.
	Name string `pulumi:"name"`
	// Username of the database owner.
	Owner string `pulumi:"owner"`
	// STACKIT project ID to which the instance is associated.
	ProjectId string `pulumi:"projectId"`
	// The resource region. If not defined, the provider region is used.
	Region *string `pulumi:"region"`
}

func LookupPostgresflexDatabaseOutput(ctx *pulumi.Context, args LookupPostgresflexDatabaseOutputArgs, opts ...pulumi.InvokeOption) LookupPostgresflexDatabaseResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupPostgresflexDatabaseResultOutput, error) {
			args := v.(LookupPostgresflexDatabaseArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("stackit:index/getPostgresflexDatabase:getPostgresflexDatabase", args, LookupPostgresflexDatabaseResultOutput{}, options).(LookupPostgresflexDatabaseResultOutput), nil
		}).(LookupPostgresflexDatabaseResultOutput)
}

// A collection of arguments for invoking getPostgresflexDatabase.
type LookupPostgresflexDatabaseOutputArgs struct {
	// Database ID.
	DatabaseId pulumi.StringInput `pulumi:"databaseId"`
	// ID of the Postgres Flex instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// STACKIT project ID to which the instance is associated.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// The resource region. If not defined, the provider region is used.
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (LookupPostgresflexDatabaseOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPostgresflexDatabaseArgs)(nil)).Elem()
}

// A collection of values returned by getPostgresflexDatabase.
type LookupPostgresflexDatabaseResultOutput struct{ *pulumi.OutputState }

func (LookupPostgresflexDatabaseResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPostgresflexDatabaseResult)(nil)).Elem()
}

func (o LookupPostgresflexDatabaseResultOutput) ToLookupPostgresflexDatabaseResultOutput() LookupPostgresflexDatabaseResultOutput {
	return o
}

func (o LookupPostgresflexDatabaseResultOutput) ToLookupPostgresflexDatabaseResultOutputWithContext(ctx context.Context) LookupPostgresflexDatabaseResultOutput {
	return o
}

// Database ID.
func (o LookupPostgresflexDatabaseResultOutput) DatabaseId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPostgresflexDatabaseResult) string { return v.DatabaseId }).(pulumi.StringOutput)
}

func (o LookupPostgresflexDatabaseResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPostgresflexDatabaseResult) string { return v.Id }).(pulumi.StringOutput)
}

// ID of the Postgres Flex instance.
func (o LookupPostgresflexDatabaseResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPostgresflexDatabaseResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

// Database name.
func (o LookupPostgresflexDatabaseResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPostgresflexDatabaseResult) string { return v.Name }).(pulumi.StringOutput)
}

// Username of the database owner.
func (o LookupPostgresflexDatabaseResultOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPostgresflexDatabaseResult) string { return v.Owner }).(pulumi.StringOutput)
}

// STACKIT project ID to which the instance is associated.
func (o LookupPostgresflexDatabaseResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPostgresflexDatabaseResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

// The resource region. If not defined, the provider region is used.
func (o LookupPostgresflexDatabaseResultOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPostgresflexDatabaseResult) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPostgresflexDatabaseResultOutput{})
}
