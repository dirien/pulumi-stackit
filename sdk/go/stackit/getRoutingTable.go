// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package stackit

import (
	"context"
	"reflect"

	"github.com/dirien/pulumi-stackit/sdk/go/stackit/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Routing table datasource schema. Must have a `region` specified in the provider configuration.
//
// > This datasource is part of the routing-tables experiment and is likely going to undergo significant changes or be removed in the future. Use it at your own discretion.
//
// ## Example Usage
func LookupRoutingTable(ctx *pulumi.Context, args *LookupRoutingTableArgs, opts ...pulumi.InvokeOption) (*LookupRoutingTableResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupRoutingTableResult
	err := ctx.Invoke("stackit:index/getRoutingTable:getRoutingTable", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRoutingTable.
type LookupRoutingTableArgs struct {
	// The network area ID to which the routing table is associated.
	NetworkAreaId string `pulumi:"networkAreaId"`
	// STACKIT organization ID to which the routing table is associated.
	OrganizationId string `pulumi:"organizationId"`
	// The resource region. If not defined, the provider region is used.
	Region *string `pulumi:"region"`
	// The routing tables ID.
	RoutingTableId string `pulumi:"routingTableId"`
}

// A collection of values returned by getRoutingTable.
type LookupRoutingTableResult struct {
	// Date-time when the routing table was created
	CreatedAt string `pulumi:"createdAt"`
	// When true this is the default routing table for this network area. It can't be deleted and is used if the user does not specify it otherwise.
	Default bool `pulumi:"default"`
	// Description of the routing table.
	Description string `pulumi:"description"`
	Id          string `pulumi:"id"`
	// Labels are key-value string pairs which can be attached to a resource container
	Labels map[string]string `pulumi:"labels"`
	// The name of the routing table.
	Name string `pulumi:"name"`
	// The network area ID to which the routing table is associated.
	NetworkAreaId string `pulumi:"networkAreaId"`
	// STACKIT organization ID to which the routing table is associated.
	OrganizationId string `pulumi:"organizationId"`
	// The resource region. If not defined, the provider region is used.
	Region *string `pulumi:"region"`
	// The routing tables ID.
	RoutingTableId string `pulumi:"routingTableId"`
	// This controls whether the routes for project-to-project communication are created automatically or not.
	SystemRoutes bool `pulumi:"systemRoutes"`
	// Date-time when the routing table was updated
	UpdatedAt string `pulumi:"updatedAt"`
}

func LookupRoutingTableOutput(ctx *pulumi.Context, args LookupRoutingTableOutputArgs, opts ...pulumi.InvokeOption) LookupRoutingTableResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupRoutingTableResultOutput, error) {
			args := v.(LookupRoutingTableArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("stackit:index/getRoutingTable:getRoutingTable", args, LookupRoutingTableResultOutput{}, options).(LookupRoutingTableResultOutput), nil
		}).(LookupRoutingTableResultOutput)
}

// A collection of arguments for invoking getRoutingTable.
type LookupRoutingTableOutputArgs struct {
	// The network area ID to which the routing table is associated.
	NetworkAreaId pulumi.StringInput `pulumi:"networkAreaId"`
	// STACKIT organization ID to which the routing table is associated.
	OrganizationId pulumi.StringInput `pulumi:"organizationId"`
	// The resource region. If not defined, the provider region is used.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// The routing tables ID.
	RoutingTableId pulumi.StringInput `pulumi:"routingTableId"`
}

func (LookupRoutingTableOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRoutingTableArgs)(nil)).Elem()
}

// A collection of values returned by getRoutingTable.
type LookupRoutingTableResultOutput struct{ *pulumi.OutputState }

func (LookupRoutingTableResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRoutingTableResult)(nil)).Elem()
}

func (o LookupRoutingTableResultOutput) ToLookupRoutingTableResultOutput() LookupRoutingTableResultOutput {
	return o
}

func (o LookupRoutingTableResultOutput) ToLookupRoutingTableResultOutputWithContext(ctx context.Context) LookupRoutingTableResultOutput {
	return o
}

// Date-time when the routing table was created
func (o LookupRoutingTableResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRoutingTableResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// When true this is the default routing table for this network area. It can't be deleted and is used if the user does not specify it otherwise.
func (o LookupRoutingTableResultOutput) Default() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupRoutingTableResult) bool { return v.Default }).(pulumi.BoolOutput)
}

// Description of the routing table.
func (o LookupRoutingTableResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRoutingTableResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupRoutingTableResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRoutingTableResult) string { return v.Id }).(pulumi.StringOutput)
}

// Labels are key-value string pairs which can be attached to a resource container
func (o LookupRoutingTableResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupRoutingTableResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// The name of the routing table.
func (o LookupRoutingTableResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRoutingTableResult) string { return v.Name }).(pulumi.StringOutput)
}

// The network area ID to which the routing table is associated.
func (o LookupRoutingTableResultOutput) NetworkAreaId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRoutingTableResult) string { return v.NetworkAreaId }).(pulumi.StringOutput)
}

// STACKIT organization ID to which the routing table is associated.
func (o LookupRoutingTableResultOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRoutingTableResult) string { return v.OrganizationId }).(pulumi.StringOutput)
}

// The resource region. If not defined, the provider region is used.
func (o LookupRoutingTableResultOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRoutingTableResult) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// The routing tables ID.
func (o LookupRoutingTableResultOutput) RoutingTableId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRoutingTableResult) string { return v.RoutingTableId }).(pulumi.StringOutput)
}

// This controls whether the routes for project-to-project communication are created automatically or not.
func (o LookupRoutingTableResultOutput) SystemRoutes() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupRoutingTableResult) bool { return v.SystemRoutes }).(pulumi.BoolOutput)
}

// Date-time when the routing table was updated
func (o LookupRoutingTableResultOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRoutingTableResult) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRoutingTableResultOutput{})
}
