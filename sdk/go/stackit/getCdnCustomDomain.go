// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package stackit

import (
	"context"
	"reflect"

	"github.com/dirien/pulumi-stackit/sdk/go/stackit/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// CDN distribution data source schema.
//
// > This resource is in beta and may be subject to breaking changes in the future. Use with caution. See our guide for how to opt-in to use beta resources.
//
// ## Example Usage
func LookupCdnCustomDomain(ctx *pulumi.Context, args *LookupCdnCustomDomainArgs, opts ...pulumi.InvokeOption) (*LookupCdnCustomDomainResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupCdnCustomDomainResult
	err := ctx.Invoke("stackit:index/getCdnCustomDomain:getCdnCustomDomain", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCdnCustomDomain.
type LookupCdnCustomDomainArgs struct {
	// CDN distribution ID
	DistributionId string `pulumi:"distributionId"`
	Name           string `pulumi:"name"`
	// STACKIT project ID associated with the distribution
	ProjectId string `pulumi:"projectId"`
}

// A collection of values returned by getCdnCustomDomain.
type LookupCdnCustomDomainResult struct {
	// CDN distribution ID
	DistributionId string `pulumi:"distributionId"`
	// List of distribution errors
	Errors []string `pulumi:"errors"`
	Id     string   `pulumi:"id"`
	Name   string   `pulumi:"name"`
	// STACKIT project ID associated with the distribution
	ProjectId string `pulumi:"projectId"`
	// Status of the distribution
	Status string `pulumi:"status"`
}

func LookupCdnCustomDomainOutput(ctx *pulumi.Context, args LookupCdnCustomDomainOutputArgs, opts ...pulumi.InvokeOption) LookupCdnCustomDomainResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupCdnCustomDomainResultOutput, error) {
			args := v.(LookupCdnCustomDomainArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("stackit:index/getCdnCustomDomain:getCdnCustomDomain", args, LookupCdnCustomDomainResultOutput{}, options).(LookupCdnCustomDomainResultOutput), nil
		}).(LookupCdnCustomDomainResultOutput)
}

// A collection of arguments for invoking getCdnCustomDomain.
type LookupCdnCustomDomainOutputArgs struct {
	// CDN distribution ID
	DistributionId pulumi.StringInput `pulumi:"distributionId"`
	Name           pulumi.StringInput `pulumi:"name"`
	// STACKIT project ID associated with the distribution
	ProjectId pulumi.StringInput `pulumi:"projectId"`
}

func (LookupCdnCustomDomainOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCdnCustomDomainArgs)(nil)).Elem()
}

// A collection of values returned by getCdnCustomDomain.
type LookupCdnCustomDomainResultOutput struct{ *pulumi.OutputState }

func (LookupCdnCustomDomainResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCdnCustomDomainResult)(nil)).Elem()
}

func (o LookupCdnCustomDomainResultOutput) ToLookupCdnCustomDomainResultOutput() LookupCdnCustomDomainResultOutput {
	return o
}

func (o LookupCdnCustomDomainResultOutput) ToLookupCdnCustomDomainResultOutputWithContext(ctx context.Context) LookupCdnCustomDomainResultOutput {
	return o
}

// CDN distribution ID
func (o LookupCdnCustomDomainResultOutput) DistributionId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCdnCustomDomainResult) string { return v.DistributionId }).(pulumi.StringOutput)
}

// List of distribution errors
func (o LookupCdnCustomDomainResultOutput) Errors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupCdnCustomDomainResult) []string { return v.Errors }).(pulumi.StringArrayOutput)
}

func (o LookupCdnCustomDomainResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCdnCustomDomainResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupCdnCustomDomainResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCdnCustomDomainResult) string { return v.Name }).(pulumi.StringOutput)
}

// STACKIT project ID associated with the distribution
func (o LookupCdnCustomDomainResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCdnCustomDomainResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

// Status of the distribution
func (o LookupCdnCustomDomainResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCdnCustomDomainResult) string { return v.Status }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCdnCustomDomainResultOutput{})
}
