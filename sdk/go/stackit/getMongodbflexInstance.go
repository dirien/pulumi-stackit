// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package stackit

import (
	"context"
	"reflect"

	"github.com/dirien/pulumi-stackit/sdk/go/stackit/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// MongoDB Flex instance data source schema. Must have a `region` specified in the provider configuration.
//
// ## Example Usage
func LookupMongodbflexInstance(ctx *pulumi.Context, args *LookupMongodbflexInstanceArgs, opts ...pulumi.InvokeOption) (*LookupMongodbflexInstanceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupMongodbflexInstanceResult
	err := ctx.Invoke("stackit:index/getMongodbflexInstance:getMongodbflexInstance", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMongodbflexInstance.
type LookupMongodbflexInstanceArgs struct {
	// ID of the MongoDB Flex instance.
	InstanceId string `pulumi:"instanceId"`
	// STACKIT project ID to which the instance is associated.
	ProjectId string `pulumi:"projectId"`
	// The resource region. If not defined, the provider region is used.
	Region *string `pulumi:"region"`
}

// A collection of values returned by getMongodbflexInstance.
type LookupMongodbflexInstanceResult struct {
	// The Access Control List (ACL) for the MongoDB Flex instance.
	Acls []string `pulumi:"acls"`
	// The backup schedule. Should follow the cron scheduling system format (e.g. "0 0 * * *").
	BackupSchedule string                       `pulumi:"backupSchedule"`
	Flavor         GetMongodbflexInstanceFlavor `pulumi:"flavor"`
	Id             string                       `pulumi:"id"`
	// ID of the MongoDB Flex instance.
	InstanceId string `pulumi:"instanceId"`
	// Instance name.
	Name string `pulumi:"name"`
	// Custom parameters for the MongoDB Flex instance.
	Options GetMongodbflexInstanceOptions `pulumi:"options"`
	// STACKIT project ID to which the instance is associated.
	ProjectId string `pulumi:"projectId"`
	// The resource region. If not defined, the provider region is used.
	Region   string                        `pulumi:"region"`
	Replicas int                           `pulumi:"replicas"`
	Storage  GetMongodbflexInstanceStorage `pulumi:"storage"`
	Version  string                        `pulumi:"version"`
}

func LookupMongodbflexInstanceOutput(ctx *pulumi.Context, args LookupMongodbflexInstanceOutputArgs, opts ...pulumi.InvokeOption) LookupMongodbflexInstanceResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupMongodbflexInstanceResultOutput, error) {
			args := v.(LookupMongodbflexInstanceArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("stackit:index/getMongodbflexInstance:getMongodbflexInstance", args, LookupMongodbflexInstanceResultOutput{}, options).(LookupMongodbflexInstanceResultOutput), nil
		}).(LookupMongodbflexInstanceResultOutput)
}

// A collection of arguments for invoking getMongodbflexInstance.
type LookupMongodbflexInstanceOutputArgs struct {
	// ID of the MongoDB Flex instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// STACKIT project ID to which the instance is associated.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// The resource region. If not defined, the provider region is used.
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (LookupMongodbflexInstanceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMongodbflexInstanceArgs)(nil)).Elem()
}

// A collection of values returned by getMongodbflexInstance.
type LookupMongodbflexInstanceResultOutput struct{ *pulumi.OutputState }

func (LookupMongodbflexInstanceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMongodbflexInstanceResult)(nil)).Elem()
}

func (o LookupMongodbflexInstanceResultOutput) ToLookupMongodbflexInstanceResultOutput() LookupMongodbflexInstanceResultOutput {
	return o
}

func (o LookupMongodbflexInstanceResultOutput) ToLookupMongodbflexInstanceResultOutputWithContext(ctx context.Context) LookupMongodbflexInstanceResultOutput {
	return o
}

// The Access Control List (ACL) for the MongoDB Flex instance.
func (o LookupMongodbflexInstanceResultOutput) Acls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupMongodbflexInstanceResult) []string { return v.Acls }).(pulumi.StringArrayOutput)
}

// The backup schedule. Should follow the cron scheduling system format (e.g. "0 0 * * *").
func (o LookupMongodbflexInstanceResultOutput) BackupSchedule() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMongodbflexInstanceResult) string { return v.BackupSchedule }).(pulumi.StringOutput)
}

func (o LookupMongodbflexInstanceResultOutput) Flavor() GetMongodbflexInstanceFlavorOutput {
	return o.ApplyT(func(v LookupMongodbflexInstanceResult) GetMongodbflexInstanceFlavor { return v.Flavor }).(GetMongodbflexInstanceFlavorOutput)
}

func (o LookupMongodbflexInstanceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMongodbflexInstanceResult) string { return v.Id }).(pulumi.StringOutput)
}

// ID of the MongoDB Flex instance.
func (o LookupMongodbflexInstanceResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMongodbflexInstanceResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

// Instance name.
func (o LookupMongodbflexInstanceResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMongodbflexInstanceResult) string { return v.Name }).(pulumi.StringOutput)
}

// Custom parameters for the MongoDB Flex instance.
func (o LookupMongodbflexInstanceResultOutput) Options() GetMongodbflexInstanceOptionsOutput {
	return o.ApplyT(func(v LookupMongodbflexInstanceResult) GetMongodbflexInstanceOptions { return v.Options }).(GetMongodbflexInstanceOptionsOutput)
}

// STACKIT project ID to which the instance is associated.
func (o LookupMongodbflexInstanceResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMongodbflexInstanceResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

// The resource region. If not defined, the provider region is used.
func (o LookupMongodbflexInstanceResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMongodbflexInstanceResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o LookupMongodbflexInstanceResultOutput) Replicas() pulumi.IntOutput {
	return o.ApplyT(func(v LookupMongodbflexInstanceResult) int { return v.Replicas }).(pulumi.IntOutput)
}

func (o LookupMongodbflexInstanceResultOutput) Storage() GetMongodbflexInstanceStorageOutput {
	return o.ApplyT(func(v LookupMongodbflexInstanceResult) GetMongodbflexInstanceStorage { return v.Storage }).(GetMongodbflexInstanceStorageOutput)
}

func (o LookupMongodbflexInstanceResultOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMongodbflexInstanceResult) string { return v.Version }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMongodbflexInstanceResultOutput{})
}
