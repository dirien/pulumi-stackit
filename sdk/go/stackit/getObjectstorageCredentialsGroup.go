// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package stackit

import (
	"context"
	"reflect"

	"github.com/dirien/pulumi-stackit/sdk/go/stackit/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ObjectStorage credentials group data source schema. Must have a `region` specified in the provider configuration.
//
// ## Example Usage
func LookupObjectstorageCredentialsGroup(ctx *pulumi.Context, args *LookupObjectstorageCredentialsGroupArgs, opts ...pulumi.InvokeOption) (*LookupObjectstorageCredentialsGroupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupObjectstorageCredentialsGroupResult
	err := ctx.Invoke("stackit:index/getObjectstorageCredentialsGroup:getObjectstorageCredentialsGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getObjectstorageCredentialsGroup.
type LookupObjectstorageCredentialsGroupArgs struct {
	// The credentials group ID.
	CredentialsGroupId string `pulumi:"credentialsGroupId"`
	// Object Storage Project ID to which the credentials group is associated.
	ProjectId string `pulumi:"projectId"`
	// The resource region. If not defined, the provider region is used.
	Region *string `pulumi:"region"`
}

// A collection of values returned by getObjectstorageCredentialsGroup.
type LookupObjectstorageCredentialsGroupResult struct {
	// The credentials group ID.
	CredentialsGroupId string `pulumi:"credentialsGroupId"`
	Id                 string `pulumi:"id"`
	// The credentials group's display name.
	Name string `pulumi:"name"`
	// Object Storage Project ID to which the credentials group is associated.
	ProjectId string `pulumi:"projectId"`
	// The resource region. If not defined, the provider region is used.
	Region *string `pulumi:"region"`
	// Credentials group uniform resource name (URN)
	Urn string `pulumi:"urn"`
}

func LookupObjectstorageCredentialsGroupOutput(ctx *pulumi.Context, args LookupObjectstorageCredentialsGroupOutputArgs, opts ...pulumi.InvokeOption) LookupObjectstorageCredentialsGroupResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupObjectstorageCredentialsGroupResultOutput, error) {
			args := v.(LookupObjectstorageCredentialsGroupArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("stackit:index/getObjectstorageCredentialsGroup:getObjectstorageCredentialsGroup", args, LookupObjectstorageCredentialsGroupResultOutput{}, options).(LookupObjectstorageCredentialsGroupResultOutput), nil
		}).(LookupObjectstorageCredentialsGroupResultOutput)
}

// A collection of arguments for invoking getObjectstorageCredentialsGroup.
type LookupObjectstorageCredentialsGroupOutputArgs struct {
	// The credentials group ID.
	CredentialsGroupId pulumi.StringInput `pulumi:"credentialsGroupId"`
	// Object Storage Project ID to which the credentials group is associated.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// The resource region. If not defined, the provider region is used.
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (LookupObjectstorageCredentialsGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupObjectstorageCredentialsGroupArgs)(nil)).Elem()
}

// A collection of values returned by getObjectstorageCredentialsGroup.
type LookupObjectstorageCredentialsGroupResultOutput struct{ *pulumi.OutputState }

func (LookupObjectstorageCredentialsGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupObjectstorageCredentialsGroupResult)(nil)).Elem()
}

func (o LookupObjectstorageCredentialsGroupResultOutput) ToLookupObjectstorageCredentialsGroupResultOutput() LookupObjectstorageCredentialsGroupResultOutput {
	return o
}

func (o LookupObjectstorageCredentialsGroupResultOutput) ToLookupObjectstorageCredentialsGroupResultOutputWithContext(ctx context.Context) LookupObjectstorageCredentialsGroupResultOutput {
	return o
}

// The credentials group ID.
func (o LookupObjectstorageCredentialsGroupResultOutput) CredentialsGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupObjectstorageCredentialsGroupResult) string { return v.CredentialsGroupId }).(pulumi.StringOutput)
}

func (o LookupObjectstorageCredentialsGroupResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupObjectstorageCredentialsGroupResult) string { return v.Id }).(pulumi.StringOutput)
}

// The credentials group's display name.
func (o LookupObjectstorageCredentialsGroupResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupObjectstorageCredentialsGroupResult) string { return v.Name }).(pulumi.StringOutput)
}

// Object Storage Project ID to which the credentials group is associated.
func (o LookupObjectstorageCredentialsGroupResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupObjectstorageCredentialsGroupResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

// The resource region. If not defined, the provider region is used.
func (o LookupObjectstorageCredentialsGroupResultOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupObjectstorageCredentialsGroupResult) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// Credentials group uniform resource name (URN)
func (o LookupObjectstorageCredentialsGroupResultOutput) Urn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupObjectstorageCredentialsGroupResult) string { return v.Urn }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupObjectstorageCredentialsGroupResultOutput{})
}
