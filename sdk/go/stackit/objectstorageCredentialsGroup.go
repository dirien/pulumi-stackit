// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package stackit

import (
	"context"
	"reflect"

	"errors"
	"github.com/dirien/pulumi-stackit/sdk/go/stackit/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ObjectStorage credentials group resource schema. Must have a `region` specified in the provider configuration. If you are creating `credentialsgroup` and `bucket` resources simultaneously, please include the `dependsOn` field so that they are created sequentially. This prevents errors from concurrent calls to the service enablement that is done in the background.
//
// ## Example Usage
type ObjectstorageCredentialsGroup struct {
	pulumi.CustomResourceState

	// The credentials group ID
	CredentialsGroupId pulumi.StringOutput `pulumi:"credentialsGroupId"`
	// The credentials group's display name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Project ID to which the credentials group is associated.
	ProjectId pulumi.StringOutput `pulumi:"projectId"`
	// The resource region. If not defined, the provider region is used.
	Region pulumi.StringOutput `pulumi:"region"`
	// Credentials group uniform resource name (URN)
	Urn pulumi.StringOutput `pulumi:"urn"`
}

// NewObjectstorageCredentialsGroup registers a new resource with the given unique name, arguments, and options.
func NewObjectstorageCredentialsGroup(ctx *pulumi.Context,
	name string, args *ObjectstorageCredentialsGroupArgs, opts ...pulumi.ResourceOption) (*ObjectstorageCredentialsGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ProjectId == nil {
		return nil, errors.New("invalid value for required argument 'ProjectId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ObjectstorageCredentialsGroup
	err := ctx.RegisterResource("stackit:index/objectstorageCredentialsGroup:ObjectstorageCredentialsGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetObjectstorageCredentialsGroup gets an existing ObjectstorageCredentialsGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetObjectstorageCredentialsGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ObjectstorageCredentialsGroupState, opts ...pulumi.ResourceOption) (*ObjectstorageCredentialsGroup, error) {
	var resource ObjectstorageCredentialsGroup
	err := ctx.ReadResource("stackit:index/objectstorageCredentialsGroup:ObjectstorageCredentialsGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ObjectstorageCredentialsGroup resources.
type objectstorageCredentialsGroupState struct {
	// The credentials group ID
	CredentialsGroupId *string `pulumi:"credentialsGroupId"`
	// The credentials group's display name.
	Name *string `pulumi:"name"`
	// Project ID to which the credentials group is associated.
	ProjectId *string `pulumi:"projectId"`
	// The resource region. If not defined, the provider region is used.
	Region *string `pulumi:"region"`
	// Credentials group uniform resource name (URN)
	Urn *string `pulumi:"urn"`
}

type ObjectstorageCredentialsGroupState struct {
	// The credentials group ID
	CredentialsGroupId pulumi.StringPtrInput
	// The credentials group's display name.
	Name pulumi.StringPtrInput
	// Project ID to which the credentials group is associated.
	ProjectId pulumi.StringPtrInput
	// The resource region. If not defined, the provider region is used.
	Region pulumi.StringPtrInput
	// Credentials group uniform resource name (URN)
	Urn pulumi.StringPtrInput
}

func (ObjectstorageCredentialsGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*objectstorageCredentialsGroupState)(nil)).Elem()
}

type objectstorageCredentialsGroupArgs struct {
	// The credentials group's display name.
	Name *string `pulumi:"name"`
	// Project ID to which the credentials group is associated.
	ProjectId string `pulumi:"projectId"`
	// The resource region. If not defined, the provider region is used.
	Region *string `pulumi:"region"`
}

// The set of arguments for constructing a ObjectstorageCredentialsGroup resource.
type ObjectstorageCredentialsGroupArgs struct {
	// The credentials group's display name.
	Name pulumi.StringPtrInput
	// Project ID to which the credentials group is associated.
	ProjectId pulumi.StringInput
	// The resource region. If not defined, the provider region is used.
	Region pulumi.StringPtrInput
}

func (ObjectstorageCredentialsGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*objectstorageCredentialsGroupArgs)(nil)).Elem()
}

type ObjectstorageCredentialsGroupInput interface {
	pulumi.Input

	ToObjectstorageCredentialsGroupOutput() ObjectstorageCredentialsGroupOutput
	ToObjectstorageCredentialsGroupOutputWithContext(ctx context.Context) ObjectstorageCredentialsGroupOutput
}

func (*ObjectstorageCredentialsGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectstorageCredentialsGroup)(nil)).Elem()
}

func (i *ObjectstorageCredentialsGroup) ToObjectstorageCredentialsGroupOutput() ObjectstorageCredentialsGroupOutput {
	return i.ToObjectstorageCredentialsGroupOutputWithContext(context.Background())
}

func (i *ObjectstorageCredentialsGroup) ToObjectstorageCredentialsGroupOutputWithContext(ctx context.Context) ObjectstorageCredentialsGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectstorageCredentialsGroupOutput)
}

// ObjectstorageCredentialsGroupArrayInput is an input type that accepts ObjectstorageCredentialsGroupArray and ObjectstorageCredentialsGroupArrayOutput values.
// You can construct a concrete instance of `ObjectstorageCredentialsGroupArrayInput` via:
//
//	ObjectstorageCredentialsGroupArray{ ObjectstorageCredentialsGroupArgs{...} }
type ObjectstorageCredentialsGroupArrayInput interface {
	pulumi.Input

	ToObjectstorageCredentialsGroupArrayOutput() ObjectstorageCredentialsGroupArrayOutput
	ToObjectstorageCredentialsGroupArrayOutputWithContext(context.Context) ObjectstorageCredentialsGroupArrayOutput
}

type ObjectstorageCredentialsGroupArray []ObjectstorageCredentialsGroupInput

func (ObjectstorageCredentialsGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ObjectstorageCredentialsGroup)(nil)).Elem()
}

func (i ObjectstorageCredentialsGroupArray) ToObjectstorageCredentialsGroupArrayOutput() ObjectstorageCredentialsGroupArrayOutput {
	return i.ToObjectstorageCredentialsGroupArrayOutputWithContext(context.Background())
}

func (i ObjectstorageCredentialsGroupArray) ToObjectstorageCredentialsGroupArrayOutputWithContext(ctx context.Context) ObjectstorageCredentialsGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectstorageCredentialsGroupArrayOutput)
}

// ObjectstorageCredentialsGroupMapInput is an input type that accepts ObjectstorageCredentialsGroupMap and ObjectstorageCredentialsGroupMapOutput values.
// You can construct a concrete instance of `ObjectstorageCredentialsGroupMapInput` via:
//
//	ObjectstorageCredentialsGroupMap{ "key": ObjectstorageCredentialsGroupArgs{...} }
type ObjectstorageCredentialsGroupMapInput interface {
	pulumi.Input

	ToObjectstorageCredentialsGroupMapOutput() ObjectstorageCredentialsGroupMapOutput
	ToObjectstorageCredentialsGroupMapOutputWithContext(context.Context) ObjectstorageCredentialsGroupMapOutput
}

type ObjectstorageCredentialsGroupMap map[string]ObjectstorageCredentialsGroupInput

func (ObjectstorageCredentialsGroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ObjectstorageCredentialsGroup)(nil)).Elem()
}

func (i ObjectstorageCredentialsGroupMap) ToObjectstorageCredentialsGroupMapOutput() ObjectstorageCredentialsGroupMapOutput {
	return i.ToObjectstorageCredentialsGroupMapOutputWithContext(context.Background())
}

func (i ObjectstorageCredentialsGroupMap) ToObjectstorageCredentialsGroupMapOutputWithContext(ctx context.Context) ObjectstorageCredentialsGroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectstorageCredentialsGroupMapOutput)
}

type ObjectstorageCredentialsGroupOutput struct{ *pulumi.OutputState }

func (ObjectstorageCredentialsGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectstorageCredentialsGroup)(nil)).Elem()
}

func (o ObjectstorageCredentialsGroupOutput) ToObjectstorageCredentialsGroupOutput() ObjectstorageCredentialsGroupOutput {
	return o
}

func (o ObjectstorageCredentialsGroupOutput) ToObjectstorageCredentialsGroupOutputWithContext(ctx context.Context) ObjectstorageCredentialsGroupOutput {
	return o
}

// The credentials group ID
func (o ObjectstorageCredentialsGroupOutput) CredentialsGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *ObjectstorageCredentialsGroup) pulumi.StringOutput { return v.CredentialsGroupId }).(pulumi.StringOutput)
}

// The credentials group's display name.
func (o ObjectstorageCredentialsGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ObjectstorageCredentialsGroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Project ID to which the credentials group is associated.
func (o ObjectstorageCredentialsGroupOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *ObjectstorageCredentialsGroup) pulumi.StringOutput { return v.ProjectId }).(pulumi.StringOutput)
}

// The resource region. If not defined, the provider region is used.
func (o ObjectstorageCredentialsGroupOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *ObjectstorageCredentialsGroup) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// Credentials group uniform resource name (URN)
func (o ObjectstorageCredentialsGroupOutput) Urn() pulumi.StringOutput {
	return o.ApplyT(func(v *ObjectstorageCredentialsGroup) pulumi.StringOutput { return v.Urn }).(pulumi.StringOutput)
}

type ObjectstorageCredentialsGroupArrayOutput struct{ *pulumi.OutputState }

func (ObjectstorageCredentialsGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ObjectstorageCredentialsGroup)(nil)).Elem()
}

func (o ObjectstorageCredentialsGroupArrayOutput) ToObjectstorageCredentialsGroupArrayOutput() ObjectstorageCredentialsGroupArrayOutput {
	return o
}

func (o ObjectstorageCredentialsGroupArrayOutput) ToObjectstorageCredentialsGroupArrayOutputWithContext(ctx context.Context) ObjectstorageCredentialsGroupArrayOutput {
	return o
}

func (o ObjectstorageCredentialsGroupArrayOutput) Index(i pulumi.IntInput) ObjectstorageCredentialsGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ObjectstorageCredentialsGroup {
		return vs[0].([]*ObjectstorageCredentialsGroup)[vs[1].(int)]
	}).(ObjectstorageCredentialsGroupOutput)
}

type ObjectstorageCredentialsGroupMapOutput struct{ *pulumi.OutputState }

func (ObjectstorageCredentialsGroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ObjectstorageCredentialsGroup)(nil)).Elem()
}

func (o ObjectstorageCredentialsGroupMapOutput) ToObjectstorageCredentialsGroupMapOutput() ObjectstorageCredentialsGroupMapOutput {
	return o
}

func (o ObjectstorageCredentialsGroupMapOutput) ToObjectstorageCredentialsGroupMapOutputWithContext(ctx context.Context) ObjectstorageCredentialsGroupMapOutput {
	return o
}

func (o ObjectstorageCredentialsGroupMapOutput) MapIndex(k pulumi.StringInput) ObjectstorageCredentialsGroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ObjectstorageCredentialsGroup {
		return vs[0].(map[string]*ObjectstorageCredentialsGroup)[vs[1].(string)]
	}).(ObjectstorageCredentialsGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectstorageCredentialsGroupInput)(nil)).Elem(), &ObjectstorageCredentialsGroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectstorageCredentialsGroupArrayInput)(nil)).Elem(), ObjectstorageCredentialsGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectstorageCredentialsGroupMapInput)(nil)).Elem(), ObjectstorageCredentialsGroupMap{})
	pulumi.RegisterOutputType(ObjectstorageCredentialsGroupOutput{})
	pulumi.RegisterOutputType(ObjectstorageCredentialsGroupArrayOutput{})
	pulumi.RegisterOutputType(ObjectstorageCredentialsGroupMapOutput{})
}
