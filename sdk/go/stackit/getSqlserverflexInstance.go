// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package stackit

import (
	"context"
	"reflect"

	"github.com/dirien/pulumi-stackit/sdk/go/stackit/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// SQLServer Flex instance data source schema. Must have a `region` specified in the provider configuration.
//
// ## Example Usage
func LookupSqlserverflexInstance(ctx *pulumi.Context, args *LookupSqlserverflexInstanceArgs, opts ...pulumi.InvokeOption) (*LookupSqlserverflexInstanceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSqlserverflexInstanceResult
	err := ctx.Invoke("stackit:index/getSqlserverflexInstance:getSqlserverflexInstance", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSqlserverflexInstance.
type LookupSqlserverflexInstanceArgs struct {
	// ID of the SQLServer Flex instance.
	InstanceId string `pulumi:"instanceId"`
	// STACKIT project ID to which the instance is associated.
	ProjectId string `pulumi:"projectId"`
	// The resource region. If not defined, the provider region is used.
	Region *string `pulumi:"region"`
}

// A collection of values returned by getSqlserverflexInstance.
type LookupSqlserverflexInstanceResult struct {
	// The Access Control List (ACL) for the SQLServer Flex instance.
	Acls []string `pulumi:"acls"`
	// The backup schedule. Should follow the cron scheduling system format (e.g. "0 0 * * *").
	BackupSchedule string                         `pulumi:"backupSchedule"`
	Flavor         GetSqlserverflexInstanceFlavor `pulumi:"flavor"`
	Id             string                         `pulumi:"id"`
	// ID of the SQLServer Flex instance.
	InstanceId string `pulumi:"instanceId"`
	// Instance name.
	Name string `pulumi:"name"`
	// Custom parameters for the SQLServer Flex instance.
	Options GetSqlserverflexInstanceOptions `pulumi:"options"`
	// STACKIT project ID to which the instance is associated.
	ProjectId string `pulumi:"projectId"`
	// The resource region. If not defined, the provider region is used.
	Region   *string                         `pulumi:"region"`
	Replicas int                             `pulumi:"replicas"`
	Storage  GetSqlserverflexInstanceStorage `pulumi:"storage"`
	Version  string                          `pulumi:"version"`
}

func LookupSqlserverflexInstanceOutput(ctx *pulumi.Context, args LookupSqlserverflexInstanceOutputArgs, opts ...pulumi.InvokeOption) LookupSqlserverflexInstanceResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupSqlserverflexInstanceResultOutput, error) {
			args := v.(LookupSqlserverflexInstanceArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("stackit:index/getSqlserverflexInstance:getSqlserverflexInstance", args, LookupSqlserverflexInstanceResultOutput{}, options).(LookupSqlserverflexInstanceResultOutput), nil
		}).(LookupSqlserverflexInstanceResultOutput)
}

// A collection of arguments for invoking getSqlserverflexInstance.
type LookupSqlserverflexInstanceOutputArgs struct {
	// ID of the SQLServer Flex instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// STACKIT project ID to which the instance is associated.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// The resource region. If not defined, the provider region is used.
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (LookupSqlserverflexInstanceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSqlserverflexInstanceArgs)(nil)).Elem()
}

// A collection of values returned by getSqlserverflexInstance.
type LookupSqlserverflexInstanceResultOutput struct{ *pulumi.OutputState }

func (LookupSqlserverflexInstanceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSqlserverflexInstanceResult)(nil)).Elem()
}

func (o LookupSqlserverflexInstanceResultOutput) ToLookupSqlserverflexInstanceResultOutput() LookupSqlserverflexInstanceResultOutput {
	return o
}

func (o LookupSqlserverflexInstanceResultOutput) ToLookupSqlserverflexInstanceResultOutputWithContext(ctx context.Context) LookupSqlserverflexInstanceResultOutput {
	return o
}

// The Access Control List (ACL) for the SQLServer Flex instance.
func (o LookupSqlserverflexInstanceResultOutput) Acls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupSqlserverflexInstanceResult) []string { return v.Acls }).(pulumi.StringArrayOutput)
}

// The backup schedule. Should follow the cron scheduling system format (e.g. "0 0 * * *").
func (o LookupSqlserverflexInstanceResultOutput) BackupSchedule() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSqlserverflexInstanceResult) string { return v.BackupSchedule }).(pulumi.StringOutput)
}

func (o LookupSqlserverflexInstanceResultOutput) Flavor() GetSqlserverflexInstanceFlavorOutput {
	return o.ApplyT(func(v LookupSqlserverflexInstanceResult) GetSqlserverflexInstanceFlavor { return v.Flavor }).(GetSqlserverflexInstanceFlavorOutput)
}

func (o LookupSqlserverflexInstanceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSqlserverflexInstanceResult) string { return v.Id }).(pulumi.StringOutput)
}

// ID of the SQLServer Flex instance.
func (o LookupSqlserverflexInstanceResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSqlserverflexInstanceResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

// Instance name.
func (o LookupSqlserverflexInstanceResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSqlserverflexInstanceResult) string { return v.Name }).(pulumi.StringOutput)
}

// Custom parameters for the SQLServer Flex instance.
func (o LookupSqlserverflexInstanceResultOutput) Options() GetSqlserverflexInstanceOptionsOutput {
	return o.ApplyT(func(v LookupSqlserverflexInstanceResult) GetSqlserverflexInstanceOptions { return v.Options }).(GetSqlserverflexInstanceOptionsOutput)
}

// STACKIT project ID to which the instance is associated.
func (o LookupSqlserverflexInstanceResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSqlserverflexInstanceResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

// The resource region. If not defined, the provider region is used.
func (o LookupSqlserverflexInstanceResultOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSqlserverflexInstanceResult) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o LookupSqlserverflexInstanceResultOutput) Replicas() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSqlserverflexInstanceResult) int { return v.Replicas }).(pulumi.IntOutput)
}

func (o LookupSqlserverflexInstanceResultOutput) Storage() GetSqlserverflexInstanceStorageOutput {
	return o.ApplyT(func(v LookupSqlserverflexInstanceResult) GetSqlserverflexInstanceStorage { return v.Storage }).(GetSqlserverflexInstanceStorageOutput)
}

func (o LookupSqlserverflexInstanceResultOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSqlserverflexInstanceResult) string { return v.Version }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSqlserverflexInstanceResultOutput{})
}
