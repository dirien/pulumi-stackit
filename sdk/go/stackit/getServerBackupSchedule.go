// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package stackit

import (
	"context"
	"reflect"

	"github.com/dirien/pulumi-stackit/sdk/go/stackit/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Server backup schedule datasource schema. Must have a `region` specified in the provider configuration.
//
// > This resource is in beta and may be subject to breaking changes in the future. Use with caution. See our guide for how to opt-in to use beta resources.
//
// ## Example Usage
func LookupServerBackupSchedule(ctx *pulumi.Context, args *LookupServerBackupScheduleArgs, opts ...pulumi.InvokeOption) (*LookupServerBackupScheduleResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupServerBackupScheduleResult
	err := ctx.Invoke("stackit:index/getServerBackupSchedule:getServerBackupSchedule", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getServerBackupSchedule.
type LookupServerBackupScheduleArgs struct {
	// Backup schedule ID.
	BackupScheduleId int `pulumi:"backupScheduleId"`
	// STACKIT Project ID to which the server is associated.
	ProjectId string `pulumi:"projectId"`
	// The resource region. If not defined, the provider region is used.
	Region *string `pulumi:"region"`
	// Server ID for the backup schedule.
	ServerId string `pulumi:"serverId"`
}

// A collection of values returned by getServerBackupSchedule.
type LookupServerBackupScheduleResult struct {
	// Backup schedule details for the backups.
	BackupProperties GetServerBackupScheduleBackupProperties `pulumi:"backupProperties"`
	// Backup schedule ID.
	BackupScheduleId int `pulumi:"backupScheduleId"`
	// Is the backup schedule enabled or disabled.
	Enabled bool   `pulumi:"enabled"`
	Id      string `pulumi:"id"`
	// The schedule name.
	Name string `pulumi:"name"`
	// STACKIT Project ID to which the server is associated.
	ProjectId string `pulumi:"projectId"`
	// The resource region. If not defined, the provider region is used.
	Region *string `pulumi:"region"`
	// Backup schedule described in `rrule` (recurrence rule) format.
	Rrule string `pulumi:"rrule"`
	// Server ID for the backup schedule.
	ServerId string `pulumi:"serverId"`
}

func LookupServerBackupScheduleOutput(ctx *pulumi.Context, args LookupServerBackupScheduleOutputArgs, opts ...pulumi.InvokeOption) LookupServerBackupScheduleResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupServerBackupScheduleResultOutput, error) {
			args := v.(LookupServerBackupScheduleArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("stackit:index/getServerBackupSchedule:getServerBackupSchedule", args, LookupServerBackupScheduleResultOutput{}, options).(LookupServerBackupScheduleResultOutput), nil
		}).(LookupServerBackupScheduleResultOutput)
}

// A collection of arguments for invoking getServerBackupSchedule.
type LookupServerBackupScheduleOutputArgs struct {
	// Backup schedule ID.
	BackupScheduleId pulumi.IntInput `pulumi:"backupScheduleId"`
	// STACKIT Project ID to which the server is associated.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// The resource region. If not defined, the provider region is used.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Server ID for the backup schedule.
	ServerId pulumi.StringInput `pulumi:"serverId"`
}

func (LookupServerBackupScheduleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServerBackupScheduleArgs)(nil)).Elem()
}

// A collection of values returned by getServerBackupSchedule.
type LookupServerBackupScheduleResultOutput struct{ *pulumi.OutputState }

func (LookupServerBackupScheduleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServerBackupScheduleResult)(nil)).Elem()
}

func (o LookupServerBackupScheduleResultOutput) ToLookupServerBackupScheduleResultOutput() LookupServerBackupScheduleResultOutput {
	return o
}

func (o LookupServerBackupScheduleResultOutput) ToLookupServerBackupScheduleResultOutputWithContext(ctx context.Context) LookupServerBackupScheduleResultOutput {
	return o
}

// Backup schedule details for the backups.
func (o LookupServerBackupScheduleResultOutput) BackupProperties() GetServerBackupScheduleBackupPropertiesOutput {
	return o.ApplyT(func(v LookupServerBackupScheduleResult) GetServerBackupScheduleBackupProperties {
		return v.BackupProperties
	}).(GetServerBackupScheduleBackupPropertiesOutput)
}

// Backup schedule ID.
func (o LookupServerBackupScheduleResultOutput) BackupScheduleId() pulumi.IntOutput {
	return o.ApplyT(func(v LookupServerBackupScheduleResult) int { return v.BackupScheduleId }).(pulumi.IntOutput)
}

// Is the backup schedule enabled or disabled.
func (o LookupServerBackupScheduleResultOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupServerBackupScheduleResult) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o LookupServerBackupScheduleResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerBackupScheduleResult) string { return v.Id }).(pulumi.StringOutput)
}

// The schedule name.
func (o LookupServerBackupScheduleResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerBackupScheduleResult) string { return v.Name }).(pulumi.StringOutput)
}

// STACKIT Project ID to which the server is associated.
func (o LookupServerBackupScheduleResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerBackupScheduleResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

// The resource region. If not defined, the provider region is used.
func (o LookupServerBackupScheduleResultOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServerBackupScheduleResult) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// Backup schedule described in `rrule` (recurrence rule) format.
func (o LookupServerBackupScheduleResultOutput) Rrule() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerBackupScheduleResult) string { return v.Rrule }).(pulumi.StringOutput)
}

// Server ID for the backup schedule.
func (o LookupServerBackupScheduleResultOutput) ServerId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerBackupScheduleResult) string { return v.ServerId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupServerBackupScheduleResultOutput{})
}
