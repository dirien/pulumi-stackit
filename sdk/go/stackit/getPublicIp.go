// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package stackit

import (
	"context"
	"reflect"

	"github.com/dirien/pulumi-stackit/sdk/go/stackit/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Public IP resource schema. Must have a `region` specified in the provider configuration.
//
// ## Example Usage
func LookupPublicIp(ctx *pulumi.Context, args *LookupPublicIpArgs, opts ...pulumi.InvokeOption) (*LookupPublicIpResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupPublicIpResult
	err := ctx.Invoke("stackit:index/getPublicIp:getPublicIp", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPublicIp.
type LookupPublicIpArgs struct {
	// STACKIT project ID to which the public IP is associated.
	ProjectId string `pulumi:"projectId"`
	// The public IP ID.
	PublicIpId string `pulumi:"publicIpId"`
}

// A collection of values returned by getPublicIp.
type LookupPublicIpResult struct {
	Id string `pulumi:"id"`
	// The IP address.
	Ip string `pulumi:"ip"`
	// Labels are key-value string pairs which can be attached to a resource container
	Labels map[string]string `pulumi:"labels"`
	// Associates the public IP with a network interface or a virtual IP (ID).
	NetworkInterfaceId string `pulumi:"networkInterfaceId"`
	// STACKIT project ID to which the public IP is associated.
	ProjectId string `pulumi:"projectId"`
	// The public IP ID.
	PublicIpId string `pulumi:"publicIpId"`
}

func LookupPublicIpOutput(ctx *pulumi.Context, args LookupPublicIpOutputArgs, opts ...pulumi.InvokeOption) LookupPublicIpResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupPublicIpResultOutput, error) {
			args := v.(LookupPublicIpArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("stackit:index/getPublicIp:getPublicIp", args, LookupPublicIpResultOutput{}, options).(LookupPublicIpResultOutput), nil
		}).(LookupPublicIpResultOutput)
}

// A collection of arguments for invoking getPublicIp.
type LookupPublicIpOutputArgs struct {
	// STACKIT project ID to which the public IP is associated.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// The public IP ID.
	PublicIpId pulumi.StringInput `pulumi:"publicIpId"`
}

func (LookupPublicIpOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPublicIpArgs)(nil)).Elem()
}

// A collection of values returned by getPublicIp.
type LookupPublicIpResultOutput struct{ *pulumi.OutputState }

func (LookupPublicIpResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPublicIpResult)(nil)).Elem()
}

func (o LookupPublicIpResultOutput) ToLookupPublicIpResultOutput() LookupPublicIpResultOutput {
	return o
}

func (o LookupPublicIpResultOutput) ToLookupPublicIpResultOutputWithContext(ctx context.Context) LookupPublicIpResultOutput {
	return o
}

func (o LookupPublicIpResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPublicIpResult) string { return v.Id }).(pulumi.StringOutput)
}

// The IP address.
func (o LookupPublicIpResultOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPublicIpResult) string { return v.Ip }).(pulumi.StringOutput)
}

// Labels are key-value string pairs which can be attached to a resource container
func (o LookupPublicIpResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupPublicIpResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Associates the public IP with a network interface or a virtual IP (ID).
func (o LookupPublicIpResultOutput) NetworkInterfaceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPublicIpResult) string { return v.NetworkInterfaceId }).(pulumi.StringOutput)
}

// STACKIT project ID to which the public IP is associated.
func (o LookupPublicIpResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPublicIpResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

// The public IP ID.
func (o LookupPublicIpResultOutput) PublicIpId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPublicIpResult) string { return v.PublicIpId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPublicIpResultOutput{})
}
