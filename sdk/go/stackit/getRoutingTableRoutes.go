// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package stackit

import (
	"context"
	"reflect"

	"github.com/dirien/pulumi-stackit/sdk/go/stackit/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Routing table routes datasource schema. Must have a `region` specified in the provider configuration.
//
// > This datasource is part of the routing-tables experiment and is likely going to undergo significant changes or be removed in the future. Use it at your own discretion.
//
// ## Example Usage
func GetRoutingTableRoutes(ctx *pulumi.Context, args *GetRoutingTableRoutesArgs, opts ...pulumi.InvokeOption) (*GetRoutingTableRoutesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetRoutingTableRoutesResult
	err := ctx.Invoke("stackit:index/getRoutingTableRoutes:getRoutingTableRoutes", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRoutingTableRoutes.
type GetRoutingTableRoutesArgs struct {
	// The network area ID to which the routing table is associated.
	NetworkAreaId string `pulumi:"networkAreaId"`
	// STACKIT organization ID to which the routing table is associated.
	OrganizationId string `pulumi:"organizationId"`
	// The datasource region. If not defined, the provider region is used.
	Region *string `pulumi:"region"`
	// The routing tables ID.
	RoutingTableId string `pulumi:"routingTableId"`
}

// A collection of values returned by getRoutingTableRoutes.
type GetRoutingTableRoutesResult struct {
	Id string `pulumi:"id"`
	// The network area ID to which the routing table is associated.
	NetworkAreaId string `pulumi:"networkAreaId"`
	// STACKIT organization ID to which the routing table is associated.
	OrganizationId string `pulumi:"organizationId"`
	// The datasource region. If not defined, the provider region is used.
	Region *string `pulumi:"region"`
	// List of routes.
	Routes []GetRoutingTableRoutesRoute `pulumi:"routes"`
	// The routing tables ID.
	RoutingTableId string `pulumi:"routingTableId"`
}

func GetRoutingTableRoutesOutput(ctx *pulumi.Context, args GetRoutingTableRoutesOutputArgs, opts ...pulumi.InvokeOption) GetRoutingTableRoutesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetRoutingTableRoutesResultOutput, error) {
			args := v.(GetRoutingTableRoutesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("stackit:index/getRoutingTableRoutes:getRoutingTableRoutes", args, GetRoutingTableRoutesResultOutput{}, options).(GetRoutingTableRoutesResultOutput), nil
		}).(GetRoutingTableRoutesResultOutput)
}

// A collection of arguments for invoking getRoutingTableRoutes.
type GetRoutingTableRoutesOutputArgs struct {
	// The network area ID to which the routing table is associated.
	NetworkAreaId pulumi.StringInput `pulumi:"networkAreaId"`
	// STACKIT organization ID to which the routing table is associated.
	OrganizationId pulumi.StringInput `pulumi:"organizationId"`
	// The datasource region. If not defined, the provider region is used.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// The routing tables ID.
	RoutingTableId pulumi.StringInput `pulumi:"routingTableId"`
}

func (GetRoutingTableRoutesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRoutingTableRoutesArgs)(nil)).Elem()
}

// A collection of values returned by getRoutingTableRoutes.
type GetRoutingTableRoutesResultOutput struct{ *pulumi.OutputState }

func (GetRoutingTableRoutesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRoutingTableRoutesResult)(nil)).Elem()
}

func (o GetRoutingTableRoutesResultOutput) ToGetRoutingTableRoutesResultOutput() GetRoutingTableRoutesResultOutput {
	return o
}

func (o GetRoutingTableRoutesResultOutput) ToGetRoutingTableRoutesResultOutputWithContext(ctx context.Context) GetRoutingTableRoutesResultOutput {
	return o
}

func (o GetRoutingTableRoutesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutingTableRoutesResult) string { return v.Id }).(pulumi.StringOutput)
}

// The network area ID to which the routing table is associated.
func (o GetRoutingTableRoutesResultOutput) NetworkAreaId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutingTableRoutesResult) string { return v.NetworkAreaId }).(pulumi.StringOutput)
}

// STACKIT organization ID to which the routing table is associated.
func (o GetRoutingTableRoutesResultOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutingTableRoutesResult) string { return v.OrganizationId }).(pulumi.StringOutput)
}

// The datasource region. If not defined, the provider region is used.
func (o GetRoutingTableRoutesResultOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRoutingTableRoutesResult) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// List of routes.
func (o GetRoutingTableRoutesResultOutput) Routes() GetRoutingTableRoutesRouteArrayOutput {
	return o.ApplyT(func(v GetRoutingTableRoutesResult) []GetRoutingTableRoutesRoute { return v.Routes }).(GetRoutingTableRoutesRouteArrayOutput)
}

// The routing tables ID.
func (o GetRoutingTableRoutesResultOutput) RoutingTableId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutingTableRoutesResult) string { return v.RoutingTableId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRoutingTableRoutesResultOutput{})
}
