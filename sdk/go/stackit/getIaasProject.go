// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package stackit

import (
	"context"
	"reflect"

	"github.com/dirien/pulumi-stackit/sdk/go/stackit/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Project details. Must have a `region` specified in the provider configuration.
//
// ## Example Usage
func GetIaasProject(ctx *pulumi.Context, args *GetIaasProjectArgs, opts ...pulumi.InvokeOption) (*GetIaasProjectResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetIaasProjectResult
	err := ctx.Invoke("stackit:index/getIaasProject:getIaasProject", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getIaasProject.
type GetIaasProjectArgs struct {
	// STACKIT project ID.
	ProjectId string `pulumi:"projectId"`
}

// A collection of values returned by getIaasProject.
type GetIaasProjectResult struct {
	// The area ID to which the project belongs to.
	AreaId string `pulumi:"areaId"`
	// Date-time when the project was created.
	CreatedAt string `pulumi:"createdAt"`
	Id        string `pulumi:"id"`
	// Specifies if the project has internet_access
	InternetAccess bool `pulumi:"internetAccess"`
	// STACKIT project ID.
	ProjectId string `pulumi:"projectId"`
	// Specifies the state of the project.
	State string `pulumi:"state"`
	// Date-time when the project was last updated.
	UpdatedAt string `pulumi:"updatedAt"`
}

func GetIaasProjectOutput(ctx *pulumi.Context, args GetIaasProjectOutputArgs, opts ...pulumi.InvokeOption) GetIaasProjectResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetIaasProjectResultOutput, error) {
			args := v.(GetIaasProjectArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("stackit:index/getIaasProject:getIaasProject", args, GetIaasProjectResultOutput{}, options).(GetIaasProjectResultOutput), nil
		}).(GetIaasProjectResultOutput)
}

// A collection of arguments for invoking getIaasProject.
type GetIaasProjectOutputArgs struct {
	// STACKIT project ID.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
}

func (GetIaasProjectOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIaasProjectArgs)(nil)).Elem()
}

// A collection of values returned by getIaasProject.
type GetIaasProjectResultOutput struct{ *pulumi.OutputState }

func (GetIaasProjectResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIaasProjectResult)(nil)).Elem()
}

func (o GetIaasProjectResultOutput) ToGetIaasProjectResultOutput() GetIaasProjectResultOutput {
	return o
}

func (o GetIaasProjectResultOutput) ToGetIaasProjectResultOutputWithContext(ctx context.Context) GetIaasProjectResultOutput {
	return o
}

// The area ID to which the project belongs to.
func (o GetIaasProjectResultOutput) AreaId() pulumi.StringOutput {
	return o.ApplyT(func(v GetIaasProjectResult) string { return v.AreaId }).(pulumi.StringOutput)
}

// Date-time when the project was created.
func (o GetIaasProjectResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetIaasProjectResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o GetIaasProjectResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIaasProjectResult) string { return v.Id }).(pulumi.StringOutput)
}

// Specifies if the project has internet_access
func (o GetIaasProjectResultOutput) InternetAccess() pulumi.BoolOutput {
	return o.ApplyT(func(v GetIaasProjectResult) bool { return v.InternetAccess }).(pulumi.BoolOutput)
}

// STACKIT project ID.
func (o GetIaasProjectResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetIaasProjectResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

// Specifies the state of the project.
func (o GetIaasProjectResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetIaasProjectResult) string { return v.State }).(pulumi.StringOutput)
}

// Date-time when the project was last updated.
func (o GetIaasProjectResultOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetIaasProjectResult) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetIaasProjectResultOutput{})
}
