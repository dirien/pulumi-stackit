// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package stackit

import (
	"context"
	"reflect"

	"errors"
	"github.com/dirien/pulumi-stackit/sdk/go/stackit/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Network area resource schema. Must have a `region` specified in the provider configuration.
//
// ## Example Usage
type NetworkArea struct {
	pulumi.CustomResourceState

	// List of DNS Servers/Nameservers.
	DefaultNameservers pulumi.StringArrayOutput `pulumi:"defaultNameservers"`
	// The default prefix length for networks in the network area.
	DefaultPrefixLength pulumi.IntOutput `pulumi:"defaultPrefixLength"`
	// Labels are key-value string pairs which can be attached to a resource container
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// The maximal prefix length for networks in the network area.
	MaxPrefixLength pulumi.IntOutput `pulumi:"maxPrefixLength"`
	// The minimal prefix length for networks in the network area.
	MinPrefixLength pulumi.IntOutput `pulumi:"minPrefixLength"`
	// The name of the network area.
	Name pulumi.StringOutput `pulumi:"name"`
	// The network area ID.
	NetworkAreaId pulumi.StringOutput `pulumi:"networkAreaId"`
	// List of Network ranges.
	NetworkRanges NetworkAreaNetworkRangeArrayOutput `pulumi:"networkRanges"`
	// STACKIT organization ID to which the network area is associated.
	OrganizationId pulumi.StringOutput `pulumi:"organizationId"`
	// The amount of projects currently referencing this area.
	ProjectCount pulumi.IntOutput `pulumi:"projectCount"`
	// Classless Inter-Domain Routing (CIDR).
	TransferNetwork pulumi.StringOutput `pulumi:"transferNetwork"`
}

// NewNetworkArea registers a new resource with the given unique name, arguments, and options.
func NewNetworkArea(ctx *pulumi.Context,
	name string, args *NetworkAreaArgs, opts ...pulumi.ResourceOption) (*NetworkArea, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.NetworkRanges == nil {
		return nil, errors.New("invalid value for required argument 'NetworkRanges'")
	}
	if args.OrganizationId == nil {
		return nil, errors.New("invalid value for required argument 'OrganizationId'")
	}
	if args.TransferNetwork == nil {
		return nil, errors.New("invalid value for required argument 'TransferNetwork'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource NetworkArea
	err := ctx.RegisterResource("stackit:index/networkArea:NetworkArea", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkArea gets an existing NetworkArea resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkArea(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkAreaState, opts ...pulumi.ResourceOption) (*NetworkArea, error) {
	var resource NetworkArea
	err := ctx.ReadResource("stackit:index/networkArea:NetworkArea", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkArea resources.
type networkAreaState struct {
	// List of DNS Servers/Nameservers.
	DefaultNameservers []string `pulumi:"defaultNameservers"`
	// The default prefix length for networks in the network area.
	DefaultPrefixLength *int `pulumi:"defaultPrefixLength"`
	// Labels are key-value string pairs which can be attached to a resource container
	Labels map[string]string `pulumi:"labels"`
	// The maximal prefix length for networks in the network area.
	MaxPrefixLength *int `pulumi:"maxPrefixLength"`
	// The minimal prefix length for networks in the network area.
	MinPrefixLength *int `pulumi:"minPrefixLength"`
	// The name of the network area.
	Name *string `pulumi:"name"`
	// The network area ID.
	NetworkAreaId *string `pulumi:"networkAreaId"`
	// List of Network ranges.
	NetworkRanges []NetworkAreaNetworkRange `pulumi:"networkRanges"`
	// STACKIT organization ID to which the network area is associated.
	OrganizationId *string `pulumi:"organizationId"`
	// The amount of projects currently referencing this area.
	ProjectCount *int `pulumi:"projectCount"`
	// Classless Inter-Domain Routing (CIDR).
	TransferNetwork *string `pulumi:"transferNetwork"`
}

type NetworkAreaState struct {
	// List of DNS Servers/Nameservers.
	DefaultNameservers pulumi.StringArrayInput
	// The default prefix length for networks in the network area.
	DefaultPrefixLength pulumi.IntPtrInput
	// Labels are key-value string pairs which can be attached to a resource container
	Labels pulumi.StringMapInput
	// The maximal prefix length for networks in the network area.
	MaxPrefixLength pulumi.IntPtrInput
	// The minimal prefix length for networks in the network area.
	MinPrefixLength pulumi.IntPtrInput
	// The name of the network area.
	Name pulumi.StringPtrInput
	// The network area ID.
	NetworkAreaId pulumi.StringPtrInput
	// List of Network ranges.
	NetworkRanges NetworkAreaNetworkRangeArrayInput
	// STACKIT organization ID to which the network area is associated.
	OrganizationId pulumi.StringPtrInput
	// The amount of projects currently referencing this area.
	ProjectCount pulumi.IntPtrInput
	// Classless Inter-Domain Routing (CIDR).
	TransferNetwork pulumi.StringPtrInput
}

func (NetworkAreaState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkAreaState)(nil)).Elem()
}

type networkAreaArgs struct {
	// List of DNS Servers/Nameservers.
	DefaultNameservers []string `pulumi:"defaultNameservers"`
	// The default prefix length for networks in the network area.
	DefaultPrefixLength *int `pulumi:"defaultPrefixLength"`
	// Labels are key-value string pairs which can be attached to a resource container
	Labels map[string]string `pulumi:"labels"`
	// The maximal prefix length for networks in the network area.
	MaxPrefixLength *int `pulumi:"maxPrefixLength"`
	// The minimal prefix length for networks in the network area.
	MinPrefixLength *int `pulumi:"minPrefixLength"`
	// The name of the network area.
	Name *string `pulumi:"name"`
	// List of Network ranges.
	NetworkRanges []NetworkAreaNetworkRange `pulumi:"networkRanges"`
	// STACKIT organization ID to which the network area is associated.
	OrganizationId string `pulumi:"organizationId"`
	// Classless Inter-Domain Routing (CIDR).
	TransferNetwork string `pulumi:"transferNetwork"`
}

// The set of arguments for constructing a NetworkArea resource.
type NetworkAreaArgs struct {
	// List of DNS Servers/Nameservers.
	DefaultNameservers pulumi.StringArrayInput
	// The default prefix length for networks in the network area.
	DefaultPrefixLength pulumi.IntPtrInput
	// Labels are key-value string pairs which can be attached to a resource container
	Labels pulumi.StringMapInput
	// The maximal prefix length for networks in the network area.
	MaxPrefixLength pulumi.IntPtrInput
	// The minimal prefix length for networks in the network area.
	MinPrefixLength pulumi.IntPtrInput
	// The name of the network area.
	Name pulumi.StringPtrInput
	// List of Network ranges.
	NetworkRanges NetworkAreaNetworkRangeArrayInput
	// STACKIT organization ID to which the network area is associated.
	OrganizationId pulumi.StringInput
	// Classless Inter-Domain Routing (CIDR).
	TransferNetwork pulumi.StringInput
}

func (NetworkAreaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkAreaArgs)(nil)).Elem()
}

type NetworkAreaInput interface {
	pulumi.Input

	ToNetworkAreaOutput() NetworkAreaOutput
	ToNetworkAreaOutputWithContext(ctx context.Context) NetworkAreaOutput
}

func (*NetworkArea) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkArea)(nil)).Elem()
}

func (i *NetworkArea) ToNetworkAreaOutput() NetworkAreaOutput {
	return i.ToNetworkAreaOutputWithContext(context.Background())
}

func (i *NetworkArea) ToNetworkAreaOutputWithContext(ctx context.Context) NetworkAreaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAreaOutput)
}

// NetworkAreaArrayInput is an input type that accepts NetworkAreaArray and NetworkAreaArrayOutput values.
// You can construct a concrete instance of `NetworkAreaArrayInput` via:
//
//	NetworkAreaArray{ NetworkAreaArgs{...} }
type NetworkAreaArrayInput interface {
	pulumi.Input

	ToNetworkAreaArrayOutput() NetworkAreaArrayOutput
	ToNetworkAreaArrayOutputWithContext(context.Context) NetworkAreaArrayOutput
}

type NetworkAreaArray []NetworkAreaInput

func (NetworkAreaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkArea)(nil)).Elem()
}

func (i NetworkAreaArray) ToNetworkAreaArrayOutput() NetworkAreaArrayOutput {
	return i.ToNetworkAreaArrayOutputWithContext(context.Background())
}

func (i NetworkAreaArray) ToNetworkAreaArrayOutputWithContext(ctx context.Context) NetworkAreaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAreaArrayOutput)
}

// NetworkAreaMapInput is an input type that accepts NetworkAreaMap and NetworkAreaMapOutput values.
// You can construct a concrete instance of `NetworkAreaMapInput` via:
//
//	NetworkAreaMap{ "key": NetworkAreaArgs{...} }
type NetworkAreaMapInput interface {
	pulumi.Input

	ToNetworkAreaMapOutput() NetworkAreaMapOutput
	ToNetworkAreaMapOutputWithContext(context.Context) NetworkAreaMapOutput
}

type NetworkAreaMap map[string]NetworkAreaInput

func (NetworkAreaMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkArea)(nil)).Elem()
}

func (i NetworkAreaMap) ToNetworkAreaMapOutput() NetworkAreaMapOutput {
	return i.ToNetworkAreaMapOutputWithContext(context.Background())
}

func (i NetworkAreaMap) ToNetworkAreaMapOutputWithContext(ctx context.Context) NetworkAreaMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAreaMapOutput)
}

type NetworkAreaOutput struct{ *pulumi.OutputState }

func (NetworkAreaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkArea)(nil)).Elem()
}

func (o NetworkAreaOutput) ToNetworkAreaOutput() NetworkAreaOutput {
	return o
}

func (o NetworkAreaOutput) ToNetworkAreaOutputWithContext(ctx context.Context) NetworkAreaOutput {
	return o
}

// List of DNS Servers/Nameservers.
func (o NetworkAreaOutput) DefaultNameservers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkArea) pulumi.StringArrayOutput { return v.DefaultNameservers }).(pulumi.StringArrayOutput)
}

// The default prefix length for networks in the network area.
func (o NetworkAreaOutput) DefaultPrefixLength() pulumi.IntOutput {
	return o.ApplyT(func(v *NetworkArea) pulumi.IntOutput { return v.DefaultPrefixLength }).(pulumi.IntOutput)
}

// Labels are key-value string pairs which can be attached to a resource container
func (o NetworkAreaOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkArea) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// The maximal prefix length for networks in the network area.
func (o NetworkAreaOutput) MaxPrefixLength() pulumi.IntOutput {
	return o.ApplyT(func(v *NetworkArea) pulumi.IntOutput { return v.MaxPrefixLength }).(pulumi.IntOutput)
}

// The minimal prefix length for networks in the network area.
func (o NetworkAreaOutput) MinPrefixLength() pulumi.IntOutput {
	return o.ApplyT(func(v *NetworkArea) pulumi.IntOutput { return v.MinPrefixLength }).(pulumi.IntOutput)
}

// The name of the network area.
func (o NetworkAreaOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkArea) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The network area ID.
func (o NetworkAreaOutput) NetworkAreaId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkArea) pulumi.StringOutput { return v.NetworkAreaId }).(pulumi.StringOutput)
}

// List of Network ranges.
func (o NetworkAreaOutput) NetworkRanges() NetworkAreaNetworkRangeArrayOutput {
	return o.ApplyT(func(v *NetworkArea) NetworkAreaNetworkRangeArrayOutput { return v.NetworkRanges }).(NetworkAreaNetworkRangeArrayOutput)
}

// STACKIT organization ID to which the network area is associated.
func (o NetworkAreaOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkArea) pulumi.StringOutput { return v.OrganizationId }).(pulumi.StringOutput)
}

// The amount of projects currently referencing this area.
func (o NetworkAreaOutput) ProjectCount() pulumi.IntOutput {
	return o.ApplyT(func(v *NetworkArea) pulumi.IntOutput { return v.ProjectCount }).(pulumi.IntOutput)
}

// Classless Inter-Domain Routing (CIDR).
func (o NetworkAreaOutput) TransferNetwork() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkArea) pulumi.StringOutput { return v.TransferNetwork }).(pulumi.StringOutput)
}

type NetworkAreaArrayOutput struct{ *pulumi.OutputState }

func (NetworkAreaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkArea)(nil)).Elem()
}

func (o NetworkAreaArrayOutput) ToNetworkAreaArrayOutput() NetworkAreaArrayOutput {
	return o
}

func (o NetworkAreaArrayOutput) ToNetworkAreaArrayOutputWithContext(ctx context.Context) NetworkAreaArrayOutput {
	return o
}

func (o NetworkAreaArrayOutput) Index(i pulumi.IntInput) NetworkAreaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NetworkArea {
		return vs[0].([]*NetworkArea)[vs[1].(int)]
	}).(NetworkAreaOutput)
}

type NetworkAreaMapOutput struct{ *pulumi.OutputState }

func (NetworkAreaMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkArea)(nil)).Elem()
}

func (o NetworkAreaMapOutput) ToNetworkAreaMapOutput() NetworkAreaMapOutput {
	return o
}

func (o NetworkAreaMapOutput) ToNetworkAreaMapOutputWithContext(ctx context.Context) NetworkAreaMapOutput {
	return o
}

func (o NetworkAreaMapOutput) MapIndex(k pulumi.StringInput) NetworkAreaOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NetworkArea {
		return vs[0].(map[string]*NetworkArea)[vs[1].(string)]
	}).(NetworkAreaOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAreaInput)(nil)).Elem(), &NetworkArea{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAreaArrayInput)(nil)).Elem(), NetworkAreaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAreaMapInput)(nil)).Elem(), NetworkAreaMap{})
	pulumi.RegisterOutputType(NetworkAreaOutput{})
	pulumi.RegisterOutputType(NetworkAreaArrayOutput{})
	pulumi.RegisterOutputType(NetworkAreaMapOutput{})
}
