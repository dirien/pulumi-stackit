// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package stackit

import (
	"context"
	"reflect"

	"github.com/dirien/pulumi-stackit/sdk/go/stackit/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Observability instance data source schema. Must have a `region` specified in the provider configuration.
//
// ## Example Usage
func LookupObservabilityInstance(ctx *pulumi.Context, args *LookupObservabilityInstanceArgs, opts ...pulumi.InvokeOption) (*LookupObservabilityInstanceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupObservabilityInstanceResult
	err := ctx.Invoke("stackit:index/getObservabilityInstance:getObservabilityInstance", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getObservabilityInstance.
type LookupObservabilityInstanceArgs struct {
	// The Observability instance ID.
	InstanceId string `pulumi:"instanceId"`
	// STACKIT project ID to which the instance is associated.
	ProjectId string `pulumi:"projectId"`
}

// A collection of values returned by getObservabilityInstance.
type LookupObservabilityInstanceResult struct {
	// The access control list for this instance. Each entry is an IP address range that is permitted to access, in CIDR notation.
	Acls []string `pulumi:"acls"`
	// Alert configuration for the instance.
	AlertConfig GetObservabilityInstanceAlertConfig `pulumi:"alertConfig"`
	// Specifies Alerting URL.
	AlertingUrl string `pulumi:"alertingUrl"`
	// Specifies Observability instance dashboard URL.
	DashboardUrl string `pulumi:"dashboardUrl"`
	// Specifies an initial Grafana admin password.
	GrafanaInitialAdminPassword string `pulumi:"grafanaInitialAdminPassword"`
	// Specifies an initial Grafana admin username.
	GrafanaInitialAdminUser string `pulumi:"grafanaInitialAdminUser"`
	// If true, anyone can access Grafana dashboards without logging in.
	GrafanaPublicReadAccess bool `pulumi:"grafanaPublicReadAccess"`
	// Specifies Grafana URL.
	GrafanaUrl string `pulumi:"grafanaUrl"`
	Id         string `pulumi:"id"`
	// The Observability instance ID.
	InstanceId string `pulumi:"instanceId"`
	// Specifies if the instance can be updated.
	IsUpdatable     bool   `pulumi:"isUpdatable"`
	JaegerTracesUrl string `pulumi:"jaegerTracesUrl"`
	JaegerUiUrl     string `pulumi:"jaegerUiUrl"`
	// Specifies URL for pushing logs.
	LogsPushUrl string `pulumi:"logsPushUrl"`
	// Specifies Logs URL.
	LogsUrl string `pulumi:"logsUrl"`
	// Specifies URL for pushing metrics.
	MetricsPushUrl string `pulumi:"metricsPushUrl"`
	// Specifies for how many days the raw metrics are kept.
	MetricsRetentionDays int `pulumi:"metricsRetentionDays"`
	// Specifies for how many days the 1h downsampled metrics are kept. must be less than the value of the 5m downsampling retention. Default is set to `0` (disabled).
	MetricsRetentionDays1hDownsampling int `pulumi:"metricsRetentionDays1hDownsampling"`
	// Specifies for how many days the 5m downsampled metrics are kept. must be less than the value of the general retention. Default is set to `0` (disabled).
	MetricsRetentionDays5mDownsampling int `pulumi:"metricsRetentionDays5mDownsampling"`
	// Specifies metrics URL.
	MetricsUrl string `pulumi:"metricsUrl"`
	// The name of the Observability instance.
	Name          string `pulumi:"name"`
	OtlpTracesUrl string `pulumi:"otlpTracesUrl"`
	// Additional parameters.
	Parameters map[string]string `pulumi:"parameters"`
	// The Observability plan ID.
	PlanId string `pulumi:"planId"`
	// Specifies the Observability plan. E.g. `Observability-Monitoring-Medium-EU01`.
	PlanName string `pulumi:"planName"`
	// STACKIT project ID to which the instance is associated.
	ProjectId string `pulumi:"projectId"`
	// Specifies Targets URL.
	TargetsUrl     string `pulumi:"targetsUrl"`
	ZipkinSpansUrl string `pulumi:"zipkinSpansUrl"`
}

func LookupObservabilityInstanceOutput(ctx *pulumi.Context, args LookupObservabilityInstanceOutputArgs, opts ...pulumi.InvokeOption) LookupObservabilityInstanceResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupObservabilityInstanceResultOutput, error) {
			args := v.(LookupObservabilityInstanceArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("stackit:index/getObservabilityInstance:getObservabilityInstance", args, LookupObservabilityInstanceResultOutput{}, options).(LookupObservabilityInstanceResultOutput), nil
		}).(LookupObservabilityInstanceResultOutput)
}

// A collection of arguments for invoking getObservabilityInstance.
type LookupObservabilityInstanceOutputArgs struct {
	// The Observability instance ID.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// STACKIT project ID to which the instance is associated.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
}

func (LookupObservabilityInstanceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupObservabilityInstanceArgs)(nil)).Elem()
}

// A collection of values returned by getObservabilityInstance.
type LookupObservabilityInstanceResultOutput struct{ *pulumi.OutputState }

func (LookupObservabilityInstanceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupObservabilityInstanceResult)(nil)).Elem()
}

func (o LookupObservabilityInstanceResultOutput) ToLookupObservabilityInstanceResultOutput() LookupObservabilityInstanceResultOutput {
	return o
}

func (o LookupObservabilityInstanceResultOutput) ToLookupObservabilityInstanceResultOutputWithContext(ctx context.Context) LookupObservabilityInstanceResultOutput {
	return o
}

// The access control list for this instance. Each entry is an IP address range that is permitted to access, in CIDR notation.
func (o LookupObservabilityInstanceResultOutput) Acls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupObservabilityInstanceResult) []string { return v.Acls }).(pulumi.StringArrayOutput)
}

// Alert configuration for the instance.
func (o LookupObservabilityInstanceResultOutput) AlertConfig() GetObservabilityInstanceAlertConfigOutput {
	return o.ApplyT(func(v LookupObservabilityInstanceResult) GetObservabilityInstanceAlertConfig { return v.AlertConfig }).(GetObservabilityInstanceAlertConfigOutput)
}

// Specifies Alerting URL.
func (o LookupObservabilityInstanceResultOutput) AlertingUrl() pulumi.StringOutput {
	return o.ApplyT(func(v LookupObservabilityInstanceResult) string { return v.AlertingUrl }).(pulumi.StringOutput)
}

// Specifies Observability instance dashboard URL.
func (o LookupObservabilityInstanceResultOutput) DashboardUrl() pulumi.StringOutput {
	return o.ApplyT(func(v LookupObservabilityInstanceResult) string { return v.DashboardUrl }).(pulumi.StringOutput)
}

// Specifies an initial Grafana admin password.
func (o LookupObservabilityInstanceResultOutput) GrafanaInitialAdminPassword() pulumi.StringOutput {
	return o.ApplyT(func(v LookupObservabilityInstanceResult) string { return v.GrafanaInitialAdminPassword }).(pulumi.StringOutput)
}

// Specifies an initial Grafana admin username.
func (o LookupObservabilityInstanceResultOutput) GrafanaInitialAdminUser() pulumi.StringOutput {
	return o.ApplyT(func(v LookupObservabilityInstanceResult) string { return v.GrafanaInitialAdminUser }).(pulumi.StringOutput)
}

// If true, anyone can access Grafana dashboards without logging in.
func (o LookupObservabilityInstanceResultOutput) GrafanaPublicReadAccess() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupObservabilityInstanceResult) bool { return v.GrafanaPublicReadAccess }).(pulumi.BoolOutput)
}

// Specifies Grafana URL.
func (o LookupObservabilityInstanceResultOutput) GrafanaUrl() pulumi.StringOutput {
	return o.ApplyT(func(v LookupObservabilityInstanceResult) string { return v.GrafanaUrl }).(pulumi.StringOutput)
}

func (o LookupObservabilityInstanceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupObservabilityInstanceResult) string { return v.Id }).(pulumi.StringOutput)
}

// The Observability instance ID.
func (o LookupObservabilityInstanceResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupObservabilityInstanceResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

// Specifies if the instance can be updated.
func (o LookupObservabilityInstanceResultOutput) IsUpdatable() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupObservabilityInstanceResult) bool { return v.IsUpdatable }).(pulumi.BoolOutput)
}

func (o LookupObservabilityInstanceResultOutput) JaegerTracesUrl() pulumi.StringOutput {
	return o.ApplyT(func(v LookupObservabilityInstanceResult) string { return v.JaegerTracesUrl }).(pulumi.StringOutput)
}

func (o LookupObservabilityInstanceResultOutput) JaegerUiUrl() pulumi.StringOutput {
	return o.ApplyT(func(v LookupObservabilityInstanceResult) string { return v.JaegerUiUrl }).(pulumi.StringOutput)
}

// Specifies URL for pushing logs.
func (o LookupObservabilityInstanceResultOutput) LogsPushUrl() pulumi.StringOutput {
	return o.ApplyT(func(v LookupObservabilityInstanceResult) string { return v.LogsPushUrl }).(pulumi.StringOutput)
}

// Specifies Logs URL.
func (o LookupObservabilityInstanceResultOutput) LogsUrl() pulumi.StringOutput {
	return o.ApplyT(func(v LookupObservabilityInstanceResult) string { return v.LogsUrl }).(pulumi.StringOutput)
}

// Specifies URL for pushing metrics.
func (o LookupObservabilityInstanceResultOutput) MetricsPushUrl() pulumi.StringOutput {
	return o.ApplyT(func(v LookupObservabilityInstanceResult) string { return v.MetricsPushUrl }).(pulumi.StringOutput)
}

// Specifies for how many days the raw metrics are kept.
func (o LookupObservabilityInstanceResultOutput) MetricsRetentionDays() pulumi.IntOutput {
	return o.ApplyT(func(v LookupObservabilityInstanceResult) int { return v.MetricsRetentionDays }).(pulumi.IntOutput)
}

// Specifies for how many days the 1h downsampled metrics are kept. must be less than the value of the 5m downsampling retention. Default is set to `0` (disabled).
func (o LookupObservabilityInstanceResultOutput) MetricsRetentionDays1hDownsampling() pulumi.IntOutput {
	return o.ApplyT(func(v LookupObservabilityInstanceResult) int { return v.MetricsRetentionDays1hDownsampling }).(pulumi.IntOutput)
}

// Specifies for how many days the 5m downsampled metrics are kept. must be less than the value of the general retention. Default is set to `0` (disabled).
func (o LookupObservabilityInstanceResultOutput) MetricsRetentionDays5mDownsampling() pulumi.IntOutput {
	return o.ApplyT(func(v LookupObservabilityInstanceResult) int { return v.MetricsRetentionDays5mDownsampling }).(pulumi.IntOutput)
}

// Specifies metrics URL.
func (o LookupObservabilityInstanceResultOutput) MetricsUrl() pulumi.StringOutput {
	return o.ApplyT(func(v LookupObservabilityInstanceResult) string { return v.MetricsUrl }).(pulumi.StringOutput)
}

// The name of the Observability instance.
func (o LookupObservabilityInstanceResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupObservabilityInstanceResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupObservabilityInstanceResultOutput) OtlpTracesUrl() pulumi.StringOutput {
	return o.ApplyT(func(v LookupObservabilityInstanceResult) string { return v.OtlpTracesUrl }).(pulumi.StringOutput)
}

// Additional parameters.
func (o LookupObservabilityInstanceResultOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupObservabilityInstanceResult) map[string]string { return v.Parameters }).(pulumi.StringMapOutput)
}

// The Observability plan ID.
func (o LookupObservabilityInstanceResultOutput) PlanId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupObservabilityInstanceResult) string { return v.PlanId }).(pulumi.StringOutput)
}

// Specifies the Observability plan. E.g. `Observability-Monitoring-Medium-EU01`.
func (o LookupObservabilityInstanceResultOutput) PlanName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupObservabilityInstanceResult) string { return v.PlanName }).(pulumi.StringOutput)
}

// STACKIT project ID to which the instance is associated.
func (o LookupObservabilityInstanceResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupObservabilityInstanceResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

// Specifies Targets URL.
func (o LookupObservabilityInstanceResultOutput) TargetsUrl() pulumi.StringOutput {
	return o.ApplyT(func(v LookupObservabilityInstanceResult) string { return v.TargetsUrl }).(pulumi.StringOutput)
}

func (o LookupObservabilityInstanceResultOutput) ZipkinSpansUrl() pulumi.StringOutput {
	return o.ApplyT(func(v LookupObservabilityInstanceResult) string { return v.ZipkinSpansUrl }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupObservabilityInstanceResultOutput{})
}
