// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package stackit

import (
	"context"
	"reflect"

	"errors"
	"github.com/dirien/pulumi-stackit/sdk/go/stackit/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// CDN distribution data source schema.
//
// > This resource is in beta and may be subject to breaking changes in the future. Use with caution. See our guide for how to opt-in to use beta resources.
//
// ## Example Usage
type CdnCustomDomain struct {
	pulumi.CustomResourceState

	// CDN distribution ID
	DistributionId pulumi.StringOutput `pulumi:"distributionId"`
	// List of distribution errors
	Errors pulumi.StringArrayOutput `pulumi:"errors"`
	Name   pulumi.StringOutput      `pulumi:"name"`
	// STACKIT project ID associated with the distribution
	ProjectId pulumi.StringOutput `pulumi:"projectId"`
	// Status of the distribution
	Status pulumi.StringOutput `pulumi:"status"`
}

// NewCdnCustomDomain registers a new resource with the given unique name, arguments, and options.
func NewCdnCustomDomain(ctx *pulumi.Context,
	name string, args *CdnCustomDomainArgs, opts ...pulumi.ResourceOption) (*CdnCustomDomain, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DistributionId == nil {
		return nil, errors.New("invalid value for required argument 'DistributionId'")
	}
	if args.ProjectId == nil {
		return nil, errors.New("invalid value for required argument 'ProjectId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CdnCustomDomain
	err := ctx.RegisterResource("stackit:index/cdnCustomDomain:CdnCustomDomain", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCdnCustomDomain gets an existing CdnCustomDomain resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCdnCustomDomain(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CdnCustomDomainState, opts ...pulumi.ResourceOption) (*CdnCustomDomain, error) {
	var resource CdnCustomDomain
	err := ctx.ReadResource("stackit:index/cdnCustomDomain:CdnCustomDomain", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CdnCustomDomain resources.
type cdnCustomDomainState struct {
	// CDN distribution ID
	DistributionId *string `pulumi:"distributionId"`
	// List of distribution errors
	Errors []string `pulumi:"errors"`
	Name   *string  `pulumi:"name"`
	// STACKIT project ID associated with the distribution
	ProjectId *string `pulumi:"projectId"`
	// Status of the distribution
	Status *string `pulumi:"status"`
}

type CdnCustomDomainState struct {
	// CDN distribution ID
	DistributionId pulumi.StringPtrInput
	// List of distribution errors
	Errors pulumi.StringArrayInput
	Name   pulumi.StringPtrInput
	// STACKIT project ID associated with the distribution
	ProjectId pulumi.StringPtrInput
	// Status of the distribution
	Status pulumi.StringPtrInput
}

func (CdnCustomDomainState) ElementType() reflect.Type {
	return reflect.TypeOf((*cdnCustomDomainState)(nil)).Elem()
}

type cdnCustomDomainArgs struct {
	// CDN distribution ID
	DistributionId string  `pulumi:"distributionId"`
	Name           *string `pulumi:"name"`
	// STACKIT project ID associated with the distribution
	ProjectId string `pulumi:"projectId"`
}

// The set of arguments for constructing a CdnCustomDomain resource.
type CdnCustomDomainArgs struct {
	// CDN distribution ID
	DistributionId pulumi.StringInput
	Name           pulumi.StringPtrInput
	// STACKIT project ID associated with the distribution
	ProjectId pulumi.StringInput
}

func (CdnCustomDomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cdnCustomDomainArgs)(nil)).Elem()
}

type CdnCustomDomainInput interface {
	pulumi.Input

	ToCdnCustomDomainOutput() CdnCustomDomainOutput
	ToCdnCustomDomainOutputWithContext(ctx context.Context) CdnCustomDomainOutput
}

func (*CdnCustomDomain) ElementType() reflect.Type {
	return reflect.TypeOf((**CdnCustomDomain)(nil)).Elem()
}

func (i *CdnCustomDomain) ToCdnCustomDomainOutput() CdnCustomDomainOutput {
	return i.ToCdnCustomDomainOutputWithContext(context.Background())
}

func (i *CdnCustomDomain) ToCdnCustomDomainOutputWithContext(ctx context.Context) CdnCustomDomainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CdnCustomDomainOutput)
}

// CdnCustomDomainArrayInput is an input type that accepts CdnCustomDomainArray and CdnCustomDomainArrayOutput values.
// You can construct a concrete instance of `CdnCustomDomainArrayInput` via:
//
//	CdnCustomDomainArray{ CdnCustomDomainArgs{...} }
type CdnCustomDomainArrayInput interface {
	pulumi.Input

	ToCdnCustomDomainArrayOutput() CdnCustomDomainArrayOutput
	ToCdnCustomDomainArrayOutputWithContext(context.Context) CdnCustomDomainArrayOutput
}

type CdnCustomDomainArray []CdnCustomDomainInput

func (CdnCustomDomainArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CdnCustomDomain)(nil)).Elem()
}

func (i CdnCustomDomainArray) ToCdnCustomDomainArrayOutput() CdnCustomDomainArrayOutput {
	return i.ToCdnCustomDomainArrayOutputWithContext(context.Background())
}

func (i CdnCustomDomainArray) ToCdnCustomDomainArrayOutputWithContext(ctx context.Context) CdnCustomDomainArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CdnCustomDomainArrayOutput)
}

// CdnCustomDomainMapInput is an input type that accepts CdnCustomDomainMap and CdnCustomDomainMapOutput values.
// You can construct a concrete instance of `CdnCustomDomainMapInput` via:
//
//	CdnCustomDomainMap{ "key": CdnCustomDomainArgs{...} }
type CdnCustomDomainMapInput interface {
	pulumi.Input

	ToCdnCustomDomainMapOutput() CdnCustomDomainMapOutput
	ToCdnCustomDomainMapOutputWithContext(context.Context) CdnCustomDomainMapOutput
}

type CdnCustomDomainMap map[string]CdnCustomDomainInput

func (CdnCustomDomainMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CdnCustomDomain)(nil)).Elem()
}

func (i CdnCustomDomainMap) ToCdnCustomDomainMapOutput() CdnCustomDomainMapOutput {
	return i.ToCdnCustomDomainMapOutputWithContext(context.Background())
}

func (i CdnCustomDomainMap) ToCdnCustomDomainMapOutputWithContext(ctx context.Context) CdnCustomDomainMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CdnCustomDomainMapOutput)
}

type CdnCustomDomainOutput struct{ *pulumi.OutputState }

func (CdnCustomDomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CdnCustomDomain)(nil)).Elem()
}

func (o CdnCustomDomainOutput) ToCdnCustomDomainOutput() CdnCustomDomainOutput {
	return o
}

func (o CdnCustomDomainOutput) ToCdnCustomDomainOutputWithContext(ctx context.Context) CdnCustomDomainOutput {
	return o
}

// CDN distribution ID
func (o CdnCustomDomainOutput) DistributionId() pulumi.StringOutput {
	return o.ApplyT(func(v *CdnCustomDomain) pulumi.StringOutput { return v.DistributionId }).(pulumi.StringOutput)
}

// List of distribution errors
func (o CdnCustomDomainOutput) Errors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CdnCustomDomain) pulumi.StringArrayOutput { return v.Errors }).(pulumi.StringArrayOutput)
}

func (o CdnCustomDomainOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CdnCustomDomain) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// STACKIT project ID associated with the distribution
func (o CdnCustomDomainOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *CdnCustomDomain) pulumi.StringOutput { return v.ProjectId }).(pulumi.StringOutput)
}

// Status of the distribution
func (o CdnCustomDomainOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *CdnCustomDomain) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

type CdnCustomDomainArrayOutput struct{ *pulumi.OutputState }

func (CdnCustomDomainArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CdnCustomDomain)(nil)).Elem()
}

func (o CdnCustomDomainArrayOutput) ToCdnCustomDomainArrayOutput() CdnCustomDomainArrayOutput {
	return o
}

func (o CdnCustomDomainArrayOutput) ToCdnCustomDomainArrayOutputWithContext(ctx context.Context) CdnCustomDomainArrayOutput {
	return o
}

func (o CdnCustomDomainArrayOutput) Index(i pulumi.IntInput) CdnCustomDomainOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CdnCustomDomain {
		return vs[0].([]*CdnCustomDomain)[vs[1].(int)]
	}).(CdnCustomDomainOutput)
}

type CdnCustomDomainMapOutput struct{ *pulumi.OutputState }

func (CdnCustomDomainMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CdnCustomDomain)(nil)).Elem()
}

func (o CdnCustomDomainMapOutput) ToCdnCustomDomainMapOutput() CdnCustomDomainMapOutput {
	return o
}

func (o CdnCustomDomainMapOutput) ToCdnCustomDomainMapOutputWithContext(ctx context.Context) CdnCustomDomainMapOutput {
	return o
}

func (o CdnCustomDomainMapOutput) MapIndex(k pulumi.StringInput) CdnCustomDomainOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CdnCustomDomain {
		return vs[0].(map[string]*CdnCustomDomain)[vs[1].(string)]
	}).(CdnCustomDomainOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CdnCustomDomainInput)(nil)).Elem(), &CdnCustomDomain{})
	pulumi.RegisterInputType(reflect.TypeOf((*CdnCustomDomainArrayInput)(nil)).Elem(), CdnCustomDomainArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CdnCustomDomainMapInput)(nil)).Elem(), CdnCustomDomainMap{})
	pulumi.RegisterOutputType(CdnCustomDomainOutput{})
	pulumi.RegisterOutputType(CdnCustomDomainArrayOutput{})
	pulumi.RegisterOutputType(CdnCustomDomainMapOutput{})
}
