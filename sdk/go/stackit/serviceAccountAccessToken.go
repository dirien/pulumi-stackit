// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package stackit

import (
	"context"
	"reflect"

	"errors"
	"github.com/dirien/pulumi-stackit/sdk/go/stackit/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Service account access token schema.
//
// !> This resource is scheduled for deprecation and will be removed on December 17, 2025. To ensure a smooth transition, please refer to our migration guide at https://docs.stackit.cloud/stackit/en/deprecation-plan-for-service-account-access-tokens-and-migration-guide-373293307.html for detailed instructions and recommendations.
//
// ## Example Usage
//
// ### Automatically rotate access tokens
type ServiceAccountAccessToken struct {
	pulumi.CustomResourceState

	// Identifier for the access token linked to the service account.
	AccessTokenId pulumi.StringOutput `pulumi:"accessTokenId"`
	// Indicate whether the token is currently active or inactive
	Active pulumi.BoolOutput `pulumi:"active"`
	// Timestamp indicating when the access token was created.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// STACKIT project ID associated with the service account token.
	ProjectId pulumi.StringOutput `pulumi:"projectId"`
	// A map of arbitrary key/value pairs that will force recreation of the token when they change, enabling token rotation based on external conditions such as a rotating timestamp. Changing this forces a new resource to be created.
	RotateWhenChanged pulumi.StringMapOutput `pulumi:"rotateWhenChanged"`
	// Email address linked to the service account.
	ServiceAccountEmail pulumi.StringOutput `pulumi:"serviceAccountEmail"`
	// JWT access token for API authentication. Prefixed by 'Bearer' and should be stored securely as it is irretrievable once lost.
	Token pulumi.StringOutput `pulumi:"token"`
	// Specifies the token's validity duration in days. If unspecified, defaults to 90 days.
	TtlDays pulumi.IntOutput `pulumi:"ttlDays"`
	// Estimated expiration timestamp of the access token. For precise validity, check the JWT details.
	ValidUntil pulumi.StringOutput `pulumi:"validUntil"`
}

// NewServiceAccountAccessToken registers a new resource with the given unique name, arguments, and options.
func NewServiceAccountAccessToken(ctx *pulumi.Context,
	name string, args *ServiceAccountAccessTokenArgs, opts ...pulumi.ResourceOption) (*ServiceAccountAccessToken, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ProjectId == nil {
		return nil, errors.New("invalid value for required argument 'ProjectId'")
	}
	if args.ServiceAccountEmail == nil {
		return nil, errors.New("invalid value for required argument 'ServiceAccountEmail'")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"token",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ServiceAccountAccessToken
	err := ctx.RegisterResource("stackit:index/serviceAccountAccessToken:ServiceAccountAccessToken", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceAccountAccessToken gets an existing ServiceAccountAccessToken resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceAccountAccessToken(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceAccountAccessTokenState, opts ...pulumi.ResourceOption) (*ServiceAccountAccessToken, error) {
	var resource ServiceAccountAccessToken
	err := ctx.ReadResource("stackit:index/serviceAccountAccessToken:ServiceAccountAccessToken", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceAccountAccessToken resources.
type serviceAccountAccessTokenState struct {
	// Identifier for the access token linked to the service account.
	AccessTokenId *string `pulumi:"accessTokenId"`
	// Indicate whether the token is currently active or inactive
	Active *bool `pulumi:"active"`
	// Timestamp indicating when the access token was created.
	CreatedAt *string `pulumi:"createdAt"`
	// STACKIT project ID associated with the service account token.
	ProjectId *string `pulumi:"projectId"`
	// A map of arbitrary key/value pairs that will force recreation of the token when they change, enabling token rotation based on external conditions such as a rotating timestamp. Changing this forces a new resource to be created.
	RotateWhenChanged map[string]string `pulumi:"rotateWhenChanged"`
	// Email address linked to the service account.
	ServiceAccountEmail *string `pulumi:"serviceAccountEmail"`
	// JWT access token for API authentication. Prefixed by 'Bearer' and should be stored securely as it is irretrievable once lost.
	Token *string `pulumi:"token"`
	// Specifies the token's validity duration in days. If unspecified, defaults to 90 days.
	TtlDays *int `pulumi:"ttlDays"`
	// Estimated expiration timestamp of the access token. For precise validity, check the JWT details.
	ValidUntil *string `pulumi:"validUntil"`
}

type ServiceAccountAccessTokenState struct {
	// Identifier for the access token linked to the service account.
	AccessTokenId pulumi.StringPtrInput
	// Indicate whether the token is currently active or inactive
	Active pulumi.BoolPtrInput
	// Timestamp indicating when the access token was created.
	CreatedAt pulumi.StringPtrInput
	// STACKIT project ID associated with the service account token.
	ProjectId pulumi.StringPtrInput
	// A map of arbitrary key/value pairs that will force recreation of the token when they change, enabling token rotation based on external conditions such as a rotating timestamp. Changing this forces a new resource to be created.
	RotateWhenChanged pulumi.StringMapInput
	// Email address linked to the service account.
	ServiceAccountEmail pulumi.StringPtrInput
	// JWT access token for API authentication. Prefixed by 'Bearer' and should be stored securely as it is irretrievable once lost.
	Token pulumi.StringPtrInput
	// Specifies the token's validity duration in days. If unspecified, defaults to 90 days.
	TtlDays pulumi.IntPtrInput
	// Estimated expiration timestamp of the access token. For precise validity, check the JWT details.
	ValidUntil pulumi.StringPtrInput
}

func (ServiceAccountAccessTokenState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceAccountAccessTokenState)(nil)).Elem()
}

type serviceAccountAccessTokenArgs struct {
	// STACKIT project ID associated with the service account token.
	ProjectId string `pulumi:"projectId"`
	// A map of arbitrary key/value pairs that will force recreation of the token when they change, enabling token rotation based on external conditions such as a rotating timestamp. Changing this forces a new resource to be created.
	RotateWhenChanged map[string]string `pulumi:"rotateWhenChanged"`
	// Email address linked to the service account.
	ServiceAccountEmail string `pulumi:"serviceAccountEmail"`
	// Specifies the token's validity duration in days. If unspecified, defaults to 90 days.
	TtlDays *int `pulumi:"ttlDays"`
}

// The set of arguments for constructing a ServiceAccountAccessToken resource.
type ServiceAccountAccessTokenArgs struct {
	// STACKIT project ID associated with the service account token.
	ProjectId pulumi.StringInput
	// A map of arbitrary key/value pairs that will force recreation of the token when they change, enabling token rotation based on external conditions such as a rotating timestamp. Changing this forces a new resource to be created.
	RotateWhenChanged pulumi.StringMapInput
	// Email address linked to the service account.
	ServiceAccountEmail pulumi.StringInput
	// Specifies the token's validity duration in days. If unspecified, defaults to 90 days.
	TtlDays pulumi.IntPtrInput
}

func (ServiceAccountAccessTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceAccountAccessTokenArgs)(nil)).Elem()
}

type ServiceAccountAccessTokenInput interface {
	pulumi.Input

	ToServiceAccountAccessTokenOutput() ServiceAccountAccessTokenOutput
	ToServiceAccountAccessTokenOutputWithContext(ctx context.Context) ServiceAccountAccessTokenOutput
}

func (*ServiceAccountAccessToken) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceAccountAccessToken)(nil)).Elem()
}

func (i *ServiceAccountAccessToken) ToServiceAccountAccessTokenOutput() ServiceAccountAccessTokenOutput {
	return i.ToServiceAccountAccessTokenOutputWithContext(context.Background())
}

func (i *ServiceAccountAccessToken) ToServiceAccountAccessTokenOutputWithContext(ctx context.Context) ServiceAccountAccessTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAccountAccessTokenOutput)
}

// ServiceAccountAccessTokenArrayInput is an input type that accepts ServiceAccountAccessTokenArray and ServiceAccountAccessTokenArrayOutput values.
// You can construct a concrete instance of `ServiceAccountAccessTokenArrayInput` via:
//
//	ServiceAccountAccessTokenArray{ ServiceAccountAccessTokenArgs{...} }
type ServiceAccountAccessTokenArrayInput interface {
	pulumi.Input

	ToServiceAccountAccessTokenArrayOutput() ServiceAccountAccessTokenArrayOutput
	ToServiceAccountAccessTokenArrayOutputWithContext(context.Context) ServiceAccountAccessTokenArrayOutput
}

type ServiceAccountAccessTokenArray []ServiceAccountAccessTokenInput

func (ServiceAccountAccessTokenArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceAccountAccessToken)(nil)).Elem()
}

func (i ServiceAccountAccessTokenArray) ToServiceAccountAccessTokenArrayOutput() ServiceAccountAccessTokenArrayOutput {
	return i.ToServiceAccountAccessTokenArrayOutputWithContext(context.Background())
}

func (i ServiceAccountAccessTokenArray) ToServiceAccountAccessTokenArrayOutputWithContext(ctx context.Context) ServiceAccountAccessTokenArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAccountAccessTokenArrayOutput)
}

// ServiceAccountAccessTokenMapInput is an input type that accepts ServiceAccountAccessTokenMap and ServiceAccountAccessTokenMapOutput values.
// You can construct a concrete instance of `ServiceAccountAccessTokenMapInput` via:
//
//	ServiceAccountAccessTokenMap{ "key": ServiceAccountAccessTokenArgs{...} }
type ServiceAccountAccessTokenMapInput interface {
	pulumi.Input

	ToServiceAccountAccessTokenMapOutput() ServiceAccountAccessTokenMapOutput
	ToServiceAccountAccessTokenMapOutputWithContext(context.Context) ServiceAccountAccessTokenMapOutput
}

type ServiceAccountAccessTokenMap map[string]ServiceAccountAccessTokenInput

func (ServiceAccountAccessTokenMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceAccountAccessToken)(nil)).Elem()
}

func (i ServiceAccountAccessTokenMap) ToServiceAccountAccessTokenMapOutput() ServiceAccountAccessTokenMapOutput {
	return i.ToServiceAccountAccessTokenMapOutputWithContext(context.Background())
}

func (i ServiceAccountAccessTokenMap) ToServiceAccountAccessTokenMapOutputWithContext(ctx context.Context) ServiceAccountAccessTokenMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAccountAccessTokenMapOutput)
}

type ServiceAccountAccessTokenOutput struct{ *pulumi.OutputState }

func (ServiceAccountAccessTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceAccountAccessToken)(nil)).Elem()
}

func (o ServiceAccountAccessTokenOutput) ToServiceAccountAccessTokenOutput() ServiceAccountAccessTokenOutput {
	return o
}

func (o ServiceAccountAccessTokenOutput) ToServiceAccountAccessTokenOutputWithContext(ctx context.Context) ServiceAccountAccessTokenOutput {
	return o
}

// Identifier for the access token linked to the service account.
func (o ServiceAccountAccessTokenOutput) AccessTokenId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceAccountAccessToken) pulumi.StringOutput { return v.AccessTokenId }).(pulumi.StringOutput)
}

// Indicate whether the token is currently active or inactive
func (o ServiceAccountAccessTokenOutput) Active() pulumi.BoolOutput {
	return o.ApplyT(func(v *ServiceAccountAccessToken) pulumi.BoolOutput { return v.Active }).(pulumi.BoolOutput)
}

// Timestamp indicating when the access token was created.
func (o ServiceAccountAccessTokenOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceAccountAccessToken) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// STACKIT project ID associated with the service account token.
func (o ServiceAccountAccessTokenOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceAccountAccessToken) pulumi.StringOutput { return v.ProjectId }).(pulumi.StringOutput)
}

// A map of arbitrary key/value pairs that will force recreation of the token when they change, enabling token rotation based on external conditions such as a rotating timestamp. Changing this forces a new resource to be created.
func (o ServiceAccountAccessTokenOutput) RotateWhenChanged() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ServiceAccountAccessToken) pulumi.StringMapOutput { return v.RotateWhenChanged }).(pulumi.StringMapOutput)
}

// Email address linked to the service account.
func (o ServiceAccountAccessTokenOutput) ServiceAccountEmail() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceAccountAccessToken) pulumi.StringOutput { return v.ServiceAccountEmail }).(pulumi.StringOutput)
}

// JWT access token for API authentication. Prefixed by 'Bearer' and should be stored securely as it is irretrievable once lost.
func (o ServiceAccountAccessTokenOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceAccountAccessToken) pulumi.StringOutput { return v.Token }).(pulumi.StringOutput)
}

// Specifies the token's validity duration in days. If unspecified, defaults to 90 days.
func (o ServiceAccountAccessTokenOutput) TtlDays() pulumi.IntOutput {
	return o.ApplyT(func(v *ServiceAccountAccessToken) pulumi.IntOutput { return v.TtlDays }).(pulumi.IntOutput)
}

// Estimated expiration timestamp of the access token. For precise validity, check the JWT details.
func (o ServiceAccountAccessTokenOutput) ValidUntil() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceAccountAccessToken) pulumi.StringOutput { return v.ValidUntil }).(pulumi.StringOutput)
}

type ServiceAccountAccessTokenArrayOutput struct{ *pulumi.OutputState }

func (ServiceAccountAccessTokenArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceAccountAccessToken)(nil)).Elem()
}

func (o ServiceAccountAccessTokenArrayOutput) ToServiceAccountAccessTokenArrayOutput() ServiceAccountAccessTokenArrayOutput {
	return o
}

func (o ServiceAccountAccessTokenArrayOutput) ToServiceAccountAccessTokenArrayOutputWithContext(ctx context.Context) ServiceAccountAccessTokenArrayOutput {
	return o
}

func (o ServiceAccountAccessTokenArrayOutput) Index(i pulumi.IntInput) ServiceAccountAccessTokenOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ServiceAccountAccessToken {
		return vs[0].([]*ServiceAccountAccessToken)[vs[1].(int)]
	}).(ServiceAccountAccessTokenOutput)
}

type ServiceAccountAccessTokenMapOutput struct{ *pulumi.OutputState }

func (ServiceAccountAccessTokenMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceAccountAccessToken)(nil)).Elem()
}

func (o ServiceAccountAccessTokenMapOutput) ToServiceAccountAccessTokenMapOutput() ServiceAccountAccessTokenMapOutput {
	return o
}

func (o ServiceAccountAccessTokenMapOutput) ToServiceAccountAccessTokenMapOutputWithContext(ctx context.Context) ServiceAccountAccessTokenMapOutput {
	return o
}

func (o ServiceAccountAccessTokenMapOutput) MapIndex(k pulumi.StringInput) ServiceAccountAccessTokenOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ServiceAccountAccessToken {
		return vs[0].(map[string]*ServiceAccountAccessToken)[vs[1].(string)]
	}).(ServiceAccountAccessTokenOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceAccountAccessTokenInput)(nil)).Elem(), &ServiceAccountAccessToken{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceAccountAccessTokenArrayInput)(nil)).Elem(), ServiceAccountAccessTokenArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceAccountAccessTokenMapInput)(nil)).Elem(), ServiceAccountAccessTokenMap{})
	pulumi.RegisterOutputType(ServiceAccountAccessTokenOutput{})
	pulumi.RegisterOutputType(ServiceAccountAccessTokenArrayOutput{})
	pulumi.RegisterOutputType(ServiceAccountAccessTokenMapOutput{})
}
