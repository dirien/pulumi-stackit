// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package stackit

import (
	"context"
	"reflect"

	"errors"
	"github.com/dirien/pulumi-stackit/sdk/go/stackit/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Service account attachment resource schema. Attaches a service account to a server. Must have a `region` specified in the provider configuration.
//
// ## Example Usage
type ServerServiceAccountAttach struct {
	pulumi.CustomResourceState

	// STACKIT project ID to which the service account attachment is associated.
	ProjectId pulumi.StringOutput `pulumi:"projectId"`
	// The server ID.
	ServerId pulumi.StringOutput `pulumi:"serverId"`
	// The service account email.
	ServiceAccountEmail pulumi.StringOutput `pulumi:"serviceAccountEmail"`
}

// NewServerServiceAccountAttach registers a new resource with the given unique name, arguments, and options.
func NewServerServiceAccountAttach(ctx *pulumi.Context,
	name string, args *ServerServiceAccountAttachArgs, opts ...pulumi.ResourceOption) (*ServerServiceAccountAttach, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ProjectId == nil {
		return nil, errors.New("invalid value for required argument 'ProjectId'")
	}
	if args.ServerId == nil {
		return nil, errors.New("invalid value for required argument 'ServerId'")
	}
	if args.ServiceAccountEmail == nil {
		return nil, errors.New("invalid value for required argument 'ServiceAccountEmail'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ServerServiceAccountAttach
	err := ctx.RegisterResource("stackit:index/serverServiceAccountAttach:ServerServiceAccountAttach", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServerServiceAccountAttach gets an existing ServerServiceAccountAttach resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServerServiceAccountAttach(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServerServiceAccountAttachState, opts ...pulumi.ResourceOption) (*ServerServiceAccountAttach, error) {
	var resource ServerServiceAccountAttach
	err := ctx.ReadResource("stackit:index/serverServiceAccountAttach:ServerServiceAccountAttach", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServerServiceAccountAttach resources.
type serverServiceAccountAttachState struct {
	// STACKIT project ID to which the service account attachment is associated.
	ProjectId *string `pulumi:"projectId"`
	// The server ID.
	ServerId *string `pulumi:"serverId"`
	// The service account email.
	ServiceAccountEmail *string `pulumi:"serviceAccountEmail"`
}

type ServerServiceAccountAttachState struct {
	// STACKIT project ID to which the service account attachment is associated.
	ProjectId pulumi.StringPtrInput
	// The server ID.
	ServerId pulumi.StringPtrInput
	// The service account email.
	ServiceAccountEmail pulumi.StringPtrInput
}

func (ServerServiceAccountAttachState) ElementType() reflect.Type {
	return reflect.TypeOf((*serverServiceAccountAttachState)(nil)).Elem()
}

type serverServiceAccountAttachArgs struct {
	// STACKIT project ID to which the service account attachment is associated.
	ProjectId string `pulumi:"projectId"`
	// The server ID.
	ServerId string `pulumi:"serverId"`
	// The service account email.
	ServiceAccountEmail string `pulumi:"serviceAccountEmail"`
}

// The set of arguments for constructing a ServerServiceAccountAttach resource.
type ServerServiceAccountAttachArgs struct {
	// STACKIT project ID to which the service account attachment is associated.
	ProjectId pulumi.StringInput
	// The server ID.
	ServerId pulumi.StringInput
	// The service account email.
	ServiceAccountEmail pulumi.StringInput
}

func (ServerServiceAccountAttachArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serverServiceAccountAttachArgs)(nil)).Elem()
}

type ServerServiceAccountAttachInput interface {
	pulumi.Input

	ToServerServiceAccountAttachOutput() ServerServiceAccountAttachOutput
	ToServerServiceAccountAttachOutputWithContext(ctx context.Context) ServerServiceAccountAttachOutput
}

func (*ServerServiceAccountAttach) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerServiceAccountAttach)(nil)).Elem()
}

func (i *ServerServiceAccountAttach) ToServerServiceAccountAttachOutput() ServerServiceAccountAttachOutput {
	return i.ToServerServiceAccountAttachOutputWithContext(context.Background())
}

func (i *ServerServiceAccountAttach) ToServerServiceAccountAttachOutputWithContext(ctx context.Context) ServerServiceAccountAttachOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerServiceAccountAttachOutput)
}

// ServerServiceAccountAttachArrayInput is an input type that accepts ServerServiceAccountAttachArray and ServerServiceAccountAttachArrayOutput values.
// You can construct a concrete instance of `ServerServiceAccountAttachArrayInput` via:
//
//	ServerServiceAccountAttachArray{ ServerServiceAccountAttachArgs{...} }
type ServerServiceAccountAttachArrayInput interface {
	pulumi.Input

	ToServerServiceAccountAttachArrayOutput() ServerServiceAccountAttachArrayOutput
	ToServerServiceAccountAttachArrayOutputWithContext(context.Context) ServerServiceAccountAttachArrayOutput
}

type ServerServiceAccountAttachArray []ServerServiceAccountAttachInput

func (ServerServiceAccountAttachArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServerServiceAccountAttach)(nil)).Elem()
}

func (i ServerServiceAccountAttachArray) ToServerServiceAccountAttachArrayOutput() ServerServiceAccountAttachArrayOutput {
	return i.ToServerServiceAccountAttachArrayOutputWithContext(context.Background())
}

func (i ServerServiceAccountAttachArray) ToServerServiceAccountAttachArrayOutputWithContext(ctx context.Context) ServerServiceAccountAttachArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerServiceAccountAttachArrayOutput)
}

// ServerServiceAccountAttachMapInput is an input type that accepts ServerServiceAccountAttachMap and ServerServiceAccountAttachMapOutput values.
// You can construct a concrete instance of `ServerServiceAccountAttachMapInput` via:
//
//	ServerServiceAccountAttachMap{ "key": ServerServiceAccountAttachArgs{...} }
type ServerServiceAccountAttachMapInput interface {
	pulumi.Input

	ToServerServiceAccountAttachMapOutput() ServerServiceAccountAttachMapOutput
	ToServerServiceAccountAttachMapOutputWithContext(context.Context) ServerServiceAccountAttachMapOutput
}

type ServerServiceAccountAttachMap map[string]ServerServiceAccountAttachInput

func (ServerServiceAccountAttachMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServerServiceAccountAttach)(nil)).Elem()
}

func (i ServerServiceAccountAttachMap) ToServerServiceAccountAttachMapOutput() ServerServiceAccountAttachMapOutput {
	return i.ToServerServiceAccountAttachMapOutputWithContext(context.Background())
}

func (i ServerServiceAccountAttachMap) ToServerServiceAccountAttachMapOutputWithContext(ctx context.Context) ServerServiceAccountAttachMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerServiceAccountAttachMapOutput)
}

type ServerServiceAccountAttachOutput struct{ *pulumi.OutputState }

func (ServerServiceAccountAttachOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerServiceAccountAttach)(nil)).Elem()
}

func (o ServerServiceAccountAttachOutput) ToServerServiceAccountAttachOutput() ServerServiceAccountAttachOutput {
	return o
}

func (o ServerServiceAccountAttachOutput) ToServerServiceAccountAttachOutputWithContext(ctx context.Context) ServerServiceAccountAttachOutput {
	return o
}

// STACKIT project ID to which the service account attachment is associated.
func (o ServerServiceAccountAttachOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServerServiceAccountAttach) pulumi.StringOutput { return v.ProjectId }).(pulumi.StringOutput)
}

// The server ID.
func (o ServerServiceAccountAttachOutput) ServerId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServerServiceAccountAttach) pulumi.StringOutput { return v.ServerId }).(pulumi.StringOutput)
}

// The service account email.
func (o ServerServiceAccountAttachOutput) ServiceAccountEmail() pulumi.StringOutput {
	return o.ApplyT(func(v *ServerServiceAccountAttach) pulumi.StringOutput { return v.ServiceAccountEmail }).(pulumi.StringOutput)
}

type ServerServiceAccountAttachArrayOutput struct{ *pulumi.OutputState }

func (ServerServiceAccountAttachArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServerServiceAccountAttach)(nil)).Elem()
}

func (o ServerServiceAccountAttachArrayOutput) ToServerServiceAccountAttachArrayOutput() ServerServiceAccountAttachArrayOutput {
	return o
}

func (o ServerServiceAccountAttachArrayOutput) ToServerServiceAccountAttachArrayOutputWithContext(ctx context.Context) ServerServiceAccountAttachArrayOutput {
	return o
}

func (o ServerServiceAccountAttachArrayOutput) Index(i pulumi.IntInput) ServerServiceAccountAttachOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ServerServiceAccountAttach {
		return vs[0].([]*ServerServiceAccountAttach)[vs[1].(int)]
	}).(ServerServiceAccountAttachOutput)
}

type ServerServiceAccountAttachMapOutput struct{ *pulumi.OutputState }

func (ServerServiceAccountAttachMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServerServiceAccountAttach)(nil)).Elem()
}

func (o ServerServiceAccountAttachMapOutput) ToServerServiceAccountAttachMapOutput() ServerServiceAccountAttachMapOutput {
	return o
}

func (o ServerServiceAccountAttachMapOutput) ToServerServiceAccountAttachMapOutputWithContext(ctx context.Context) ServerServiceAccountAttachMapOutput {
	return o
}

func (o ServerServiceAccountAttachMapOutput) MapIndex(k pulumi.StringInput) ServerServiceAccountAttachOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ServerServiceAccountAttach {
		return vs[0].(map[string]*ServerServiceAccountAttach)[vs[1].(string)]
	}).(ServerServiceAccountAttachOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServerServiceAccountAttachInput)(nil)).Elem(), &ServerServiceAccountAttach{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerServiceAccountAttachArrayInput)(nil)).Elem(), ServerServiceAccountAttachArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerServiceAccountAttachMapInput)(nil)).Elem(), ServerServiceAccountAttachMap{})
	pulumi.RegisterOutputType(ServerServiceAccountAttachOutput{})
	pulumi.RegisterOutputType(ServerServiceAccountAttachArrayOutput{})
	pulumi.RegisterOutputType(ServerServiceAccountAttachMapOutput{})
}
