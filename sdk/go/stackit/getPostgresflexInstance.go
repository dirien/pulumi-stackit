// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package stackit

import (
	"context"
	"reflect"

	"github.com/dirien/pulumi-stackit/sdk/go/stackit/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Postgres Flex instance data source schema. Must have a `region` specified in the provider configuration.
//
// ## Example Usage
func LookupPostgresflexInstance(ctx *pulumi.Context, args *LookupPostgresflexInstanceArgs, opts ...pulumi.InvokeOption) (*LookupPostgresflexInstanceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupPostgresflexInstanceResult
	err := ctx.Invoke("stackit:index/getPostgresflexInstance:getPostgresflexInstance", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPostgresflexInstance.
type LookupPostgresflexInstanceArgs struct {
	// ID of the PostgresFlex instance.
	InstanceId string `pulumi:"instanceId"`
	// STACKIT project ID to which the instance is associated.
	ProjectId string `pulumi:"projectId"`
	// The resource region. If not defined, the provider region is used.
	Region *string `pulumi:"region"`
}

// A collection of values returned by getPostgresflexInstance.
type LookupPostgresflexInstanceResult struct {
	// The Access Control List (ACL) for the PostgresFlex instance.
	Acls           []string                      `pulumi:"acls"`
	BackupSchedule string                        `pulumi:"backupSchedule"`
	Flavor         GetPostgresflexInstanceFlavor `pulumi:"flavor"`
	Id             string                        `pulumi:"id"`
	// ID of the PostgresFlex instance.
	InstanceId string `pulumi:"instanceId"`
	// Instance name.
	Name string `pulumi:"name"`
	// STACKIT project ID to which the instance is associated.
	ProjectId string `pulumi:"projectId"`
	// The resource region. If not defined, the provider region is used.
	Region   *string                        `pulumi:"region"`
	Replicas int                            `pulumi:"replicas"`
	Storage  GetPostgresflexInstanceStorage `pulumi:"storage"`
	Version  string                         `pulumi:"version"`
}

func LookupPostgresflexInstanceOutput(ctx *pulumi.Context, args LookupPostgresflexInstanceOutputArgs, opts ...pulumi.InvokeOption) LookupPostgresflexInstanceResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupPostgresflexInstanceResultOutput, error) {
			args := v.(LookupPostgresflexInstanceArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("stackit:index/getPostgresflexInstance:getPostgresflexInstance", args, LookupPostgresflexInstanceResultOutput{}, options).(LookupPostgresflexInstanceResultOutput), nil
		}).(LookupPostgresflexInstanceResultOutput)
}

// A collection of arguments for invoking getPostgresflexInstance.
type LookupPostgresflexInstanceOutputArgs struct {
	// ID of the PostgresFlex instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// STACKIT project ID to which the instance is associated.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// The resource region. If not defined, the provider region is used.
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (LookupPostgresflexInstanceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPostgresflexInstanceArgs)(nil)).Elem()
}

// A collection of values returned by getPostgresflexInstance.
type LookupPostgresflexInstanceResultOutput struct{ *pulumi.OutputState }

func (LookupPostgresflexInstanceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPostgresflexInstanceResult)(nil)).Elem()
}

func (o LookupPostgresflexInstanceResultOutput) ToLookupPostgresflexInstanceResultOutput() LookupPostgresflexInstanceResultOutput {
	return o
}

func (o LookupPostgresflexInstanceResultOutput) ToLookupPostgresflexInstanceResultOutputWithContext(ctx context.Context) LookupPostgresflexInstanceResultOutput {
	return o
}

// The Access Control List (ACL) for the PostgresFlex instance.
func (o LookupPostgresflexInstanceResultOutput) Acls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupPostgresflexInstanceResult) []string { return v.Acls }).(pulumi.StringArrayOutput)
}

func (o LookupPostgresflexInstanceResultOutput) BackupSchedule() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPostgresflexInstanceResult) string { return v.BackupSchedule }).(pulumi.StringOutput)
}

func (o LookupPostgresflexInstanceResultOutput) Flavor() GetPostgresflexInstanceFlavorOutput {
	return o.ApplyT(func(v LookupPostgresflexInstanceResult) GetPostgresflexInstanceFlavor { return v.Flavor }).(GetPostgresflexInstanceFlavorOutput)
}

func (o LookupPostgresflexInstanceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPostgresflexInstanceResult) string { return v.Id }).(pulumi.StringOutput)
}

// ID of the PostgresFlex instance.
func (o LookupPostgresflexInstanceResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPostgresflexInstanceResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

// Instance name.
func (o LookupPostgresflexInstanceResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPostgresflexInstanceResult) string { return v.Name }).(pulumi.StringOutput)
}

// STACKIT project ID to which the instance is associated.
func (o LookupPostgresflexInstanceResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPostgresflexInstanceResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

// The resource region. If not defined, the provider region is used.
func (o LookupPostgresflexInstanceResultOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPostgresflexInstanceResult) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o LookupPostgresflexInstanceResultOutput) Replicas() pulumi.IntOutput {
	return o.ApplyT(func(v LookupPostgresflexInstanceResult) int { return v.Replicas }).(pulumi.IntOutput)
}

func (o LookupPostgresflexInstanceResultOutput) Storage() GetPostgresflexInstanceStorageOutput {
	return o.ApplyT(func(v LookupPostgresflexInstanceResult) GetPostgresflexInstanceStorage { return v.Storage }).(GetPostgresflexInstanceStorageOutput)
}

func (o LookupPostgresflexInstanceResultOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPostgresflexInstanceResult) string { return v.Version }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPostgresflexInstanceResultOutput{})
}
