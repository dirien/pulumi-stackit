// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package stackit

import (
	"context"
	"reflect"

	"github.com/dirien/pulumi-stackit/sdk/go/stackit/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ObjectStorage credential data source schema. Must have a `region` specified in the provider configuration.
//
// ## Example Usage
func LookupObjectstorageCredential(ctx *pulumi.Context, args *LookupObjectstorageCredentialArgs, opts ...pulumi.InvokeOption) (*LookupObjectstorageCredentialResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupObjectstorageCredentialResult
	err := ctx.Invoke("stackit:index/getObjectstorageCredential:getObjectstorageCredential", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getObjectstorageCredential.
type LookupObjectstorageCredentialArgs struct {
	// The credential ID.
	CredentialId string `pulumi:"credentialId"`
	// The credential group ID.
	CredentialsGroupId string `pulumi:"credentialsGroupId"`
	// STACKIT Project ID to which the credential group is associated.
	ProjectId string `pulumi:"projectId"`
	// The resource region. If not defined, the provider region is used.
	Region *string `pulumi:"region"`
}

// A collection of values returned by getObjectstorageCredential.
type LookupObjectstorageCredentialResult struct {
	// The credential ID.
	CredentialId string `pulumi:"credentialId"`
	// The credential group ID.
	CredentialsGroupId  string `pulumi:"credentialsGroupId"`
	ExpirationTimestamp string `pulumi:"expirationTimestamp"`
	Id                  string `pulumi:"id"`
	Name                string `pulumi:"name"`
	// STACKIT Project ID to which the credential group is associated.
	ProjectId string `pulumi:"projectId"`
	// The resource region. If not defined, the provider region is used.
	Region *string `pulumi:"region"`
}

func LookupObjectstorageCredentialOutput(ctx *pulumi.Context, args LookupObjectstorageCredentialOutputArgs, opts ...pulumi.InvokeOption) LookupObjectstorageCredentialResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupObjectstorageCredentialResultOutput, error) {
			args := v.(LookupObjectstorageCredentialArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("stackit:index/getObjectstorageCredential:getObjectstorageCredential", args, LookupObjectstorageCredentialResultOutput{}, options).(LookupObjectstorageCredentialResultOutput), nil
		}).(LookupObjectstorageCredentialResultOutput)
}

// A collection of arguments for invoking getObjectstorageCredential.
type LookupObjectstorageCredentialOutputArgs struct {
	// The credential ID.
	CredentialId pulumi.StringInput `pulumi:"credentialId"`
	// The credential group ID.
	CredentialsGroupId pulumi.StringInput `pulumi:"credentialsGroupId"`
	// STACKIT Project ID to which the credential group is associated.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// The resource region. If not defined, the provider region is used.
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (LookupObjectstorageCredentialOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupObjectstorageCredentialArgs)(nil)).Elem()
}

// A collection of values returned by getObjectstorageCredential.
type LookupObjectstorageCredentialResultOutput struct{ *pulumi.OutputState }

func (LookupObjectstorageCredentialResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupObjectstorageCredentialResult)(nil)).Elem()
}

func (o LookupObjectstorageCredentialResultOutput) ToLookupObjectstorageCredentialResultOutput() LookupObjectstorageCredentialResultOutput {
	return o
}

func (o LookupObjectstorageCredentialResultOutput) ToLookupObjectstorageCredentialResultOutputWithContext(ctx context.Context) LookupObjectstorageCredentialResultOutput {
	return o
}

// The credential ID.
func (o LookupObjectstorageCredentialResultOutput) CredentialId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupObjectstorageCredentialResult) string { return v.CredentialId }).(pulumi.StringOutput)
}

// The credential group ID.
func (o LookupObjectstorageCredentialResultOutput) CredentialsGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupObjectstorageCredentialResult) string { return v.CredentialsGroupId }).(pulumi.StringOutput)
}

func (o LookupObjectstorageCredentialResultOutput) ExpirationTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupObjectstorageCredentialResult) string { return v.ExpirationTimestamp }).(pulumi.StringOutput)
}

func (o LookupObjectstorageCredentialResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupObjectstorageCredentialResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupObjectstorageCredentialResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupObjectstorageCredentialResult) string { return v.Name }).(pulumi.StringOutput)
}

// STACKIT Project ID to which the credential group is associated.
func (o LookupObjectstorageCredentialResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupObjectstorageCredentialResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

// The resource region. If not defined, the provider region is used.
func (o LookupObjectstorageCredentialResultOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupObjectstorageCredentialResult) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupObjectstorageCredentialResultOutput{})
}
