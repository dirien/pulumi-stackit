// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package stackit

import (
	"context"
	"reflect"

	"github.com/dirien/pulumi-stackit/sdk/go/stackit/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Routing table route datasource schema. Must have a `region` specified in the provider configuration.
//
// > This datasource is part of the routing-tables experiment and is likely going to undergo significant changes or be removed in the future. Use it at your own discretion.
//
// ## Example Usage
func LookupRoutingTableRoute(ctx *pulumi.Context, args *LookupRoutingTableRouteArgs, opts ...pulumi.InvokeOption) (*LookupRoutingTableRouteResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupRoutingTableRouteResult
	err := ctx.Invoke("stackit:index/getRoutingTableRoute:getRoutingTableRoute", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRoutingTableRoute.
type LookupRoutingTableRouteArgs struct {
	// The network area ID to which the routing table is associated.
	NetworkAreaId string `pulumi:"networkAreaId"`
	// STACKIT organization ID to which the routing table is associated.
	OrganizationId string `pulumi:"organizationId"`
	// The resource region. If not defined, the provider region is used.
	Region *string `pulumi:"region"`
	// Route ID.
	RouteId string `pulumi:"routeId"`
	// The routing tables ID.
	RoutingTableId string `pulumi:"routingTableId"`
}

// A collection of values returned by getRoutingTableRoute.
type LookupRoutingTableRouteResult struct {
	// Date-time when the route was created
	CreatedAt string `pulumi:"createdAt"`
	// Destination of the route.
	Destination GetRoutingTableRouteDestination `pulumi:"destination"`
	Id          string                          `pulumi:"id"`
	// Labels are key-value string pairs which can be attached to a resource container
	Labels map[string]string `pulumi:"labels"`
	// The network area ID to which the routing table is associated.
	NetworkAreaId string `pulumi:"networkAreaId"`
	// Next hop destination.
	NextHop GetRoutingTableRouteNextHop `pulumi:"nextHop"`
	// STACKIT organization ID to which the routing table is associated.
	OrganizationId string `pulumi:"organizationId"`
	// The resource region. If not defined, the provider region is used.
	Region *string `pulumi:"region"`
	// Route ID.
	RouteId string `pulumi:"routeId"`
	// The routing tables ID.
	RoutingTableId string `pulumi:"routingTableId"`
	// Date-time when the route was updated
	UpdatedAt string `pulumi:"updatedAt"`
}

func LookupRoutingTableRouteOutput(ctx *pulumi.Context, args LookupRoutingTableRouteOutputArgs, opts ...pulumi.InvokeOption) LookupRoutingTableRouteResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupRoutingTableRouteResultOutput, error) {
			args := v.(LookupRoutingTableRouteArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("stackit:index/getRoutingTableRoute:getRoutingTableRoute", args, LookupRoutingTableRouteResultOutput{}, options).(LookupRoutingTableRouteResultOutput), nil
		}).(LookupRoutingTableRouteResultOutput)
}

// A collection of arguments for invoking getRoutingTableRoute.
type LookupRoutingTableRouteOutputArgs struct {
	// The network area ID to which the routing table is associated.
	NetworkAreaId pulumi.StringInput `pulumi:"networkAreaId"`
	// STACKIT organization ID to which the routing table is associated.
	OrganizationId pulumi.StringInput `pulumi:"organizationId"`
	// The resource region. If not defined, the provider region is used.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Route ID.
	RouteId pulumi.StringInput `pulumi:"routeId"`
	// The routing tables ID.
	RoutingTableId pulumi.StringInput `pulumi:"routingTableId"`
}

func (LookupRoutingTableRouteOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRoutingTableRouteArgs)(nil)).Elem()
}

// A collection of values returned by getRoutingTableRoute.
type LookupRoutingTableRouteResultOutput struct{ *pulumi.OutputState }

func (LookupRoutingTableRouteResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRoutingTableRouteResult)(nil)).Elem()
}

func (o LookupRoutingTableRouteResultOutput) ToLookupRoutingTableRouteResultOutput() LookupRoutingTableRouteResultOutput {
	return o
}

func (o LookupRoutingTableRouteResultOutput) ToLookupRoutingTableRouteResultOutputWithContext(ctx context.Context) LookupRoutingTableRouteResultOutput {
	return o
}

// Date-time when the route was created
func (o LookupRoutingTableRouteResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRoutingTableRouteResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// Destination of the route.
func (o LookupRoutingTableRouteResultOutput) Destination() GetRoutingTableRouteDestinationOutput {
	return o.ApplyT(func(v LookupRoutingTableRouteResult) GetRoutingTableRouteDestination { return v.Destination }).(GetRoutingTableRouteDestinationOutput)
}

func (o LookupRoutingTableRouteResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRoutingTableRouteResult) string { return v.Id }).(pulumi.StringOutput)
}

// Labels are key-value string pairs which can be attached to a resource container
func (o LookupRoutingTableRouteResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupRoutingTableRouteResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// The network area ID to which the routing table is associated.
func (o LookupRoutingTableRouteResultOutput) NetworkAreaId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRoutingTableRouteResult) string { return v.NetworkAreaId }).(pulumi.StringOutput)
}

// Next hop destination.
func (o LookupRoutingTableRouteResultOutput) NextHop() GetRoutingTableRouteNextHopOutput {
	return o.ApplyT(func(v LookupRoutingTableRouteResult) GetRoutingTableRouteNextHop { return v.NextHop }).(GetRoutingTableRouteNextHopOutput)
}

// STACKIT organization ID to which the routing table is associated.
func (o LookupRoutingTableRouteResultOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRoutingTableRouteResult) string { return v.OrganizationId }).(pulumi.StringOutput)
}

// The resource region. If not defined, the provider region is used.
func (o LookupRoutingTableRouteResultOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRoutingTableRouteResult) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// Route ID.
func (o LookupRoutingTableRouteResultOutput) RouteId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRoutingTableRouteResult) string { return v.RouteId }).(pulumi.StringOutput)
}

// The routing tables ID.
func (o LookupRoutingTableRouteResultOutput) RoutingTableId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRoutingTableRouteResult) string { return v.RoutingTableId }).(pulumi.StringOutput)
}

// Date-time when the route was updated
func (o LookupRoutingTableRouteResultOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRoutingTableRouteResult) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRoutingTableRouteResultOutput{})
}
